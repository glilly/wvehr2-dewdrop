BARCODE PROGRAM
ZWR
^PRCT(446.4,0)="BARCODE PROGRAM^446.4I^5^4"
^PRCT(446.4,1,0)="EXPENDABLE PHYSICAL COUNT^PRCPH^^PHYSICAL-PRCPBALM^^0^^2940415^6^^^1"
^PRCT(446.4,1,1,0)="307^^308^308^2940926^^^^"
^PRCT(446.4,1,1,1,0)="                                 ::RGY/WASHINGTON-ISC@ALTOONA,PA - Expendable Physical count IRL program"
^PRCT(446.4,1,1,2,0)="                                 ::Version 3.01, 5/30/90"
^PRCT(446.4,1,1,3,0)="                                 ::"
^PRCT(446.4,1,1,4,0)="                                 ::V(2) = Record"
^PRCT(446.4,1,1,5,0)="                                 ::V(4) = Quantity"
^PRCT(446.4,1,1,6,0)="                                 ::"
^PRCT(446.4,1,1,7,0)="                                 ::The barcode label (record) contains the inventory point with the "
^PRCT(446.4,1,1,8,0)="                                 ::expendable item number.  For example: IE585883 38383.  The user wands the"
^PRCT(446.4,1,1,9,0)="                                 ::label and then enters quantity.  When the record is stored into the"
^PRCT(446.4,1,1,10,0)="                                 ::inventory file on barcode reader, the quantity is appended to the end"
^PRCT(446.4,1,1,11,0)="                                 ::of the record.  For example: If 'IE58589 322 18' would be inventory"
^PRCT(446.4,1,1,12,0)="                                 ::point 58589, part number 322 with a physical count of 18."
^PRCT(446.4,1,1,13,0)="                                 ::"
^PRCT(446.4,1,1,14,0)="OI(1000,20)                      ::Initialize a inventory file"
^PRCT(446.4,1,1,15,0)="OV(5,20)                         ::Initialize a variable file"
^PRCT(446.4,1,1,16,0)="                                 ::"
^PRCT(446.4,1,1,17,0)=".BEG                             ::     BEG"
^PRCT(446.4,1,1,18,0)="P""\e[2JCurrent Program""          ::Show user program name"
^PRCT(446.4,1,1,19,0)="P""is Expendable""                 ::  (cont)"
^PRCT(446.4,1,1,20,0)="P""Physical Count.""               ::  (cont)"
^PRCT(446.4,1,1,21,0)="P""Id: PRCPH""                     ::Print program identifier"
^PRCT(446.4,1,1,22,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,23,0)="H#1=I                            ::Set reg 1 to current rec # in invent file"
^PRCT(446.4,1,1,24,0)="G#1>0.DAT                        ::If data alread exist in ivent. file warn user"
^PRCT(446.4,1,1,25,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,26,0)="P""Please enter ...""              ::Ask user for ID"
^PRCT(446.4,1,1,27,0)="P""file ID: ""                     ::   (cont)"
^PRCT(446.4,1,1,28,0)="A                                ::User input of user ID"
^PRCT(446.4,1,1,29,0)="D$0=""ID""+$0                      ::Set first record to be ID"
^PRCT(446.4,1,1,30,0)="RI                               ::Store first record into inven file"
^PRCT(446.4,1,1,31,0)="                                 ::"
^PRCT(446.4,1,1,32,0)=".START                           ::     START"
^PRCT(446.4,1,1,33,0)="P""\e[2J1. Enter Inventory""       ::Clear screen and print menu"
^PRCT(446.4,1,1,34,0)="P""2. Transmit Data""              ::  (cont)"
^PRCT(446.4,1,1,35,0)="P""3. Review/Delete""              ::  (cont)"
^PRCT(446.4,1,1,36,0)="P""Enter (1-3): ""                 ::  (cont)"
^PRCT(446.4,1,1,37,0)="D$0=""""                           ::Initialize input string"
^PRCT(446.4,1,1,38,0)="A                                ::User input of option"
^PRCT(446.4,1,1,39,0)="G$0=""1"".ENTER                    ::If Enter Inventory selected, goto entry of invent."
^PRCT(446.4,1,1,40,0)="G$0=""2"".XMIT                     ::If transmit option selected, goto transmit data"
^PRCT(446.4,1,1,41,0)="G$0=""3"".REVDEL                   ::If Review/Delete option selected, goto review and del record"
^PRCT(446.4,1,1,42,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,43,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,44,0)="P""*** Error, enter a""            ::Print message of invalid input"
^PRCT(446.4,1,1,45,0)="P""number from 1-3.""              ::  (cont)"
^PRCT(446.4,1,1,46,0)="W5                               ::Wait 5 seconds to allow view of message"
^PRCT(446.4,1,1,47,0)="G.START                          ::Go back and display main menu"
^PRCT(446.4,1,1,48,0)="                                 ::"
^PRCT(446.4,1,1,49,0)=".ENTER                           ::     ENTER"
^PRCT(446.4,1,1,50,0)="H#1=I                            ::Set regist 1 to Num. of rec. in inven file"
^PRCT(446.4,1,1,51,0)="G#1>995.STOP                     ::If invent. file full, do not allow anymore entries"
^PRCT(446.4,1,1,52,0)="S#1>985.WARN                     ::If invent. file almost full, warn user"
^PRCT(446.4,1,1,53,0)="D$0=""\e[2J IE: ""+V(2)            ::Display current record"
^PRCT(446.4,1,1,54,0)="P$0                              ::  (cont)"
^PRCT(446.4,1,1,55,0)="D$0=""QTY: ""+V(4)                 ::Display Quantity"
^PRCT(446.4,1,1,56,0)="P$0                              ::  (cont)"
^PRCT(446.4,1,1,57,0)="P""   # ""                         ::Display input symbol for invent."
^PRCT(446.4,1,1,58,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,1,1,59,0)="A                                ::Allow user input of next invent. record"
^PRCT(446.4,1,1,60,0)="G$0=""F1"".DEL                     ::If input is the function key 1, delete record a start over"
^PRCT(446.4,1,1,61,0)="S$0=""."".STORE                    ::Store record"
^PRCT(446.4,1,1,62,0)="G$0=""."".START                    ::If input a ""."", goto back to main menu"
^PRCT(446.4,1,1,63,0)="D$1=$0M2,1                       ::Get code type of entry"
^PRCT(446.4,1,1,64,0)="G$1=""IE"".RECORD                  ::If code is ""IE"", goto entry of new record"
^PRCT(446.4,1,1,65,0)="G$0="""".ENTER                     ::If return entered, don't accept input"
^PRCT(446.4,1,1,66,0)="GV(2)="""".NOREC                   ::If qty entered with no record, goto error message"
^PRCT(446.4,1,1,67,0)="D#1=0                            ::Initialize character counter"
^PRCT(446.4,1,1,68,0)="D#3=0                            ::Initialize second number of Qty string"
^PRCT(446.4,1,1,69,0)="D#4=0                            ::Initialize first number of Qty string"
^PRCT(446.4,1,1,70,0)="D$1=""""                           ::Initialize current character (CC) of Qty string"
^PRCT(446.4,1,1,71,0)="D$2=""""                           ::Initialize current string of Qty string"
^PRCT(446.4,1,1,72,0)="D$3=""""                           ::Initialize operand of Qty string"
^PRCT(446.4,1,1,73,0)=".LP1                             ::     LP1"
^PRCT(446.4,1,1,74,0)="D#1=#1+1                         ::Increment character counter by 1"
^PRCT(446.4,1,1,75,0)="D$1=$0M1,#1                      ::Define CC of Qty string"
^PRCT(446.4,1,1,76,0)="G$1="""".LP1Q                      ::If CC of Qty string is null, then end of Qty string and Quit"
^PRCT(446.4,1,1,77,0)="C#5=$1                           ::Evaluate if CC is a number"
^PRCT(446.4,1,1,78,0)="CV(0)=#5                         ::  (cont)"
^PRCT(446.4,1,1,79,0)="GV(0)=$1.NUM                     ::If CC a number, goto save number"
^PRCT(446.4,1,1,80,0)="G$1=""T"".OPR                      ::If CC a ""T"", goto save operand string"
^PRCT(446.4,1,1,81,0)="G$1=""U"".OPR                      ::If CC a ""U"", goto save operand string"
^PRCT(446.4,1,1,82,0)=".ERROR                           ::If CC not a number or operand, then display invalid input"
^PRCT(446.4,1,1,83,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,84,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,85,0)="P""*** Error, unkown""             ::Print error message"
^PRCT(446.4,1,1,86,0)="P""operation in entry.""           ::  (cont)"
^PRCT(446.4,1,1,87,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,88,0)="G.ENTER                          ::Goto entry of next Inventory record"
^PRCT(446.4,1,1,89,0)=".NUM                             ::     NUM"
^PRCT(446.4,1,1,90,0)="D$2=$2+$1                        ::Define current string of Qty string"
^PRCT(446.4,1,1,91,0)="C#3=$2                           ::Define second number of Qty string"
^PRCT(446.4,1,1,92,0)="G.LP1                            ::Go back and get next character of Qty string"
^PRCT(446.4,1,1,93,0)=".OPR                             ::     OPR"
^PRCT(446.4,1,1,94,0)="G[$3]>0.ERROR                    ::If a operator alread exists, go to error message"
^PRCT(446.4,1,1,95,0)="D$3=$1                           ::Define operator string"
^PRCT(446.4,1,1,96,0)="C#4=$2                           ::Set first number of Qty string to current string"
^PRCT(446.4,1,1,97,0)="D$2=""""                           ::Initialize current string"
^PRCT(446.4,1,1,98,0)="G.LP1                            ::Go back and get next character"
^PRCT(446.4,1,1,99,0)="                                 ::"
^PRCT(446.4,1,1,100,0)=".LP1Q                            ::     LP1Q"
^PRCT(446.4,1,1,101,0)="C#2=V(4)                         ::Define current quatity of part"
^PRCT(446.4,1,1,102,0)="G$3=""T"".MUL                      ::If operator is ""T"", multiply numbers"
^PRCT(446.4,1,1,103,0)="G$3=""U"".MIN                      ::If operator is a ""U"", subtract numbers"
^PRCT(446.4,1,1,104,0)="G$3="""".PLUS                      ::If no operator exists, then goto add number"
^PRCT(446.4,1,1,105,0)=".SET                             ::     SET"
^PRCT(446.4,1,1,106,0)="C$0=#2                           ::Define current Qty"
^PRCT(446.4,1,1,107,0)="DV(4)=$0                         ::Define current Qty into local variable file"
^PRCT(446.4,1,1,108,0)="G.ENTER                          ::Go back and get next inventory record"
^PRCT(446.4,1,1,109,0)="                                 ::"
^PRCT(446.4,1,1,110,0)=".MUL                             ::     MUL"
^PRCT(446.4,1,1,111,0)="D#3=#3*#4                        ::Multiply second number entered and first number entered"
^PRCT(446.4,1,1,112,0)="D#2=#2+#3                        ::Add Muliplication to current Qty"
^PRCT(446.4,1,1,113,0)="G.SET                            ::Go and set new quantity"
^PRCT(446.4,1,1,114,0)="                                 ::"
^PRCT(446.4,1,1,115,0)=".MIN                             ::     MIN"
^PRCT(446.4,1,1,116,0)="D#2=#2-#3                        ::Subtract second number enter from current qty"
^PRCT(446.4,1,1,117,0)="D#2=#2+#4                        ::Add first number enter to current qty"
^PRCT(446.4,1,1,118,0)="G.SET                            ::Go and set new quantity"
^PRCT(446.4,1,1,119,0)="                                 ::"
^PRCT(446.4,1,1,120,0)=".PLUS                            ::     PLUS"
^PRCT(446.4,1,1,121,0)="D#2=#2+#3                        ::Add second number entered to current qty"
^PRCT(446.4,1,1,122,0)="D#2=#2+#4                        ::Add first number entered to current qty"
^PRCT(446.4,1,1,123,0)="G.SET                            ::Go and set new quantity"
^PRCT(446.4,1,1,124,0)="                                 ::"
^PRCT(446.4,1,1,125,0)=".STORE                           ::     STORE"
^PRCT(446.4,1,1,126,0)="QV(2)=""""                         ::Quit provided no record"
^PRCT(446.4,1,1,127,0)="SV(4)="""".NOQTY                   ::If not quantity, warn user"
^PRCT(446.4,1,1,128,0)="D$1=$0                           ::Store record into scratch variable"
^PRCT(446.4,1,1,129,0)="D$0=V(2)+"" ""                     ::Create record with quantity"
^PRCT(446.4,1,1,130,0)="D$0=$0+V(4)                      ::  (cont)"
^PRCT(446.4,1,1,131,0)="RI                               ::Store quanatity into inventory file"
^PRCT(446.4,1,1,132,0)="D$0=$1                           ::Restore record"
^PRCT(446.4,1,1,133,0)="DV(2)=""""                         ::Initialize record"
^PRCT(446.4,1,1,134,0)="DV(4)=""""                         ::Initialize quantity"
^PRCT(446.4,1,1,135,0)="Q                                ::Quit subroutine"
^PRCT(446.4,1,1,136,0)="                                 ::"
^PRCT(446.4,1,1,137,0)=".RECORD                          ::     RECORD"
^PRCT(446.4,1,1,138,0)="S.STORE"
^PRCT(446.4,1,1,139,0)="DV(2)=$0                         ::Store record into scratch variable"
^PRCT(446.4,1,1,140,0)="DV(4)=""""                         ::Reset QTY"
^PRCT(446.4,1,1,141,0)="G.ENTER                          ::Goto entry of next record"
^PRCT(446.4,1,1,142,0)="                                 ::"
^PRCT(446.4,1,1,143,0)=".REVDEL                          ::     REVDEL"
^PRCT(446.4,1,1,144,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,145,0)="P""How far back do""               ::Ask user how many records to go back"
^PRCT(446.4,1,1,146,0)="P""you want to go""                ::  (cont)"
^PRCT(446.4,1,1,147,0)="P""(0 to quit) ? ""                ::  (cont)"
^PRCT(446.4,1,1,148,0)="D$0=""""                           ::Initialize input string"
^PRCT(446.4,1,1,149,0)="N1,2                             ::User input of 1 or 3 numerics"
^PRCT(446.4,1,1,150,0)="G$0=""0"".START                    ::If input is a 0, go back to main menu"
^PRCT(446.4,1,1,151,0)="C#2=$0                           ::Put input into numeric variable"
^PRCT(446.4,1,1,152,0)="H#1=I                            ::Put number of records in inventory file into variable"
^PRCT(446.4,1,1,153,0)="D#2=#1-#2                        ::Define the record to start display"
^PRCT(446.4,1,1,154,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,155,0)=".LP2                             ::     LP2"
^PRCT(446.4,1,1,156,0)="G#2=#1.EOTRAN                    ::If all records displayed, ask which record to delete"
^PRCT(446.4,1,1,157,0)="C$2=#2                           ::Setup display of record"
^PRCT(446.4,1,1,158,0)="D$0=$2+"") ""                      ::  (cont)"
^PRCT(446.4,1,1,159,0)="D$0=$0+I(#2)                     ::  (cont)"
^PRCT(446.4,1,1,160,0)="P$0                              ::Show record to user"
^PRCT(446.4,1,1,161,0)="W3                               ::Wait three seconds to allow viewing of record"
^PRCT(446.4,1,1,162,0)="D#2=#2+1                         ::Increment record counter"
^PRCT(446.4,1,1,163,0)="G.LP2                            ::Goo get next record"
^PRCT(446.4,1,1,164,0)=".EOTRAN                          ::     EOTRAN"
^PRCT(446.4,1,1,165,0)="P""*** END ***""                   ::Display to user End of Records"
^PRCT(446.4,1,1,166,0)="W5                               ::Wait five seconds for user review of display"
^PRCT(446.4,1,1,167,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,168,0)="P""Which record do you""           ::Asj user shich record to delete"
^PRCT(446.4,1,1,169,0)="P""want to delete""                ::  (cont)"
^PRCT(446.4,1,1,170,0)="P""(0 to quit) ? ""                ::  (cont)"
^PRCT(446.4,1,1,171,0)="D$0=""""                           ::Initialize input string"
^PRCT(446.4,1,1,172,0)="N1,2,3                           ::Allow user input of 1,2 or 3 numberics"
^PRCT(446.4,1,1,173,0)="G$0=""0"".START                    ::If user enters a 0, go back to main menu"
^PRCT(446.4,1,1,174,0)="C#1=$0                           ::Define input as a number"
^PRCT(446.4,1,1,175,0)=".ASK1                            ::     ASK1"
^PRCT(446.4,1,1,176,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,177,0)="C$0=#1                           ::Setup display of record before deletion"
^PRCT(446.4,1,1,178,0)="D$0=""*** Record ""+$0             ::  (cont)"
^PRCT(446.4,1,1,179,0)="D$0=$0+"" ***""                    ::  (cont)"
^PRCT(446.4,1,1,180,0)="P$0                              ::Print display of record"
^PRCT(446.4,1,1,181,0)="PI(#1)                           ::  (cont)"
^PRCT(446.4,1,1,182,0)="P""Are you ...""                   ::Ask user for verification before deletion"
^PRCT(446.4,1,1,183,0)="P""... sure (Y/N) ?""              ::  (cont)"
^PRCT(446.4,1,1,184,0)="D$0=""""                           ::Initialize input string"
^PRCT(446.4,1,1,185,0)="A1                               ::Allow user input of one character only"
^PRCT(446.4,1,1,186,0)="G$0=""."".START                    ::If input a period, go back to main menu"
^PRCT(446.4,1,1,187,0)="G$0=""N"".REVDEL                   ::If input a ""N"", then ask which record again"
^PRCT(446.4,1,1,188,0)="G$0=""Y"".DELREC                   ::If input a ""Y"", go delete record"
^PRCT(446.4,1,1,189,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,190,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,191,0)="P""*** Error, enter""              ::Tell user a Y or N must be entered"
^PRCT(446.4,1,1,192,0)="P""a Y or N.""                     ::  (cont)"
^PRCT(446.4,1,1,193,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,194,0)="G.ASK1                           ::Go back and ask ""ok to delete"" question"
^PRCT(446.4,1,1,195,0)="                                 ::"
^PRCT(446.4,1,1,196,0)=".DELREC                          ::     DELREC"
^PRCT(446.4,1,1,197,0)="DI(#1)=""*Deleted*""               ::Set record in inventory file to null to show deletion"
^PRCT(446.4,1,1,198,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,199,0)="P"" ""                             ::Tell user the record has been deleted"
^PRCT(446.4,1,1,200,0)="P""* Record Deleted *""            ::  (cont)"
^PRCT(446.4,1,1,201,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,202,0)="G.REVDEL                         ::Go back and ask what records to view for deletion"
^PRCT(446.4,1,1,203,0)="                                 ::"
^PRCT(446.4,1,1,204,0)=".XMIT                            ::     XMIT"
^PRCT(446.4,1,1,205,0)="D$0=""PRCPH""                      ::Define data identifier"
^PRCT(446.4,1,1,206,0)="XMP,$0                           ::Send data idnetifier to host system"
^PRCT(446.4,1,1,207,0)="XMP,I                            ::Transmit the inventory file to external device"
^PRCT(446.4,1,1,208,0)="H#1=I                            ::Find how many records exist in inventory file"
^PRCT(446.4,1,1,209,0)="C$0=#1                           ::Set string variable to number of records"
^PRCT(446.4,1,1,210,0)="D$0=""***END***^""+$0              ::Setup End of file message"
^PRCT(446.4,1,1,211,0)="XMP,$0                           ::Send end of file message to external device"
^PRCT(446.4,1,1,212,0)="                                 ::"
^PRCT(446.4,1,1,213,0)=".ASK                             ::     ASK"
^PRCT(446.4,1,1,214,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,215,0)="P""Data xmitted, do""              ::Display confirmation of transmission message"
^PRCT(446.4,1,1,216,0)="P""you want to purge""             ::  (cont)"
^PRCT(446.4,1,1,217,0)="P""the file (Y/N) ? ""             ::  (cont)"
^PRCT(446.4,1,1,218,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,1,1,219,0)="A                                ::Allow user input"
^PRCT(446.4,1,1,220,0)="G$0=""Y"".PUR                      ::If user input is a ""Y"", go and purge inventory file"
^PRCT(446.4,1,1,221,0)="G$0=""N"".START                    ::If user input is a ""N"", go back to main menu"
^PRCT(446.4,1,1,222,0)="G$0=""."".START                    ::If user input is a ""."", go back to main menu"
^PRCT(446.4,1,1,223,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,224,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,225,0)="P""Please enter a ""               ::Display error message"
^PRCT(446.4,1,1,226,0)="P""Y or N.""                       ::  (cont)"
^PRCT(446.4,1,1,227,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,228,0)="G.ASK                            ::Go back and ask purge question"
^PRCT(446.4,1,1,229,0)=".PUR                             ::     PUR"
^PRCT(446.4,1,1,230,0)="HI=0                             ::Purge of inventory file"
^PRCT(446.4,1,1,231,0)="HV=0                             ::Purge of local variable file"
^PRCT(446.4,1,1,232,0)="B0                               ::Sound beep one time"
^PRCT(446.4,1,1,233,0)="P""** File Purged **""             ::Inform user of purged file"
^PRCT(446.4,1,1,234,0)="W3                               ::Wait three seconds to allow view of message"
^PRCT(446.4,1,1,235,0)="G.BEG                            ::Go back to begining of program"
^PRCT(446.4,1,1,236,0)="                                 ::"
^PRCT(446.4,1,1,237,0)=".DEL                             ::     DEL"
^PRCT(446.4,1,1,238,0)="DV(4)=""""                         ::Initialize Qty"
^PRCT(446.4,1,1,239,0)="G.ENTER                          ::Go back to enter inventory record"
^PRCT(446.4,1,1,240,0)="                                 ::"
^PRCT(446.4,1,1,241,0)=".CLR                             ::     CLR"
^PRCT(446.4,1,1,242,0)="P""\e[2J""                         ::Clear screen escape sequence"
^PRCT(446.4,1,1,243,0)="Q                                ::Quit subroutine"
^PRCT(446.4,1,1,244,0)="                                 ::"
^PRCT(446.4,1,1,245,0)=".NOREC                           ::     NOREC"
^PRCT(446.4,1,1,246,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,247,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,248,0)="P""*** Error, enter a""            ::Print error message"
^PRCT(446.4,1,1,249,0)="P""part number first.""            ::  (cont)"
^PRCT(446.4,1,1,250,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,251,0)="G.ENTER                          ::Go back to enter inventory record"
^PRCT(446.4,1,1,252,0)="                                 ::"
^PRCT(446.4,1,1,253,0)=".WARN                            ::     WARN"
^PRCT(446.4,1,1,254,0)="B0                               ::Sound beep"
^PRCT(446.4,1,1,255,0)="P""\e[2J**** WARNING ****""        ::Clear screen andprint warning message"
^PRCT(446.4,1,1,256,0)="P""Data file is almost""           ::  (cont)"
^PRCT(446.4,1,1,257,0)="P""full.  Please XMIT""            ::  (cont)"
^PRCT(446.4,1,1,258,0)="P""data and purge file.""          ::  (cont)"
^PRCT(446.4,1,1,259,0)="W3                               ::Wait three seconds to allow view of message"
^PRCT(446.4,1,1,260,0)="Q                                ::Quit subroutine"
^PRCT(446.4,1,1,261,0)="                                 ::"
^PRCT(446.4,1,1,262,0)=".NOQTY                           ::     NOQTY"
^PRCT(446.4,1,1,263,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,264,0)="P""\e[2JWARNING: No qty""          ::Print warning message"
^PRCT(446.4,1,1,265,0)="P""was entered for""               ::  (cont)"
^PRCT(446.4,1,1,266,0)="P""part #:""                       ::  (cont)"
^PRCT(446.4,1,1,267,0)="PV(2)                            ::Print part #"
^PRCT(446.4,1,1,268,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,269,0)="Q                                ::Quit subroutine"
^PRCT(446.4,1,1,270,0)="                                 ::"
^PRCT(446.4,1,1,271,0)=".STOP                            ::     STOP"
^PRCT(446.4,1,1,272,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,273,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,274,0)="P""Sorry, data file is""           ::Print error message"
^PRCT(446.4,1,1,275,0)="P""FULL, you must XMIT""           ::  (cont)"
^PRCT(446.4,1,1,276,0)="P""and purge file.""               ::  (cont)"
^PRCT(446.4,1,1,277,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,278,0)="G.START                          ::Go back to main menu"
^PRCT(446.4,1,1,279,0)="                                 ::"
^PRCT(446.4,1,1,280,0)=".DAT                             ::     DAT"
^PRCT(446.4,1,1,281,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,282,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,283,0)="P""*** WARNING ***""               ::Print warning message of existing data"
^PRCT(446.4,1,1,284,0)="P""Data exists on""                ::  (cont)"
^PRCT(446.4,1,1,285,0)="P""this barcode reader.""          ::  (cont)"
^PRCT(446.4,1,1,286,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,287,0)="P""The first record in""           ::Display first record to user"
^PRCT(446.4,1,1,288,0)="P""this file""                     ::  (cont)"
^PRCT(446.4,1,1,289,0)="D$0=""is: ""+I(0)                  ::Setup display of first record"
^PRCT(446.4,1,1,290,0)="P$0                              ::Print first record"
^PRCT(446.4,1,1,291,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,292,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,293,0)="P""Do you want to""                ::Query user to purge existing file"
^PRCT(446.4,1,1,294,0)="P""purge this file ...""           ::  (cont)"
^PRCT(446.4,1,1,295,0)="P""... (Y/N) ? ""                  ::  (cont)"
^PRCT(446.4,1,1,296,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,1,1,297,0)="A                                ::User input"
^PRCT(446.4,1,1,298,0)="G$0=""Y"".PUR                      ::If user input is a ""Y"", go and purge files"
^PRCT(446.4,1,1,299,0)="G$0=""N"".START                    ::If user input a ""N"", go to main menu"
^PRCT(446.4,1,1,300,0)="G$0=""."".START                    ::If user input is a ""."", go to main menu"
^PRCT(446.4,1,1,301,0)="B00                              ::Sound beep two times"
^PRCT(446.4,1,1,302,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,1,1,303,0)="P""Please enter a ""               ::Display error message"
^PRCT(446.4,1,1,304,0)="P""Y or N.""                       ::  (cont)"
^PRCT(446.4,1,1,305,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,1,1,306,0)="G.DAT                            ::Go back to existing data question"
^PRCT(446.4,1,1,307,0)="                                 ::"
^PRCT(446.4,1,1,308,0)="E                                ::End of program"
^PRCT(446.4,1,2,0)="^446.42DI^2^2"
^PRCT(446.4,1,2,1,0)="2940831.1004^65^RTN IS M"
^PRCT(446.4,1,2,1,1,0)="^^10^10^2941206^"
^PRCT(446.4,1,2,1,1,1,0)="34"
^PRCT(446.4,1,2,1,1,2,0)="1234"
^PRCT(446.4,1,2,1,1,3,0)="123"
^PRCT(446.4,1,2,1,1,4,0)="412351246w13413"
^PRCT(446.4,1,2,1,1,5,0)="4f134"
^PRCT(446.4,1,2,1,1,6,0)="134f13e"
^PRCT(446.4,1,2,1,1,7,0)="t"
^PRCT(446.4,1,2,1,1,8,0)="134"
^PRCT(446.4,1,2,1,1,9,0)="t"
^PRCT(446.4,1,2,1,1,10,0)="4f134t^^"
^PRCT(446.4,1,2,2,0)="2941206.153"
^PRCT(446.4,1,2,"B",2940831.1004,1)=""
^PRCT(446.4,1,2,"B",2941206.153,2)=""
^PRCT(446.4,2,0)="EXPENDABLE USAGE^PRCUS^^USAGE-PRCPBALM^^1^^2940414^6^^^1"
^PRCT(446.4,2,1,0)="307^^308^308^2921207^^^^"
^PRCT(446.4,2,1,1,0)="::RGY/WASHINGTON-ISC@ALTOONA,PA - Expendable Usuage IRL program"
^PRCT(446.4,2,1,2,0)="::Version 3.01, 5/30/90"
^PRCT(446.4,2,1,3,0)="::"
^PRCT(446.4,2,1,4,0)="::V(2) = Record"
^PRCT(446.4,2,1,5,0)="::V(4) = Quantity"
^PRCT(446.4,2,1,6,0)="::"
^PRCT(446.4,2,1,7,0)="::The barcode label (record) contains the inventory point with the "
^PRCT(446.4,2,1,8,0)="::expendable item number.  For example: IE585883 38383.  The user wands the"
^PRCT(446.4,2,1,9,0)="::label and then enters quantity.  When the record is stored into the"
^PRCT(446.4,2,1,10,0)="::inventory file on barcode reader, the quantity is appended to the end"
^PRCT(446.4,2,1,11,0)="::of the record.  For example: If 'IE58589 322 18' would be inventory"
^PRCT(446.4,2,1,12,0)="::point 58589, part number 322 with a usuage of 18."
^PRCT(446.4,2,1,13,0)="::"
^PRCT(446.4,2,1,14,0)="OI(1000,20)                      ::Initialize a inventory file"
^PRCT(446.4,2,1,15,0)="OV(5,20)                         ::Initialize a variable file"
^PRCT(446.4,2,1,16,0)="                                 ::"
^PRCT(446.4,2,1,17,0)=".BEG                             ::     BEG"
^PRCT(446.4,2,1,18,0)="P""\e[2JCurrent Program""          ::Show user program name"
^PRCT(446.4,2,1,19,0)="P""is Expendable Usage""           ::  (cont)"
^PRCT(446.4,2,1,20,0)="                                 ::Blank line"
^PRCT(446.4,2,1,21,0)="P""Id: PRCUS""                     ::Print program identifier"
^PRCT(446.4,2,1,22,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,23,0)="H#1=I                            ::Set reg 1 to current rec # in invent file"
^PRCT(446.4,2,1,24,0)="G#1>0.DAT                        ::If data alread exist in ivent. file warn user"
^PRCT(446.4,2,1,25,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,26,0)="P""Please enter ...""              ::Ask user for ID"
^PRCT(446.4,2,1,27,0)="P""file ID: ""                     ::   (cont)"
^PRCT(446.4,2,1,28,0)="A                                ::User input of user ID"
^PRCT(446.4,2,1,29,0)="D$0=""ID""+$0                      ::Set first record to be ID"
^PRCT(446.4,2,1,30,0)="RI                               ::Store first record into inven file"
^PRCT(446.4,2,1,31,0)="                                 ::"
^PRCT(446.4,2,1,32,0)=".START                           ::     START"
^PRCT(446.4,2,1,33,0)="P""\e[2J1. Enter Inventory""       ::Clear screen and print menu"
^PRCT(446.4,2,1,34,0)="P""2. Transmit Data""              ::  (cont)"
^PRCT(446.4,2,1,35,0)="P""3. Review/Delete""              ::  (cont)"
^PRCT(446.4,2,1,36,0)="P""Enter (1-3): ""                 ::  (cont)"
^PRCT(446.4,2,1,37,0)="D$0=""""                           ::Initialize input string"
^PRCT(446.4,2,1,38,0)="A                                ::User input of option"
^PRCT(446.4,2,1,39,0)="G$0=""1"".ENTER                    ::If Enter Inventory selected, goto entry of invent."
^PRCT(446.4,2,1,40,0)="G$0=""2"".XMIT                     ::If transmit option selected, goto transmit data"
^PRCT(446.4,2,1,41,0)="G$0=""3"".REVDEL                   ::If Review/Delete option selected, goto review and del record"
^PRCT(446.4,2,1,42,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,43,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,44,0)="P""*** Error, enter a""            ::Print message of invalid input"
^PRCT(446.4,2,1,45,0)="P""number from 1-3.""              ::  (cont)"
^PRCT(446.4,2,1,46,0)="W5                               ::Wait 5 seconds to allow view of message"
^PRCT(446.4,2,1,47,0)="G.START                          ::Go back and display main menu"
^PRCT(446.4,2,1,48,0)="                                 ::"
^PRCT(446.4,2,1,49,0)=".ENTER                           ::     ENTER"
^PRCT(446.4,2,1,50,0)="H#1=I                            ::Set regist 1 to Num. of rec. in inven file"
^PRCT(446.4,2,1,51,0)="G#1>995.STOP                     ::If invent. file full, do not allow anymore entries"
^PRCT(446.4,2,1,52,0)="S#1>985.WARN                     ::If invent. file almost full, warn user"
^PRCT(446.4,2,1,53,0)="D$0=""\e[2J IE: ""+V(2)            ::Display current record"
^PRCT(446.4,2,1,54,0)="P$0                              ::  (cont)"
^PRCT(446.4,2,1,55,0)="D$0=""QTY: ""+V(4)                 ::Display Quantity"
^PRCT(446.4,2,1,56,0)="P$0                              ::  (cont)"
^PRCT(446.4,2,1,57,0)="P""   # ""                         ::Display input symbol for invent."
^PRCT(446.4,2,1,58,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,2,1,59,0)="A                                ::Allow user input of next invent. record"
^PRCT(446.4,2,1,60,0)="G$0=""F1"".DEL                     ::If input is the function key 1, delete record a start over"
^PRCT(446.4,2,1,61,0)="S$0=""."".STORE                    ::Store record"
^PRCT(446.4,2,1,62,0)="G$0=""."".START                    ::If input a ""."", goto back to main menu"
^PRCT(446.4,2,1,63,0)="D$1=$0M2,1                       ::Get code type of entry"
^PRCT(446.4,2,1,64,0)="G$1=""IE"".RECORD                  ::If code is ""IE"", goto entry of new record"
^PRCT(446.4,2,1,65,0)="G$0="""".ENTER                     ::If return entered, don't accept input"
^PRCT(446.4,2,1,66,0)="GV(2)="""".NOREC                   ::If qty entered with no record, goto error message"
^PRCT(446.4,2,1,67,0)="D#1=0                            ::Initialize character counter"
^PRCT(446.4,2,1,68,0)="D#3=0                            ::Initialize second number of Qty string"
^PRCT(446.4,2,1,69,0)="D#4=0                            ::Initialize first number of Qty string"
^PRCT(446.4,2,1,70,0)="D$1=""""                           ::Initialize current character (CC) of Qty string"
^PRCT(446.4,2,1,71,0)="D$2=""""                           ::Initialize current string of Qty string"
^PRCT(446.4,2,1,72,0)="D$3=""""                           ::Initialize operand of Qty string"
^PRCT(446.4,2,1,73,0)=".LP1                             ::     LP1"
^PRCT(446.4,2,1,74,0)="D#1=#1+1                         ::Increment character counter by 1"
^PRCT(446.4,2,1,75,0)="D$1=$0M1,#1                      ::Define CC of Qty string"
^PRCT(446.4,2,1,76,0)="G$1="""".LP1Q                      ::If CC of Qty string is null, then end of Qty string and Quit"
^PRCT(446.4,2,1,77,0)="C#5=$1                           ::Evaluate if CC is a number"
^PRCT(446.4,2,1,78,0)="CV(0)=#5                         ::  (cont)"
^PRCT(446.4,2,1,79,0)="GV(0)=$1.NUM                     ::If CC a number, goto save number"
^PRCT(446.4,2,1,80,0)="G$1=""T"".OPR                      ::If CC a ""T"", goto save operand string"
^PRCT(446.4,2,1,81,0)="G$1=""U"".OPR                      ::If CC a ""U"", goto save operand string"
^PRCT(446.4,2,1,82,0)=".ERROR                           ::If CC not a number or operand, then display invalid input"
^PRCT(446.4,2,1,83,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,84,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,85,0)="P""*** Error, unkown""             ::Print error message"
^PRCT(446.4,2,1,86,0)="P""operation in entry.""           ::  (cont)"
^PRCT(446.4,2,1,87,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,88,0)="G.ENTER                          ::Goto entry of next Inventory record"
^PRCT(446.4,2,1,89,0)=".NUM                             ::     NUM"
^PRCT(446.4,2,1,90,0)="D$2=$2+$1                        ::Define current string of Qty string"
^PRCT(446.4,2,1,91,0)="C#3=$2                           ::Define second number of Qty string"
^PRCT(446.4,2,1,92,0)="G.LP1                            ::Go back and get next character of Qty string"
^PRCT(446.4,2,1,93,0)=".OPR                             ::     OPR"
^PRCT(446.4,2,1,94,0)="G[$3]>0.ERROR                    ::If a operator alread exists, go to error message"
^PRCT(446.4,2,1,95,0)="D$3=$1                           ::Define operator string"
^PRCT(446.4,2,1,96,0)="C#4=$2                           ::Set first number of Qty string to current string"
^PRCT(446.4,2,1,97,0)="D$2=""""                           ::Initialize current string"
^PRCT(446.4,2,1,98,0)="G.LP1                            ::Go back and get next character"
^PRCT(446.4,2,1,99,0)="                                 ::"
^PRCT(446.4,2,1,100,0)=".LP1Q                            ::     LP1Q"
^PRCT(446.4,2,1,101,0)="C#2=V(4)                         ::Define current quatity of part"
^PRCT(446.4,2,1,102,0)="G$3=""T"".MUL                      ::If operator is ""T"", multiply numbers"
^PRCT(446.4,2,1,103,0)="G$3=""U"".MIN                      ::If operator is a ""U"", subtract numbers"
^PRCT(446.4,2,1,104,0)="G$3="""".PLUS                      ::If no operator exists, then goto add number"
^PRCT(446.4,2,1,105,0)=".SET                             ::     SET"
^PRCT(446.4,2,1,106,0)="C$0=#2                           ::Define current Qty"
^PRCT(446.4,2,1,107,0)="DV(4)=$0                         ::Define current Qty into local variable file"
^PRCT(446.4,2,1,108,0)="G.ENTER                          ::Go back and get next inventory record"
^PRCT(446.4,2,1,109,0)="                                 ::"
^PRCT(446.4,2,1,110,0)=".MUL                             ::     MUL"
^PRCT(446.4,2,1,111,0)="D#3=#3*#4                        ::Multiply second number entered and first number entered"
^PRCT(446.4,2,1,112,0)="D#2=#2+#3                        ::Add Muliplication to current Qty"
^PRCT(446.4,2,1,113,0)="G.SET                            ::Go and set new quantity"
^PRCT(446.4,2,1,114,0)="                                 ::"
^PRCT(446.4,2,1,115,0)=".MIN                             ::     MIN"
^PRCT(446.4,2,1,116,0)="D#2=#2-#3                        ::Subtract second number enter from current qty"
^PRCT(446.4,2,1,117,0)="D#2=#2+#4                        ::Add first number enter to current qty"
^PRCT(446.4,2,1,118,0)="G.SET                            ::Go and set new quantity"
^PRCT(446.4,2,1,119,0)="                                 ::"
^PRCT(446.4,2,1,120,0)=".PLUS                            ::     PLUS"
^PRCT(446.4,2,1,121,0)="D#2=#2+#3                        ::Add second number entered to current qty"
^PRCT(446.4,2,1,122,0)="D#2=#2+#4                        ::Add first number entered to current qty"
^PRCT(446.4,2,1,123,0)="G.SET                            ::Go and set new quantity"
^PRCT(446.4,2,1,124,0)="                                 ::"
^PRCT(446.4,2,1,125,0)=".STORE                           ::     STORE"
^PRCT(446.4,2,1,126,0)="QV(2)=""""                         ::Quit provided no record"
^PRCT(446.4,2,1,127,0)="SV(4)="""".NOQTY                   ::If not quantity, warn user"
^PRCT(446.4,2,1,128,0)="D$1=$0                           ::Store record into scratch variable"
^PRCT(446.4,2,1,129,0)="D$0=V(2)+"" ""                     ::Create record with quantity"
^PRCT(446.4,2,1,130,0)="D$0=$0+V(4)                      ::  (cont)"
^PRCT(446.4,2,1,131,0)="RI                               ::Store quanatity into inventory file"
^PRCT(446.4,2,1,132,0)="D$0=$1                           ::Restore record"
^PRCT(446.4,2,1,133,0)="DV(2)=""""                         ::Initialize record"
^PRCT(446.4,2,1,134,0)="DV(4)=""""                         ::Initialize quantity"
^PRCT(446.4,2,1,135,0)="Q                                ::Quit subroutine"
^PRCT(446.4,2,1,136,0)="                                 ::"
^PRCT(446.4,2,1,137,0)=".RECORD                          ::     RECORD"
^PRCT(446.4,2,1,138,0)="S.STORE"
^PRCT(446.4,2,1,139,0)="DV(2)=$0                         ::Store record into scratch variable"
^PRCT(446.4,2,1,140,0)="DV(4)=""""                         ::Reset QTY"
^PRCT(446.4,2,1,141,0)="G.ENTER                          ::Goto entry of next record"
^PRCT(446.4,2,1,142,0)="                                 ::"
^PRCT(446.4,2,1,143,0)=".REVDEL                          ::     REVDEL"
^PRCT(446.4,2,1,144,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,145,0)="P""How far back do""               ::Ask user how many records to go back"
^PRCT(446.4,2,1,146,0)="P""you want to go""                ::  (cont)"
^PRCT(446.4,2,1,147,0)="P""(0 to quit) ? ""                ::  (cont)"
^PRCT(446.4,2,1,148,0)="D$0=""""                           ::Initialize input string"
^PRCT(446.4,2,1,149,0)="N1,2                             ::User input of 1 or 3 numerics"
^PRCT(446.4,2,1,150,0)="G$0=""0"".START                    ::If input is a 0, go back to main menu"
^PRCT(446.4,2,1,151,0)="C#2=$0                           ::Put input into numeric variable"
^PRCT(446.4,2,1,152,0)="H#1=I                            ::Put number of records in inventory file into variable"
^PRCT(446.4,2,1,153,0)="D#2=#1-#2                        ::Define the record to start display"
^PRCT(446.4,2,1,154,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,155,0)=".LP2                             ::     LP2"
^PRCT(446.4,2,1,156,0)="G#2=#1.EOTRAN                    ::If all records displayed, ask which record to delete"
^PRCT(446.4,2,1,157,0)="C$2=#2                           ::Setup display of record"
^PRCT(446.4,2,1,158,0)="D$0=$2+"") ""                      ::  (cont)"
^PRCT(446.4,2,1,159,0)="D$0=$0+I(#2)                     ::  (cont)"
^PRCT(446.4,2,1,160,0)="P$0                              ::Show record to user"
^PRCT(446.4,2,1,161,0)="W3                               ::Wait three seconds to allow viewing of record"
^PRCT(446.4,2,1,162,0)="D#2=#2+1                         ::Increment record counter"
^PRCT(446.4,2,1,163,0)="G.LP2                            ::Goo get next record"
^PRCT(446.4,2,1,164,0)=".EOTRAN                          ::     EOTRAN"
^PRCT(446.4,2,1,165,0)="P""*** END ***""                   ::Display to user End of Records"
^PRCT(446.4,2,1,166,0)="W5                               ::Wait five seconds for user review of display"
^PRCT(446.4,2,1,167,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,168,0)="P""Which record do you""           ::Asj user shich record to delete"
^PRCT(446.4,2,1,169,0)="P""want to delete""                ::  (cont)"
^PRCT(446.4,2,1,170,0)="P""(0 to quit) ? ""                ::  (cont)"
^PRCT(446.4,2,1,171,0)="D$0=""""                           ::Initialize input string"
^PRCT(446.4,2,1,172,0)="N1,2,3                           ::Allow user input of 1,2 or 3 numberics"
^PRCT(446.4,2,1,173,0)="G$0=""0"".START                    ::If user enters a 0, go back to main menu"
^PRCT(446.4,2,1,174,0)="C#1=$0                           ::Define input as a number"
^PRCT(446.4,2,1,175,0)=".ASK1                            ::     ASK1"
^PRCT(446.4,2,1,176,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,177,0)="C$0=#1                           ::Setup display of record before deletion"
^PRCT(446.4,2,1,178,0)="D$0=""*** Record ""+$0             ::  (cont)"
^PRCT(446.4,2,1,179,0)="D$0=$0+"" ***""                    ::  (cont)"
^PRCT(446.4,2,1,180,0)="P$0                              ::Print display of record"
^PRCT(446.4,2,1,181,0)="PI(#1)                           ::  (cont)"
^PRCT(446.4,2,1,182,0)="P""Are you ...""                   ::Ask user for verification before deletion"
^PRCT(446.4,2,1,183,0)="P""... sure (Y/N) ?""              ::  (cont)"
^PRCT(446.4,2,1,184,0)="D$0=""""                           ::Initialize input string"
^PRCT(446.4,2,1,185,0)="A1                               ::Allow user input of one character only"
^PRCT(446.4,2,1,186,0)="G$0=""."".START                    ::If input a period, go back to main menu"
^PRCT(446.4,2,1,187,0)="G$0=""N"".REVDEL                   ::If input a ""N"", then ask which record again"
^PRCT(446.4,2,1,188,0)="G$0=""Y"".DELREC                   ::If input a ""Y"", go delete record"
^PRCT(446.4,2,1,189,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,190,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,191,0)="P""*** Error, enter""              ::Tell user a Y or N must be entered"
^PRCT(446.4,2,1,192,0)="P""a Y or N.""                     ::  (cont)"
^PRCT(446.4,2,1,193,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,194,0)="G.ASK1                           ::Go back and ask ""ok to delete"" question"
^PRCT(446.4,2,1,195,0)="                                 ::"
^PRCT(446.4,2,1,196,0)=".DELREC                          ::     DELREC"
^PRCT(446.4,2,1,197,0)="DI(#1)=""*Deleted*""               ::Set record in inventory file to null to show deletion"
^PRCT(446.4,2,1,198,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,199,0)="P"" ""                             ::Tell user the record has been deleted"
^PRCT(446.4,2,1,200,0)="P""* Record Deleted *""            ::  (cont)"
^PRCT(446.4,2,1,201,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,202,0)="G.REVDEL                         ::Go back and ask what records to view for deletion"
^PRCT(446.4,2,1,203,0)="                                 ::"
^PRCT(446.4,2,1,204,0)=".XMIT                            ::     XMIT"
^PRCT(446.4,2,1,205,0)="D$0=""PRCUS""                      ::Define data identifier"
^PRCT(446.4,2,1,206,0)="XMP,$0                           ::Send data idnetifier to host system"
^PRCT(446.4,2,1,207,0)="XMP,I                            ::Transmit the inventory file to external device"
^PRCT(446.4,2,1,208,0)="H#1=I                            ::Find how many records exist in inventory file"
^PRCT(446.4,2,1,209,0)="C$0=#1                           ::Set string variable to number of records"
^PRCT(446.4,2,1,210,0)="D$0=""***END***^""+$0              ::Setup End of file message"
^PRCT(446.4,2,1,211,0)="XMP,$0                           ::Send end of file message to external device"
^PRCT(446.4,2,1,212,0)="                                 ::"
^PRCT(446.4,2,1,213,0)=".ASK                             ::     ASK"
^PRCT(446.4,2,1,214,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,215,0)="P""Data xmitted, do""              ::Display confirmation of transmission message"
^PRCT(446.4,2,1,216,0)="P""you want to purge""             ::  (cont)"
^PRCT(446.4,2,1,217,0)="P""the file (Y/N) ? ""             ::  (cont)"
^PRCT(446.4,2,1,218,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,2,1,219,0)="A                                ::Allow user input"
^PRCT(446.4,2,1,220,0)="G$0=""Y"".PUR                      ::If user input is a ""Y"", go and purge inventory file"
^PRCT(446.4,2,1,221,0)="G$0=""N"".START                    ::If user input is a ""N"", go back to main menu"
^PRCT(446.4,2,1,222,0)="G$0=""."".START                    ::If user input is a ""."", go back to main menu"
^PRCT(446.4,2,1,223,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,224,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,225,0)="P""Please enter a ""               ::Display error message"
^PRCT(446.4,2,1,226,0)="P""Y or N.""                       ::  (cont)"
^PRCT(446.4,2,1,227,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,228,0)="G.ASK                            ::Go back and ask purge question"
^PRCT(446.4,2,1,229,0)=".PUR                             ::     PUR"
^PRCT(446.4,2,1,230,0)="HI=0                             ::Purge of inventory file"
^PRCT(446.4,2,1,231,0)="HV=0                             ::Purge of local variable file"
^PRCT(446.4,2,1,232,0)="B0                               ::Sound beep one time"
^PRCT(446.4,2,1,233,0)="P""** File Purged **""             ::Inform user of purged file"
^PRCT(446.4,2,1,234,0)="W3                               ::Wait three seconds to allow view of message"
^PRCT(446.4,2,1,235,0)="G.BEG                            ::Go back to begining of program"
^PRCT(446.4,2,1,236,0)="                                 ::"
^PRCT(446.4,2,1,237,0)=".DEL                             ::     DEL"
^PRCT(446.4,2,1,238,0)="DV(4)=""""                         ::Initialize Qty"
^PRCT(446.4,2,1,239,0)="G.ENTER                          ::Go back to enter inventory record"
^PRCT(446.4,2,1,240,0)="                                 ::"
^PRCT(446.4,2,1,241,0)=".CLR                             ::     CLR"
^PRCT(446.4,2,1,242,0)="P""\e[2J""                         ::Clear screen escape sequence"
^PRCT(446.4,2,1,243,0)="Q                                ::Quit subroutine"
^PRCT(446.4,2,1,244,0)="                                 ::"
^PRCT(446.4,2,1,245,0)=".NOREC                           ::     NOREC"
^PRCT(446.4,2,1,246,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,247,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,248,0)="P""*** Error, enter a""            ::Print error message"
^PRCT(446.4,2,1,249,0)="P""part number first.""            ::  (cont)"
^PRCT(446.4,2,1,250,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,251,0)="G.ENTER                          ::Go back to enter inventory record"
^PRCT(446.4,2,1,252,0)="                                 ::"
^PRCT(446.4,2,1,253,0)=".WARN                            ::     WARN"
^PRCT(446.4,2,1,254,0)="B0                               ::Sound beep"
^PRCT(446.4,2,1,255,0)="P""\e[2J**** WARNING ****""        ::Clear screen andprint warning message"
^PRCT(446.4,2,1,256,0)="P""Data file is almost""           ::  (cont)"
^PRCT(446.4,2,1,257,0)="P""full.  Please XMIT""            ::  (cont)"
^PRCT(446.4,2,1,258,0)="P""data and purge file.""          ::  (cont)"
^PRCT(446.4,2,1,259,0)="W3                               ::Wait three seconds to allow view of message"
^PRCT(446.4,2,1,260,0)="Q                                ::Quit subroutine"
^PRCT(446.4,2,1,261,0)="                                 ::"
^PRCT(446.4,2,1,262,0)=".NOQTY                           ::     NOQTY"
^PRCT(446.4,2,1,263,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,264,0)="P""\e[2JWARNING: No qty""          ::Print warning message"
^PRCT(446.4,2,1,265,0)="P""was entered for""               ::  (cont)"
^PRCT(446.4,2,1,266,0)="P""part #:""                       ::  (cont)"
^PRCT(446.4,2,1,267,0)="PV(2)                            ::Print part #"
^PRCT(446.4,2,1,268,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,269,0)="Q                                ::Quit subroutine"
^PRCT(446.4,2,1,270,0)="                                 ::"
^PRCT(446.4,2,1,271,0)=".STOP                            ::     STOP"
^PRCT(446.4,2,1,272,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,273,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,274,0)="P""Sorry, data file is""           ::Print error message"
^PRCT(446.4,2,1,275,0)="P""FULL, you must XMIT""           ::  (cont)"
^PRCT(446.4,2,1,276,0)="P""and purge file.""               ::  (cont)"
^PRCT(446.4,2,1,277,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,278,0)="G.START                          ::Go back to main menu"
^PRCT(446.4,2,1,279,0)="                                 ::"
^PRCT(446.4,2,1,280,0)=".DAT                             ::     DAT"
^PRCT(446.4,2,1,281,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,282,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,283,0)="P""*** WARNING ***""               ::Print warning message of existing data"
^PRCT(446.4,2,1,284,0)="P""Data exists on""                ::  (cont)"
^PRCT(446.4,2,1,285,0)="P""this barcode reader.""          ::  (cont)"
^PRCT(446.4,2,1,286,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,287,0)="P""The first record in""           ::Display first record to user"
^PRCT(446.4,2,1,288,0)="P""this file""                     ::  (cont)"
^PRCT(446.4,2,1,289,0)="D$0=""is: ""+I(0)                  ::Setup display of first record"
^PRCT(446.4,2,1,290,0)="P$0                              ::Print first record"
^PRCT(446.4,2,1,291,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,292,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,293,0)="P""Do you want to""                ::Query user to purge existing file"
^PRCT(446.4,2,1,294,0)="P""purge this file ...""           ::  (cont)"
^PRCT(446.4,2,1,295,0)="P""... (Y/N) ? ""                  ::  (cont)"
^PRCT(446.4,2,1,296,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,2,1,297,0)="A                                ::User input"
^PRCT(446.4,2,1,298,0)="G$0=""Y"".PUR                      ::If user input is a ""Y"", go and purge files"
^PRCT(446.4,2,1,299,0)="G$0=""N"".START                    ::If user input a ""N"", go to main menu"
^PRCT(446.4,2,1,300,0)="G$0=""."".START                    ::If user input is a ""."", go to main menu"
^PRCT(446.4,2,1,301,0)="B00                              ::Sound beep two times"
^PRCT(446.4,2,1,302,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,2,1,303,0)="P""Please enter a ""               ::Display error message"
^PRCT(446.4,2,1,304,0)="P""Y or N.""                       ::  (cont)"
^PRCT(446.4,2,1,305,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,2,1,306,0)="G.DAT                            ::Go back to existing data question"
^PRCT(446.4,2,1,307,0)="                                 ::"
^PRCT(446.4,2,1,308,0)="E                                ::End of program"
^PRCT(446.4,4,0)="PREVENTIVE MAINTENANCE^ENPM^EN-ENBCPM1^^^1^^3010208^6"
^PRCT(446.4,4,1,0)="^446.41^679^679^3010109^^"
^PRCT(446.4,4,1,1,0)="                            ::RGY/ISC-Washington@Altoona, Pa"
^PRCT(446.4,4,1,2,0)="                            ::DH/ISC-Washington@Hampton, Va"
^PRCT(446.4,4,1,3,0)="                            ::SAB/OIFO-Washington@Hampton, VA"
^PRCT(446.4,4,1,4,0)="                            ::1.9.2001"
^PRCT(446.4,4,1,5,0)="                            ::"
^PRCT(446.4,4,1,6,0)="                            ::Preventive Maintenance (PM) Program"
^PRCT(446.4,4,1,7,0)="                            ::File P set up to contain as many as"
^PRCT(446.4,4,1,8,0)="                            ::File P will hold the identifiers (IEN's)"
^PRCT(446.4,4,1,9,0)="                            ::of equipment for which a PM inspection"
^PRCT(446.4,4,1,10,0)="                            ::has been performed. Set up to hold as"
^PRCT(446.4,4,1,11,0)="                            ::many as 1000 records."
^PRCT(446.4,4,1,12,0)="                            ::As always, first record is a user"
^PRCT(446.4,4,1,13,0)="                            ::specified identifier. Main purpose is"
^PRCT(446.4,4,1,14,0)="                            ::to safeguard against inadvertent file"
^PRCT(446.4,4,1,15,0)="                            ::purges. We suggest that user enter"
^PRCT(446.4,4,1,16,0)="                            ::something like 'PM'-initials-date"
^PRCT(446.4,4,1,17,0)="                            ::(ex: PM-SAW-9-12-90). If unit times"
^PRCT(446.4,4,1,18,0)="                            ::out for inactivity or is turned off,"
^PRCT(446.4,4,1,19,0)="                            ::this record will be displayed at"
^PRCT(446.4,4,1,20,0)="                            ::power up time."
^PRCT(446.4,4,1,21,0)="                            ::"
^PRCT(446.4,4,1,22,0)="                            ::The Variable file (V) is a small file"
^PRCT(446.4,4,1,23,0)="                            ::used for scratch variables since"
^PRCT(446.4,4,1,24,0)="                            ::IRL limits numeric and string registers."
^PRCT(446.4,4,1,25,0)="                            ::V(0) is a scratch variable"
^PRCT(446.4,4,1,26,0)="                            ::V(1) is a scratch variable"
^PRCT(446.4,4,1,27,0)="                            ::V(2) the last location entered"
^PRCT(446.4,4,1,28,0)="                            ::V(3) the last equipment number entered"
^PRCT(446.4,4,1,29,0)="                            ::V(4) contains station number"
^PRCT(446.4,4,1,30,0)="                            ::V(5) station number on EE label"
^PRCT(446.4,4,1,31,0)="                            ::V(6) alternate station number"
^PRCT(446.4,4,1,32,0)="                            ::V(7) another alternate station number"
^PRCT(446.4,4,1,33,0)="                            ::V(8) another alternate station number"
^PRCT(446.4,4,1,34,0)="                            ::V(9) another alternate station number"
^PRCT(446.4,4,1,35,0)="                            ::V(10) another alternate station number"
^PRCT(446.4,4,1,36,0)="                            ::V(11) scratch variable"
^PRCT(446.4,4,1,37,0)="                            ::V(12) scratch variable"
^PRCT(446.4,4,1,38,0)="                            ::V(13) scratch variable"
^PRCT(446.4,4,1,39,0)="                            ::V(14) another alternate station number"
^PRCT(446.4,4,1,40,0)="                            ::V(15) another alternate station number"
^PRCT(446.4,4,1,41,0)="                            ::V(16) last of eight possible alternate"
^PRCT(446.4,4,1,42,0)="                            ::      station numbers"
^PRCT(446.4,4,1,43,0)="                            ::F(0) is 39 char formatter"
^PRCT(446.4,4,1,44,0)="                            ::"
^PRCT(446.4,4,1,45,0)="OP(1000,40)                 ::Initialize PMI file"
^PRCT(446.4,4,1,46,0)="OV(17,40)                   ::Initialize variable file"
^PRCT(446.4,4,1,47,0)="OF(1,39)                    ::Truncation in REV/DEL"
^PRCT(446.4,4,1,48,0)="                            ::"
^PRCT(446.4,4,1,49,0)=".BEG                        ::     BEG"
^PRCT(446.4,4,1,50,0)="DV(4)=""""                    ::Initialize station number"
^PRCT(446.4,4,1,51,0)="DV(6)=""""                    ::and alternates"
^PRCT(446.4,4,1,52,0)="DV(7)="""""
^PRCT(446.4,4,1,53,0)="DV(8)="""""
^PRCT(446.4,4,1,54,0)="DV(9)="""""
^PRCT(446.4,4,1,55,0)="DV(10)="""""
^PRCT(446.4,4,1,56,0)="DV(14)="""""
^PRCT(446.4,4,1,57,0)="DV(15)="""""
^PRCT(446.4,4,1,58,0)="DV(16)="""""
^PRCT(446.4,4,1,59,0)="DV(4)=|ENSTA|               ::Pass station # from DHCP"
^PRCT(446.4,4,1,60,0)="D$3=|ENEMP|                 ::Pass PM Inspector"
^PRCT(446.4,4,1,61,0)="DV(6)=|ENSTA(1)|            ::Pass alternate station number(s)"
^PRCT(446.4,4,1,62,0)="DV(7)=|ENSTA(2)|            ::<space> if null"
^PRCT(446.4,4,1,63,0)="DV(8)=|ENSTA(3)|"
^PRCT(446.4,4,1,64,0)="DV(9)=|ENSTA(4)|"
^PRCT(446.4,4,1,65,0)="DV(10)=|ENSTA(5)|"
^PRCT(446.4,4,1,66,0)="DV(14)=|ENSTA(6)|"
^PRCT(446.4,4,1,67,0)="DV(15)=|ENSTA(7)|"
^PRCT(446.4,4,1,68,0)="DV(16)=|ENSTA(8)|"
^PRCT(446.4,4,1,69,0)="H#1=P                       ::Set reg 1 to current rec # in PMI file"
^PRCT(446.4,4,1,70,0)="G#1>0.DAT                   ::If data alread exist in PMI file warn user"
^PRCT(446.4,4,1,71,0)="S.CLR                       ::Clear screen"
^PRCT(446.4,4,1,72,0)="P""Please enter ...""         ::Ask user for file ID"
^PRCT(446.4,4,1,73,0)="P""file ID: ""                ::   (cont)"
^PRCT(446.4,4,1,74,0)="D$0="""""
^PRCT(446.4,4,1,75,0)="A                           ::User input of user ID"
^PRCT(446.4,4,1,76,0)="D$0=""ID ""+$0                ::Force an entry"
^PRCT(446.4,4,1,77,0)="RP                          ::Store file ID into PMI file"
^PRCT(446.4,4,1,78,0)="DV(2)=""""                    ::Initialize V(2)"
^PRCT(446.4,4,1,79,0)="DV(3)=""""                    ::and V(3)"
^PRCT(446.4,4,1,80,0)="S.CLR"
^PRCT(446.4,4,1,81,0)="P""Station number:""          ::Display only"
^PRCT(446.4,4,1,82,0)="PV(4)                       ::Alternates not shown"
^PRCT(446.4,4,1,83,0)="P""To continue, please"""
^PRCT(446.4,4,1,84,0)="P""press ENTER..."""
^PRCT(446.4,4,1,85,0)="A                           ::Continue"
^PRCT(446.4,4,1,86,0)="D$0="""""
^PRCT(446.4,4,1,87,0)="                            ::"
^PRCT(446.4,4,1,88,0)=".TEC                        ::     TEC"
^PRCT(446.4,4,1,89,0)="S.CLR                       ::Disp name of tech"
^PRCT(446.4,4,1,90,0)="P""PM Inspector is:"""
^PRCT(446.4,4,1,91,0)="P$3"
^PRCT(446.4,4,1,92,0)="D$0=$3"
^PRCT(446.4,4,1,93,0)="RP                          ::File Inspector"
^PRCT(446.4,4,1,94,0)="P""Please press ENTER."""
^PRCT(446.4,4,1,95,0)="A                           ::Proceed"
^PRCT(446.4,4,1,96,0)="D$0="""""
^PRCT(446.4,4,1,97,0)="                            ::"
^PRCT(446.4,4,1,98,0)="                            ::"
^PRCT(446.4,4,1,99,0)=".START                      ::     START"
^PRCT(446.4,4,1,100,0)="S.CLR"
^PRCT(446.4,4,1,101,0)="P""1. Record PMI"""
^PRCT(446.4,4,1,102,0)="P""2. Transmit Data""         ::  (cont)"
^PRCT(446.4,4,1,103,0)="P""3. Review/Delete""         ::  (cont)"
^PRCT(446.4,4,1,104,0)="P""ENTER (1-3):"""
^PRCT(446.4,4,1,105,0)="A                           ::User input of option"
^PRCT(446.4,4,1,106,0)="G$0=""1"".ENTER               ::ENTER is entry tag for PMI"
^PRCT(446.4,4,1,107,0)="G$0=""2"".XMIT                ::XMIT is entry tag for transmit"
^PRCT(446.4,4,1,108,0)="G$0=""3"".REVDEL              ::REVDEL is entry tag for deletion"
^PRCT(446.4,4,1,109,0)="B00                         ::Sound beep two times"
^PRCT(446.4,4,1,110,0)="S.CLR                       ::Clear screen"
^PRCT(446.4,4,1,111,0)="P""*** Error, enter a""       ::Print message of invalid input"
^PRCT(446.4,4,1,112,0)="P""number from 1-3, or""      ::  (cont)"
^PRCT(446.4,4,1,113,0)="P""turn TRAKKER off."""
^PRCT(446.4,4,1,114,0)="W5                          ::Wait 5 seconds to allow view of message"
^PRCT(446.4,4,1,115,0)="G.START                     ::Go back and display main menu"
^PRCT(446.4,4,1,116,0)="                            ::"
^PRCT(446.4,4,1,117,0)="                            ::Entries at this point should look like:"
^PRCT(446.4,4,1,118,0)="                            ::  SP21-110, or"
^PRCT(446.4,4,1,119,0)="                            ::  688 EE6798, or maybe"
^PRCT(446.4,4,1,120,0)="                            ::  7832 EE659098"
^PRCT(446.4,4,1,121,0)="                            ::Anything else needs to be rejected."
^PRCT(446.4,4,1,122,0)=".ENTER                      ::     ENTER"
^PRCT(446.4,4,1,123,0)="H#1=P                       ::Set regist 1 to Num. of rec. in PMI file"
^PRCT(446.4,4,1,124,0)="G#1>995.STOP                ::If PMI file full, do not allow anymore entries"
^PRCT(446.4,4,1,125,0)="S#1>985.WARN                ::If PMI file almost full, warn user"
^PRCT(446.4,4,1,126,0)="D$0=""\e[2JRM: ""+V(2)        ::Clear screen and display Room number"
^PRCT(446.4,4,1,127,0)="P$0                         ::  (cont)"
^PRCT(446.4,4,1,128,0)="D$0=""ID: ""+V(3)             ::Display current identifier"
^PRCT(446.4,4,1,129,0)="P$0                         ::  (cont)"
^PRCT(446.4,4,1,130,0)="P""...Reader ready...\r\n""   ::Display input symbol for PMI"
^PRCT(446.4,4,1,131,0)="D$0=""""                      ::Initialize input variable"
^PRCT(446.4,4,1,132,0)="A                           ::Allow user input of next equip id"
^PRCT(446.4,4,1,133,0)="DV(1)=$0                    ::For safe keeping"
^PRCT(446.4,4,1,134,0)="G$0=""."".START               ::If input is ""."", goto main menu"
^PRCT(446.4,4,1,135,0)="D$1=$0L2                    ::First 2 char of input"
^PRCT(446.4,4,1,136,0)="G$1=""SP"".LOC                ::Location label"
^PRCT(446.4,4,1,137,0)="G$0=""F4"".NOLBL              ::Process item without barcode label"
^PRCT(446.4,4,1,138,0)="D#1=[$0]                    ::Is this a PM number?"
^PRCT(446.4,4,1,139,0)="S#1>8.PMN                   ::Maybe so, go check"
^PRCT(446.4,4,1,140,0)="GV(5)=""PM"".ENTPM            ::It was a PM number"
^PRCT(446.4,4,1,141,0)="S.PARSE                     ::What is it? Should be EE label."
^PRCT(446.4,4,1,142,0)="SV(5)=""??"".HLP1             ::Not what we expected, print help and"
^PRCT(446.4,4,1,143,0)="GV(5)=""??"".ENTER            ::try again"
^PRCT(446.4,4,1,144,0)=".ENTPM                      ::Tag to skip parsing"
^PRCT(446.4,4,1,145,0)="GV(2)="""".NOLOC              ::Have EE label, but no open loc"
^PRCT(446.4,4,1,146,0)="GV(5)=""PM"".PMR              ::PM number and open loc; record"
^PRCT(446.4,4,1,147,0)="GV(4)=V(5).PMR              ::EE label and open loc; record"
^PRCT(446.4,4,1,148,0)="GV(5)=V(6).PMR              ::alternate station number"
^PRCT(446.4,4,1,149,0)="GV(5)=V(7).PMR              ::second alternate"
^PRCT(446.4,4,1,150,0)="GV(5)=V(8).PMR              ::third alternate"
^PRCT(446.4,4,1,151,0)="GV(5)=V(9).PMR              ::fourth alternate"
^PRCT(446.4,4,1,152,0)="GV(5)=V(10).PMR             ::fifth alternate"
^PRCT(446.4,4,1,153,0)="GV(5)=V(14).PMR             ::sixth alternate"
^PRCT(446.4,4,1,154,0)="GV(5)=V(15).PMR             ::seventh alternate"
^PRCT(446.4,4,1,155,0)="GV(5)=V(16).PMR             ::eighth alternate"
^PRCT(446.4,4,1,156,0)=".RPT                        ::In case we need to repeat"
^PRCT(446.4,4,1,157,0)="S.CLR                       ::exception message"
^PRCT(446.4,4,1,158,0)="P""WARNING...EE label"""
^PRCT(446.4,4,1,159,0)="B01"
^PRCT(446.4,4,1,160,0)="D$1=""is from VAMC ""+V(5)    ::Show foreign station"
^PRCT(446.4,4,1,161,0)="P$1"
^PRCT(446.4,4,1,162,0)="P""Cannot process.""          ::Next screen"
^PRCT(446.4,4,1,163,0)="P""<ENTER> to cont..."""
^PRCT(446.4,4,1,164,0)="A                           ::Any char OK"
^PRCT(446.4,4,1,165,0)="S.CLR"
^PRCT(446.4,4,1,166,0)="G.ENTER                     ::Abort and move on"
^PRCT(446.4,4,1,167,0)="                            ::"
^PRCT(446.4,4,1,168,0)=".PMR                        ::     PMR"
^PRCT(446.4,4,1,169,0)="SV(5)=""PM"".CLR5             ::Dispense with flag"
^PRCT(446.4,4,1,170,0)="DV(3)=V(1)                  ::Move IEN for safe keeping"
^PRCT(446.4,4,1,171,0)="D$0=""\e[2JRM: ""+V(2)        ::Display current info"
^PRCT(446.4,4,1,172,0)="P$0"
^PRCT(446.4,4,1,173,0)="D$0=""ID: ""+V(3)"
^PRCT(446.4,4,1,174,0)="P$0"
^PRCT(446.4,4,1,175,0)="P""Enter P for PASS or""      ::PASS/FAIL"
^PRCT(446.4,4,1,176,0)="P""F for FAIL: ""             ::Explicit action"
^PRCT(446.4,4,1,177,0)="D$0=""""                      ::required"
^PRCT(446.4,4,1,178,0)="A1"
^PRCT(446.4,4,1,179,0)="G$0=""P"".PMRP"
^PRCT(446.4,4,1,180,0)="G$0=""F"".PMRF"
^PRCT(446.4,4,1,181,0)="G.PMR"
^PRCT(446.4,4,1,182,0)=".PMRP                       ::     PMRP"
^PRCT(446.4,4,1,183,0)="GV(1)=""F4"".PMRP0"
^PRCT(446.4,4,1,184,0)="D$0=V(1)                    ::Device PASSED"
^PRCT(446.4,4,1,185,0)="RP                          ::Store EE number"
^PRCT(446.4,4,1,186,0)=".PMRP0"
^PRCT(446.4,4,1,187,0)="S.CLR"
^PRCT(446.4,4,1,188,0)="P""Press F1 for detail""      ::Get time and material"
^PRCT(446.4,4,1,189,0)="P""or ENTER to cont...""      ::if desired"
^PRCT(446.4,4,1,190,0)="D$0="""""
^PRCT(446.4,4,1,191,0)="A"
^PRCT(446.4,4,1,192,0)="G$0=""F1"".PMRP1"
^PRCT(446.4,4,1,193,0)="G$0="""".ENTER                ::No t&m desired"
^PRCT(446.4,4,1,194,0)="B11101                      ::Error condition (minor)"
^PRCT(446.4,4,1,195,0)="G.PMRP"
^PRCT(446.4,4,1,196,0)=".PMRP1"
^PRCT(446.4,4,1,197,0)="S.CLR"
^PRCT(446.4,4,1,198,0)="P""Time (hrs): ""             ::Enter time"
^PRCT(446.4,4,1,199,0)="D$0="""""
^PRCT(446.4,4,1,200,0)="A                           ::Can't do pattern match"
^PRCT(446.4,4,1,201,0)="DV(1)=$0"
^PRCT(446.4,4,1,202,0)="P""Are you sure? Y//""        ::So we get confirmation"
^PRCT(446.4,4,1,203,0)="D$0="""""
^PRCT(446.4,4,1,204,0)="A"
^PRCT(446.4,4,1,205,0)="G$0="""".PMRP11"
^PRCT(446.4,4,1,206,0)="G$0=""Y"".PMRP11"
^PRCT(446.4,4,1,207,0)="G$0=""YES"".PMRP11"
^PRCT(446.4,4,1,208,0)="G.PMRP1"
^PRCT(446.4,4,1,209,0)="                            ::"
^PRCT(446.4,4,1,210,0)=".PMRP11"
^PRCT(446.4,4,1,211,0)="D$0=""TIME:""+V(1)"
^PRCT(446.4,4,1,212,0)="RP                          ::Store time spent"
^PRCT(446.4,4,1,213,0)=".PMRP12"
^PRCT(446.4,4,1,214,0)="S.CLR"
^PRCT(446.4,4,1,215,0)="P""Materials ($): ""          ::Enter materials"
^PRCT(446.4,4,1,216,0)="D$0="""""
^PRCT(446.4,4,1,217,0)="A                           ::Again, no type check"
^PRCT(446.4,4,1,218,0)="DV(1)=$0"
^PRCT(446.4,4,1,219,0)="P""Are you sure? Y//""        ::so we confirm"
^PRCT(446.4,4,1,220,0)="D$0="""""
^PRCT(446.4,4,1,221,0)="A"
^PRCT(446.4,4,1,222,0)="G$0="""".PMRP13"
^PRCT(446.4,4,1,223,0)="G$0=""Y"".PMRP13"
^PRCT(446.4,4,1,224,0)="G$0=""YES"".PMRP13"
^PRCT(446.4,4,1,225,0)="G.PMRP12"
^PRCT(446.4,4,1,226,0)=".PMRP13"
^PRCT(446.4,4,1,227,0)="D$0=""MATRL:""+V(1)"
^PRCT(446.4,4,1,228,0)="RP                          ::Store material cost"
^PRCT(446.4,4,1,229,0)="DV(5)="""""
^PRCT(446.4,4,1,230,0)="                            ::"
^PRCT(446.4,4,1,231,0)=".PMRP14                     ::Condition Code"
^PRCT(446.4,4,1,232,0)="S.CLR"
^PRCT(446.4,4,1,233,0)="P""Condition code (LN,"""
^PRCT(446.4,4,1,234,0)="P""G, or P):"""
^PRCT(446.4,4,1,235,0)="D$0="""""
^PRCT(446.4,4,1,236,0)="A"
^PRCT(446.4,4,1,237,0)="G$0="""".PMRP15"
^PRCT(446.4,4,1,238,0)="G$0=""L"".PMRPN"
^PRCT(446.4,4,1,239,0)="G$0=""l"".PMRPN"
^PRCT(446.4,4,1,240,0)="G$0=""N"".PMRPN"
^PRCT(446.4,4,1,241,0)="G$0=""n"".PMRPN"
^PRCT(446.4,4,1,242,0)="G$0=""LN"".PMRPN"
^PRCT(446.4,4,1,243,0)="G$0=""Ln"".PMRPN"
^PRCT(446.4,4,1,244,0)="G$0=""ln"".PMRPN"
^PRCT(446.4,4,1,245,0)="G$0=""G"".PMRPG"
^PRCT(446.4,4,1,246,0)="G$0=""g"".PMRPG"
^PRCT(446.4,4,1,247,0)="G$0=""P"".PMRPP"
^PRCT(446.4,4,1,248,0)="G$0=""p"".PMRPP"
^PRCT(446.4,4,1,249,0)="S.CLR"
^PRCT(446.4,4,1,250,0)="P""Must press LN (Like"""
^PRCT(446.4,4,1,251,0)="P""New), G (Good), P"""
^PRCT(446.4,4,1,252,0)="P""(Poor), or ENTER."""
^PRCT(446.4,4,1,253,0)="W 3"
^PRCT(446.4,4,1,254,0)="G.PMRP14"
^PRCT(446.4,4,1,255,0)="                            ::"
^PRCT(446.4,4,1,256,0)=".PMRPN                      ::Condition is LIKE NEW"
^PRCT(446.4,4,1,257,0)="S.CLR"
^PRCT(446.4,4,1,258,0)="P""LIKE NEW Condition."""
^PRCT(446.4,4,1,259,0)="P""Correct? Y//"""
^PRCT(446.4,4,1,260,0)="D$0="""""
^PRCT(446.4,4,1,261,0)="A"
^PRCT(446.4,4,1,262,0)="G$0="""".PMRPN1"
^PRCT(446.4,4,1,263,0)="G$0=""Y"".PMRPN1"
^PRCT(446.4,4,1,264,0)="G$0=""y"".PMRPN1"
^PRCT(446.4,4,1,265,0)="G.PMRP14"
^PRCT(446.4,4,1,266,0)=".PMRPN1                     ::Set the value"
^PRCT(446.4,4,1,267,0)="D$0=""CODE:1"""
^PRCT(446.4,4,1,268,0)="RP"
^PRCT(446.4,4,1,269,0)="G.PMRP15"
^PRCT(446.4,4,1,270,0)="                            ::"
^PRCT(446.4,4,1,271,0)=".PMRPG                      ::Condition is GOOD"
^PRCT(446.4,4,1,272,0)="S.CLR"
^PRCT(446.4,4,1,273,0)="P""GOOD condition."""
^PRCT(446.4,4,1,274,0)="P""Correct? Y//"""
^PRCT(446.4,4,1,275,0)="D$0="""""
^PRCT(446.4,4,1,276,0)="A"
^PRCT(446.4,4,1,277,0)="G$0="""".PMRPG1"
^PRCT(446.4,4,1,278,0)="G$0=""Y"".PMRPG1"
^PRCT(446.4,4,1,279,0)="G$0=""y"".PMRPG1"
^PRCT(446.4,4,1,280,0)="G.PMRP14"
^PRCT(446.4,4,1,281,0)=".PMRPG1                     ::Set the value"
^PRCT(446.4,4,1,282,0)="D$0=""CODE:2"""
^PRCT(446.4,4,1,283,0)="RP"
^PRCT(446.4,4,1,284,0)="G.PMRP15"
^PRCT(446.4,4,1,285,0)="                            ::"
^PRCT(446.4,4,1,286,0)=".PMRPP                      ::Condition is POOR"
^PRCT(446.4,4,1,287,0)="S.CLR"
^PRCT(446.4,4,1,288,0)="P""POOR Condition."""
^PRCT(446.4,4,1,289,0)="P""Correct? Y//"""
^PRCT(446.4,4,1,290,0)="D$0="""""
^PRCT(446.4,4,1,291,0)="A"
^PRCT(446.4,4,1,292,0)="G$0="""".PMRPP1"
^PRCT(446.4,4,1,293,0)="G$0=""Y"".PMRPP1"
^PRCT(446.4,4,1,294,0)="G$0=""y"".PMRPP1"
^PRCT(446.4,4,1,295,0)="G.PMRP14"
^PRCT(446.4,4,1,296,0)=".PMRPP1"
^PRCT(446.4,4,1,297,0)="D$0=""CODE:3"""
^PRCT(446.4,4,1,298,0)="RP"
^PRCT(446.4,4,1,299,0)="                            ::"
^PRCT(446.4,4,1,300,0)=".PMRP15"
^PRCT(446.4,4,1,301,0)="S.WORK"
^PRCT(446.4,4,1,302,0)="G.ENTER"
^PRCT(446.4,4,1,303,0)="                            ::"
^PRCT(446.4,4,1,304,0)=".WORK                       ::Manual entry of WORK PERFORMED"
^PRCT(446.4,4,1,305,0)="S.CLR"
^PRCT(446.4,4,1,306,0)="P""WORK PERFORMED:"""
^PRCT(446.4,4,1,307,0)="P""(120 char max)"""
^PRCT(446.4,4,1,308,0)="P""(Optional)\r\n"""
^PRCT(446.4,4,1,309,0)="D$0="""""
^PRCT(446.4,4,1,310,0)="A"
^PRCT(446.4,4,1,311,0)="Q$0="""""
^PRCT(446.4,4,1,312,0)="DV(11)=""""                   ::Record up to three"
^PRCT(446.4,4,1,313,0)="DV(12)=""""                   ::forty char segments"
^PRCT(446.4,4,1,314,0)="DV(13)="""""
^PRCT(446.4,4,1,315,0)="DV(11)=$0L40"
^PRCT(446.4,4,1,316,0)="DV(12)=$0M40,41"
^PRCT(446.4,4,1,317,0)="DV(13)=$0M40,81"
^PRCT(446.4,4,1,318,0)=".WORKC                      ::Confirmation"
^PRCT(446.4,4,1,319,0)="D$0="""""
^PRCT(446.4,4,1,320,0)="P""Are you sure? Y//"""
^PRCT(446.4,4,1,321,0)="A"
^PRCT(446.4,4,1,322,0)="D$1=$0L1"
^PRCT(446.4,4,1,323,0)="G$1="""".WORKF"
^PRCT(446.4,4,1,324,0)="G$1=""Y"".WORKF"
^PRCT(446.4,4,1,325,0)="G$1=""y"".WORKF"
^PRCT(446.4,4,1,326,0)="G.WORK"
^PRCT(446.4,4,1,327,0)=".WORKF                      ::File WORK PERFORMED"
^PRCT(446.4,4,1,328,0)="D$0=V(11)"
^PRCT(446.4,4,1,329,0)="RP"
^PRCT(446.4,4,1,330,0)="QV(12)="""""
^PRCT(446.4,4,1,331,0)="D$0=V(12)"
^PRCT(446.4,4,1,332,0)="RP"
^PRCT(446.4,4,1,333,0)="QV(13)="""""
^PRCT(446.4,4,1,334,0)="D$0=V(13)"
^PRCT(446.4,4,1,335,0)="RP"
^PRCT(446.4,4,1,336,0)="Q"
^PRCT(446.4,4,1,337,0)="                            ::"
^PRCT(446.4,4,1,338,0)=".PMRF                       ::     PMRF"
^PRCT(446.4,4,1,339,0)="GV(1)=""F4"".PMRF0"
^PRCT(446.4,4,1,340,0)="D$0=V(1)                    ::Device FAILED"
^PRCT(446.4,4,1,341,0)="RP                          ::Store EE number"
^PRCT(446.4,4,1,342,0)=".PMRF0"
^PRCT(446.4,4,1,343,0)="D$0=""FAILED"""
^PRCT(446.4,4,1,344,0)="RP                          ::and store a flag"
^PRCT(446.4,4,1,345,0)=".PMRF1"
^PRCT(446.4,4,1,346,0)="S.CLR"
^PRCT(446.4,4,1,347,0)="P""Describe problem""         ::Get a brief statement of"
^PRCT(446.4,4,1,348,0)="P""(40 char max):\r\n""       ::the problem. This will"
^PRCT(446.4,4,1,349,0)="D$0=""""                      ::become the basis for a"
^PRCT(446.4,4,1,350,0)="A                           ::corrective action work"
^PRCT(446.4,4,1,351,0)="DV(1)=$0                    ::order."
^PRCT(446.4,4,1,352,0)="S.CLR"
^PRCT(446.4,4,1,353,0)="D$0=V(1)                    ::Truncate to 40 char"
^PRCT(446.4,4,1,354,0)="P$0"
^PRCT(446.4,4,1,355,0)="P""Are you sure? Y//""        ::Confirmation"
^PRCT(446.4,4,1,356,0)="D$0="""""
^PRCT(446.4,4,1,357,0)="A"
^PRCT(446.4,4,1,358,0)="G$0="""".PMRF2"
^PRCT(446.4,4,1,359,0)="G$0=""Y"".PMRF2"
^PRCT(446.4,4,1,360,0)="G$0=""YES"".PMRF2"
^PRCT(446.4,4,1,361,0)="B10111"
^PRCT(446.4,4,1,362,0)="G.PMRF1"
^PRCT(446.4,4,1,363,0)=".PMRF2"
^PRCT(446.4,4,1,364,0)="D$0=V(1)"
^PRCT(446.4,4,1,365,0)="RP                          ::Store problem description"
^PRCT(446.4,4,1,366,0)=".PMRF3                      ::Get time"
^PRCT(446.4,4,1,367,0)="S.CLR"
^PRCT(446.4,4,1,368,0)="P""Time (hrs): ""             ::Enter hours"
^PRCT(446.4,4,1,369,0)="D$0="""""
^PRCT(446.4,4,1,370,0)="A"
^PRCT(446.4,4,1,371,0)="DV(1)=$0"
^PRCT(446.4,4,1,372,0)="P""Are you sure? Y//""        ::Data validation check"
^PRCT(446.4,4,1,373,0)="D$0="""""
^PRCT(446.4,4,1,374,0)="A"
^PRCT(446.4,4,1,375,0)="G$0="""".PMRF31"
^PRCT(446.4,4,1,376,0)="G$0=""Y"".PMRF31"
^PRCT(446.4,4,1,377,0)="G$0=""YES"".PMRF31"
^PRCT(446.4,4,1,378,0)="G.PMRF3"
^PRCT(446.4,4,1,379,0)=".PMRF31"
^PRCT(446.4,4,1,380,0)="D$0=""TIME:""+V(1)            ::Store time spent in"
^PRCT(446.4,4,1,381,0)="RP                          ::FAILing device"
^PRCT(446.4,4,1,382,0)="G.ENTER"
^PRCT(446.4,4,1,383,0)="                            ::"
^PRCT(446.4,4,1,384,0)=".NOLOC                      ::     NOLOC"
^PRCT(446.4,4,1,385,0)="B1101                       ::Audible signal"
^PRCT(446.4,4,1,386,0)="S.CLR                       ::EE label scanned before"
^PRCT(446.4,4,1,387,0)="P""PMI process must""         ::location"
^PRCT(446.4,4,1,388,0)="P""begin with location"""
^PRCT(446.4,4,1,389,0)="P""label."""
^PRCT(446.4,4,1,390,0)="P""Press <ENTER>..."""
^PRCT(446.4,4,1,391,0)="A                           ::Accept any char"
^PRCT(446.4,4,1,392,0)="G.ENTER                     ::Try again"
^PRCT(446.4,4,1,393,0)="                            ::"
^PRCT(446.4,4,1,394,0)=".NOLBL                      ::     NOLBL"
^PRCT(446.4,4,1,395,0)="GV(2)="""".NOLOC              ::No open loc; can't proceed"
^PRCT(446.4,4,1,396,0)="S.CLR                       ::Get text description of"
^PRCT(446.4,4,1,397,0)="P""Enter MODEL NUMBER:\r\n""  ::items without barcode"
^PRCT(446.4,4,1,398,0)="D$0="""""
^PRCT(446.4,4,1,399,0)="A                           ::labels"
^PRCT(446.4,4,1,400,0)="G$0=""^"".NLABRT              ::User abort"
^PRCT(446.4,4,1,401,0)="D$2=$0                      ::Temp save of mod in $2"
^PRCT(446.4,4,1,402,0)="S.CLR"
^PRCT(446.4,4,1,403,0)="P""Enter SERIAL NUMBER:""     ::Get serial #"
^PRCT(446.4,4,1,404,0)="D$0="""""
^PRCT(446.4,4,1,405,0)="A"
^PRCT(446.4,4,1,406,0)="G$0=""^"".NLABRT              ::User abort"
^PRCT(446.4,4,1,407,0)="G$0="""".NLABRT"
^PRCT(446.4,4,1,408,0)="D$3=$0                      ::Temp save of s/n in $3"
^PRCT(446.4,4,1,409,0)=".DESC                       ::Item description"
^PRCT(446.4,4,1,410,0)="S.CLR"
^PRCT(446.4,4,1,411,0)="P""Enter DESCRIPTION:\r\n""   ::Free text description"
^PRCT(446.4,4,1,412,0)="A                           ::40 char max because of fixed"
^PRCT(446.4,4,1,413,0)="D#0=[$0]                    ::record size"
^PRCT(446.4,4,1,414,0)="G#0<41.NOLBL1"
^PRCT(446.4,4,1,415,0)="S.CLR                       ::Clear screen for"
^PRCT(446.4,4,1,416,0)="P""ERROR  Description""       ::error message"
^PRCT(446.4,4,1,417,0)="P""may not exceed 40"""
^PRCT(446.4,4,1,418,0)="P""characters."""
^PRCT(446.4,4,1,419,0)="P""Press <ENTER>...""         ::Wait for user resp"
^PRCT(446.4,4,1,420,0)="A                           ::Take anything"
^PRCT(446.4,4,1,421,0)="G.DESC                      ::Try again"
^PRCT(446.4,4,1,422,0)=".NOLBL1                     ::Continue"
^PRCT(446.4,4,1,423,0)="D$1=$0                      ::Shuffle the string"
^PRCT(446.4,4,1,424,0)="D$0=""MOD:""+$2               ::registers and file"
^PRCT(446.4,4,1,425,0)="RP                          ::user inputs"
^PRCT(446.4,4,1,426,0)="D$0=""S/N:""+$3"
^PRCT(446.4,4,1,427,0)="RP"
^PRCT(446.4,4,1,428,0)="D$0=$1"
^PRCT(446.4,4,1,429,0)="RP                          ::Filing complete"
^PRCT(446.4,4,1,430,0)="G.PMR                       ::Pass or fail"
^PRCT(446.4,4,1,431,0)=".NLABRT                     ::Jump here to skip filing"
^PRCT(446.4,4,1,432,0)="G.ENTER                     ::End of program segment"
^PRCT(446.4,4,1,433,0)="                            ::"
^PRCT(446.4,4,1,434,0)=".PMN                        ::     PMN"
^PRCT(446.4,4,1,435,0)="D$1=$0M1,5                  ::Is this really a PM number?"
^PRCT(446.4,4,1,436,0)="G$1=""-"".PMN1                ::Apparently so"
^PRCT(446.4,4,1,437,0)="Q                           ::Not PM number, return"
^PRCT(446.4,4,1,438,0)=".PMN1                       ::Assume NNNN-NNNN is PM#"
^PRCT(446.4,4,1,439,0)="DV(5)=""PM""                  ::Set flag"
^PRCT(446.4,4,1,440,0)="DV(0)=""""                    ::Add prefix"
^PRCT(446.4,4,1,441,0)="DV(0)=V(1)"
^PRCT(446.4,4,1,442,0)="DV(1)="""""
^PRCT(446.4,4,1,443,0)="DV(1)=""PM#:""+V(0)"
^PRCT(446.4,4,1,444,0)="Q                           ::Return"
^PRCT(446.4,4,1,445,0)="                            ::"
^PRCT(446.4,4,1,446,0)=".REVDEL                     ::     REVDEL"
^PRCT(446.4,4,1,447,0)="H#1=P                       ::Get last"
^PRCT(446.4,4,1,448,0)="D#1=#1-1                    ::record number"
^PRCT(446.4,4,1,449,0)=".LP10"
^PRCT(446.4,4,1,450,0)="G#1=1.START                 ::Can't go above first LOCATION"
^PRCT(446.4,4,1,451,0)="S.CLR"
^PRCT(446.4,4,1,452,0)="C$1=#1                      ::Display"
^PRCT(446.4,4,1,453,0)="D$0=$1+"") ""                 ::last"
^PRCT(446.4,4,1,454,0)="D$0=$0+P(#1)                ::record"
^PRCT(446.4,4,1,455,0)="DF(0)=$0                    ::Truncate to"
^PRCT(446.4,4,1,456,0)="D$0=F(0)                    ::39 char"
^PRCT(446.4,4,1,457,0)="P$0"
^PRCT(446.4,4,1,458,0)="P""(D)elete, (Q)uit,"""
^PRCT(446.4,4,1,459,0)="P""or (C)ontinue..."""
^PRCT(446.4,4,1,460,0)="D$0=""""                      ::Clear input buffer"
^PRCT(446.4,4,1,461,0)="A1                          ::Single character entry"
^PRCT(446.4,4,1,462,0)="G$0=""D"".LP20                ::Deletion"
^PRCT(446.4,4,1,463,0)="G$0=""Q"".START               ::Back to main menu"
^PRCT(446.4,4,1,464,0)="G$0=""C"".LP30                ::Next previous record"
^PRCT(446.4,4,1,465,0)="P""Error. Must enter"""
^PRCT(446.4,4,1,466,0)="P""D, Q, or C."""
^PRCT(446.4,4,1,467,0)="P""To proceed, please"""
^PRCT(446.4,4,1,468,0)="P""press <ENTER>..."""
^PRCT(446.4,4,1,469,0)="D$0="""""
^PRCT(446.4,4,1,470,0)="A                           ::Take anything"
^PRCT(446.4,4,1,471,0)="G.LP10                      ::Ask again"
^PRCT(446.4,4,1,472,0)=".LP20                       ::Actual deletion"
^PRCT(446.4,4,1,473,0)="S.CLR"
^PRCT(446.4,4,1,474,0)="P""Deleting record"""
^PRCT(446.4,4,1,475,0)="D$0=""number ""+$1"
^PRCT(446.4,4,1,476,0)="D$0=$0+""..."""
^PRCT(446.4,4,1,477,0)="P$0"
^PRCT(446.4,4,1,478,0)="W5"
^PRCT(446.4,4,1,479,0)="DP(#1)=""*****"""
^PRCT(446.4,4,1,480,0)="P""(Q)uit or (C)ont?""        ::Get instruction"
^PRCT(446.4,4,1,481,0)="D$0="""""
^PRCT(446.4,4,1,482,0)="A1                          ::Get one character"
^PRCT(446.4,4,1,483,0)="G$0=""C"".LP25                ::Continue review"
^PRCT(446.4,4,1,484,0)="G.START                     ::Back to main menu"
^PRCT(446.4,4,1,485,0)=".LP25                       ::     LP25"
^PRCT(446.4,4,1,486,0)="D#1=#1-1                    ::Move file pointer"
^PRCT(446.4,4,1,487,0)="G.LP10                      ::Back to display"
^PRCT(446.4,4,1,488,0)=".LP30                       ::     LP30"
^PRCT(446.4,4,1,489,0)="D#1=#1-1                    ::Move file pointer"
^PRCT(446.4,4,1,490,0)="G.LP10                      ::End REVIEW/DELETE"
^PRCT(446.4,4,1,491,0)="                            ::"
^PRCT(446.4,4,1,492,0)=".XMIT                       ::     XMIT"
^PRCT(446.4,4,1,493,0)="D$0=""ENPM""                  ::Define data identifier"
^PRCT(446.4,4,1,494,0)="XMP,$0                      ::Transmit data identifier to host system"
^PRCT(446.4,4,1,495,0)="XMP,P                       ::Transmit PMI file to host device"
^PRCT(446.4,4,1,496,0)="H#1=P                       ::Find how many records exist in PMI file"
^PRCT(446.4,4,1,497,0)="C$0=#1                      ::Set string variable to Number of Records"
^PRCT(446.4,4,1,498,0)="D$0=""***END***^""+$0         ::Setup End of File message"
^PRCT(446.4,4,1,499,0)="XMP,$0                      ::Send End of File message to external device"
^PRCT(446.4,4,1,500,0)=".ASK                        ::     ASK"
^PRCT(446.4,4,1,501,0)="S.CLR                       ::Clear screen"
^PRCT(446.4,4,1,502,0)="P""Data xmitted, do""         ::Display confirmation of transmission message"
^PRCT(446.4,4,1,503,0)="P""you want to purge""        ::  (cont)"
^PRCT(446.4,4,1,504,0)="P""the file (Y/N) ? ""        ::  (cont)"
^PRCT(446.4,4,1,505,0)="D$0=""""                      ::Initialize input variable"
^PRCT(446.4,4,1,506,0)="A                           ::Allow user input"
^PRCT(446.4,4,1,507,0)="G$0=""Y"".PUR                 ::If ""Y"", purge inventory file"
^PRCT(446.4,4,1,508,0)="G$0=""N"".START               ::If user input is a ""N"", go back to main menu"
^PRCT(446.4,4,1,509,0)="G$0=""."".START               ::If user input is a ""."", go back to main menu"
^PRCT(446.4,4,1,510,0)="B00                         ::Sound beep two times"
^PRCT(446.4,4,1,511,0)="S.CLR                       ::Clear screen"
^PRCT(446.4,4,1,512,0)="P""Please enter a ""          ::Display error message"
^PRCT(446.4,4,1,513,0)="P""Y or N.""                  ::  (cont)"
^PRCT(446.4,4,1,514,0)="W3                          ::Wait 5 seconds to allow view of message"
^PRCT(446.4,4,1,515,0)="G.ASK                       ::Go back and ask purge question"
^PRCT(446.4,4,1,516,0)="                            ::"
^PRCT(446.4,4,1,517,0)=".PUR                        ::     PUR"
^PRCT(446.4,4,1,518,0)="HP=0                        ::Purge of PMI file"
^PRCT(446.4,4,1,519,0)="HV=0                        ::Purge of local variable file"
^PRCT(446.4,4,1,520,0)="B0                          ::Sound beep one time"
^PRCT(446.4,4,1,521,0)="P""** File Purged **""        ::Inform user of purged file"
^PRCT(446.4,4,1,522,0)="W3                          ::Wait three seconds to allow view of message"
^PRCT(446.4,4,1,523,0)="G.BEG                       ::Go back to begining of program"
^PRCT(446.4,4,1,524,0)="                            ::"
^PRCT(446.4,4,1,525,0)=".CLR                        ::     CLR"
^PRCT(446.4,4,1,526,0)="P""\e[2J""                    ::Clear screen escape sequence"
^PRCT(446.4,4,1,527,0)="D$0=""""                      ::Clear input register"
^PRCT(446.4,4,1,528,0)="Q                           ::Quit subroutine"
^PRCT(446.4,4,1,529,0)="                            ::"
^PRCT(446.4,4,1,530,0)=".WARN                       ::     WARN"
^PRCT(446.4,4,1,531,0)="B0                          ::Sound beep"
^PRCT(446.4,4,1,532,0)="P""\e[2J**** WARNING ****""   ::Clear screen and print warning message"
^PRCT(446.4,4,1,533,0)="P""Data file is almost""      ::  (cont)"
^PRCT(446.4,4,1,534,0)="P""full.  Please XMIT""       ::  (cont)"
^PRCT(446.4,4,1,535,0)="P""data and purge file.""     ::  (cont)"
^PRCT(446.4,4,1,536,0)="W3                          ::Wait three seconds to allow view of message"
^PRCT(446.4,4,1,537,0)="Q                           ::Quit subroutine"
^PRCT(446.4,4,1,538,0)="                            ::"
^PRCT(446.4,4,1,539,0)=".STOP                       ::     STOP"
^PRCT(446.4,4,1,540,0)="B00                         ::Sound beep two times"
^PRCT(446.4,4,1,541,0)="S.CLR                       ::Clear screen"
^PRCT(446.4,4,1,542,0)="P""Sorry, data file is""      ::Print error message"
^PRCT(446.4,4,1,543,0)="P""FULL, you must XMIT""      ::  (cont)"
^PRCT(446.4,4,1,544,0)="P""and purge file.""          ::  (cont)"
^PRCT(446.4,4,1,545,0)="W5                          ::Wait five seconds to allow view of message"
^PRCT(446.4,4,1,546,0)="G.START                     ::Go back to main menu"
^PRCT(446.4,4,1,547,0)="                            ::"
^PRCT(446.4,4,1,548,0)=".DAT                        ::     DAT"
^PRCT(446.4,4,1,549,0)="S.CLR                       ::Clear screen"
^PRCT(446.4,4,1,550,0)="B00                         ::Sound beep two times"
^PRCT(446.4,4,1,551,0)="P""*** WARNING ***""          ::Print warning message of existing data"
^PRCT(446.4,4,1,552,0)="P""Data exists on""           ::  (cont)"
^PRCT(446.4,4,1,553,0)="P""this barcode reader.""     ::  (cont)"
^PRCT(446.4,4,1,554,0)="W5                          ::Wait five seconds to allow view of message"
^PRCT(446.4,4,1,555,0)="S.CLR"
^PRCT(446.4,4,1,556,0)="P""The file ID is:""          ::Display first record to user"
^PRCT(446.4,4,1,557,0)="D$0=P(0)                    ::Setup display of first record"
^PRCT(446.4,4,1,558,0)="P$0                         ::Print first record"
^PRCT(446.4,4,1,559,0)="W5                          ::Wait five seconds to allow view of message"
^PRCT(446.4,4,1,560,0)="S.CLR                       ::Clear screen"
^PRCT(446.4,4,1,561,0)="P""Do you want to""           ::Query user to purge existing file"
^PRCT(446.4,4,1,562,0)="P""purge this file ...""      ::  (cont)"
^PRCT(446.4,4,1,563,0)="P""... (Y/N) ? ""             ::  (cont)"
^PRCT(446.4,4,1,564,0)="D$0=""""                      ::Initialize input variable"
^PRCT(446.4,4,1,565,0)="A                           ::User input"
^PRCT(446.4,4,1,566,0)="G$0=""Y"".PUR                 ::If user input is a ""Y"", go and purge files"
^PRCT(446.4,4,1,567,0)="G$0=""N"".START               ::If user input is a ""N"", go to main menu"
^PRCT(446.4,4,1,568,0)="G$0=""."".START               ::If user input is a ""."", go to main menu"
^PRCT(446.4,4,1,569,0)="B00                         ::Sound beep two times"
^PRCT(446.4,4,1,570,0)="S.CLR                       ::Clear screen"
^PRCT(446.4,4,1,571,0)="P""Please enter a ""          ::Display error message"
^PRCT(446.4,4,1,572,0)="P""Y or N.""                  ::  (cont)"
^PRCT(446.4,4,1,573,0)="W5                          ::Wait five seconds to allow view of message"
^PRCT(446.4,4,1,574,0)="G.DAT                       ::Go back a existing data question"
^PRCT(446.4,4,1,575,0)="                            ::"
^PRCT(446.4,4,1,576,0)=".LOC                        ::     LOC"
^PRCT(446.4,4,1,577,0)="                            ::Process location label in $0"
^PRCT(446.4,4,1,578,0)="SV(2)="""".NLOC               ::No location presently open"
^PRCT(446.4,4,1,579,0)="SV(2)=$0.CLOC               ::Loction is open"
^PRCT(446.4,4,1,580,0)="G$0="""".LOCQ                 ::All is well"
^PRCT(446.4,4,1,581,0)="P""ERROR Must close""         ::Display error"
^PRCT(446.4,4,1,582,0)="B1101                       ::message and sound alarm"
^PRCT(446.4,4,1,583,0)="PV(2)"
^PRCT(446.4,4,1,584,0)="P""before you may open"""
^PRCT(446.4,4,1,585,0)="P$0"
^PRCT(446.4,4,1,586,0)="W10                         ::10 sec to read"
^PRCT(446.4,4,1,587,0)=".LOCQ                       ::Exit from subroutine"
^PRCT(446.4,4,1,588,0)="G.ENTER                     ::Next read"
^PRCT(446.4,4,1,589,0)=".NLOC                       ::     NLOC"
^PRCT(446.4,4,1,590,0)="DV(2)=$0                    ::Store new current location"
^PRCT(446.4,4,1,591,0)="RP                          ::Add new loc to file"
^PRCT(446.4,4,1,592,0)="D$0=""""                      ::All OK flag back to LOC"
^PRCT(446.4,4,1,593,0)="Q"
^PRCT(446.4,4,1,594,0)=".CLOC                       ::     CLOC"
^PRCT(446.4,4,1,595,0)="DV(2)=""""                    ::Close current location"
^PRCT(446.4,4,1,596,0)="D$0=""""                      ::All OK flag back to LOC"
^PRCT(446.4,4,1,597,0)="DV(3)=""""                    ::Clear last EE for new loc"
^PRCT(446.4,4,1,598,0)="Q"
^PRCT(446.4,4,1,599,0)="G.ENTER"
^PRCT(446.4,4,1,600,0)="                            ::"
^PRCT(446.4,4,1,601,0)=".PARSE                      ::     PARSE"
^PRCT(446.4,4,1,602,0)="DV(5)="""""
^PRCT(446.4,4,1,603,0)="D#1=0                       ::Initialize character count"
^PRCT(446.4,4,1,604,0)=".FNDBL                      ::Look for space"
^PRCT(446.4,4,1,605,0)="D#1=#1+1                    ::Increment counter"
^PRCT(446.4,4,1,606,0)="D$1=$0M1,#1                 ::Examine current char position"
^PRCT(446.4,4,1,607,0)="G$1="""".PARS1                ::Must not be any spaces"
^PRCT(446.4,4,1,608,0)="G$1="" "".PARS1               ::That's more like it"
^PRCT(446.4,4,1,609,0)="G.FNDBL                     ::Keep looping"
^PRCT(446.4,4,1,610,0)=".PARS1"
^PRCT(446.4,4,1,611,0)="S$1="""".ERR1                 ::Can't be right"
^PRCT(446.4,4,1,612,0)="S$1="" "".PARS2               ::Continue"
^PRCT(446.4,4,1,613,0)="Q                           ::Return control to segment ENTER"
^PRCT(446.4,4,1,614,0)="                            ::"
^PRCT(446.4,4,1,615,0)=".PARS2                      ::     PARS2 (2ND LEVEL)"
^PRCT(446.4,4,1,616,0)="D#2=[$0]                    ::Length of label"
^PRCT(446.4,4,1,617,0)="D#3=#1+1                    ::Start of second piece"
^PRCT(446.4,4,1,618,0)="D#4=#2-#1                   ::Length of second piece"
^PRCT(446.4,4,1,619,0)="D$1=$0M#4,#3                ::Set $1 to second piece"
^PRCT(446.4,4,1,620,0)="D$2=$1L2                    ::Application code"
^PRCT(446.4,4,1,621,0)="G$2=""EE"".PARS3              ::Application code should be EE"
^PRCT(446.4,4,1,622,0)="DV(5)=""??""                  ::Error condition"
^PRCT(446.4,4,1,623,0)="G.PARS4"
^PRCT(446.4,4,1,624,0)=".PARS3                      ::Where we want to be"
^PRCT(446.4,4,1,625,0)="D#3=#1-1                    ::Length of station number"
^PRCT(446.4,4,1,626,0)="DV(5)=$0L#3                 ::Store station number from label"
^PRCT(446.4,4,1,627,0)=".PARS4                      ::Re-entry from error condition"
^PRCT(446.4,4,1,628,0)="Q                           ::Return control to PARSE, passing param V(5)"
^PRCT(446.4,4,1,629,0)="                            ::"
^PRCT(446.4,4,1,630,0)=".ERR1                       ::     ERR1"
^PRCT(446.4,4,1,631,0)="DV(5)=""??""                  ::Flag error for segment .ENTER"
^PRCT(446.4,4,1,632,0)="Q"
^PRCT(446.4,4,1,633,0)="                            ::"
^PRCT(446.4,4,1,634,0)=".HLP1                       ::     HLP1"
^PRCT(446.4,4,1,635,0)="S.CLR                       ::Called from .ENTER if input"
^PRCT(446.4,4,1,636,0)="GV(1)=""?"".HLP12             ::is a question"
^PRCT(446.4,4,1,637,0)="P""** INVALID ENTRY **""      ::or is questionable"
^PRCT(446.4,4,1,638,0)="B1010                       ::Audible signal"
^PRCT(446.4,4,1,639,0)="P""Press <ENTER> to"""
^PRCT(446.4,4,1,640,0)="P""continue, or enter"""
^PRCT(446.4,4,1,641,0)="P""'?' for help."""
^PRCT(446.4,4,1,642,0)="D$0="""""
^PRCT(446.4,4,1,643,0)="A                           ::User response"
^PRCT(446.4,4,1,644,0)="G$0="""".HLP1Q                ::Help declined"
^PRCT(446.4,4,1,645,0)="D$0=$0L1                    ::Look at first char"
^PRCT(446.4,4,1,646,0)=".HLP12                      ::'?' to begin with"
^PRCT(446.4,4,1,647,0)="SV(1)=""?"".HLP2              ::More help"
^PRCT(446.4,4,1,648,0)="S$0=""?"".HLP2                ::Show help text"
^PRCT(446.4,4,1,649,0)=".HLP1Q                      ::Exit subroutine"
^PRCT(446.4,4,1,650,0)="Q"
^PRCT(446.4,4,1,651,0)="                            ::"
^PRCT(446.4,4,1,652,0)=".HLP2                       ::     HLP2"
^PRCT(446.4,4,1,653,0)="D$0=V(2)                    ::Ck for location"
^PRCT(446.4,4,1,654,0)="G$0="""".HLP3"
^PRCT(446.4,4,1,655,0)="P""Expecting equipment""      ::Expanded help"
^PRCT(446.4,4,1,656,0)="P""id (ex:688 EE9372),"""
^PRCT(446.4,4,1,657,0)="P""PM #, or special"""
^PRCT(446.4,4,1,658,0)="P""function key F4."""
^PRCT(446.4,4,1,659,0)="W10                         ::10 sec to read"
^PRCT(446.4,4,1,660,0)="P""Will also accept"""
^PRCT(446.4,4,1,661,0)="D$0=V(2)                    ::Display current"
^PRCT(446.4,4,1,662,0)="P$0                         ::location"
^PRCT(446.4,4,1,663,0)="P""to close location"""
^PRCT(446.4,4,1,664,0)="P""or '.' to exit."""
^PRCT(446.4,4,1,665,0)="W10"
^PRCT(446.4,4,1,666,0)="Q"
^PRCT(446.4,4,1,667,0)="                            ::     HLP3"
^PRCT(446.4,4,1,668,0)=".HLP3"
^PRCT(446.4,4,1,669,0)="S.CLR                       ::No location"
^PRCT(446.4,4,1,670,0)="P""PMI process must"""
^PRCT(446.4,4,1,671,0)="P""begin with a"""
^PRCT(446.4,4,1,672,0)="P""location label."""
^PRCT(446.4,4,1,673,0)="W10"
^PRCT(446.4,4,1,674,0)="Q"
^PRCT(446.4,4,1,675,0)=".CLR5                       ::Clear var"
^PRCT(446.4,4,1,676,0)="DV(5)="""""
^PRCT(446.4,4,1,677,0)="Q"
^PRCT(446.4,4,1,678,0)="                            ::"
^PRCT(446.4,4,1,679,0)="E                           ::End of program"
^PRCT(446.4,5,0)="NON-EXPENDABLE^ENNX^EN-ENEQNX1^^^^^3010208^6"
^PRCT(446.4,5,1,0)="^446.41^457^457^3010109^^"
^PRCT(446.4,5,1,1,0)="                                 ::RGY/ISC-Washington@Altoona, Pa"
^PRCT(446.4,5,1,2,0)="                                 ::DH/ISC-Washington@Hampton, Va"
^PRCT(446.4,5,1,3,0)="                                 ::SAB/OIFO-Washington@Hampton, VA"
^PRCT(446.4,5,1,4,0)="                                 ::1.9.2001"
^PRCT(446.4,5,1,5,0)="                                 ::"
^PRCT(446.4,5,1,6,0)="                                 ::Equipment Inventory Program"
^PRCT(446.4,5,1,7,0)="                                 ::File I will hold the identifiers (IEN's)"
^PRCT(446.4,5,1,8,0)="                                 ::of equipment which has been physically"
^PRCT(446.4,5,1,9,0)="                                 ::located. Set up to hold as"
^PRCT(446.4,5,1,10,0)="                                 ::many as 1000 records."
^PRCT(446.4,5,1,11,0)="                                 ::As always, first record is a user"
^PRCT(446.4,5,1,12,0)="                                 ::specified identifier. Main purpose is"
^PRCT(446.4,5,1,13,0)="                                 ::to safeguard against inadvertent file"
^PRCT(446.4,5,1,14,0)="                                 ::purges. We suggest that user enter"
^PRCT(446.4,5,1,15,0)="                                 ::something like 'NX'-initials-date"
^PRCT(446.4,5,1,16,0)="                                 ::(ex: NX-SAW-9-12-90). If unit times"
^PRCT(446.4,5,1,17,0)="                                 ::out for inactivity or is turned off,"
^PRCT(446.4,5,1,18,0)="                                 ::this record will be displayed at"
^PRCT(446.4,5,1,19,0)="                                 ::power up time."
^PRCT(446.4,5,1,20,0)="                                 ::"
^PRCT(446.4,5,1,21,0)="                                 ::The Variable file (V) is a small file"
^PRCT(446.4,5,1,22,0)="                                 ::used for scratch variables since"
^PRCT(446.4,5,1,23,0)="                                 ::IRL limits numeric and string registers."
^PRCT(446.4,5,1,24,0)="                                 ::V(0) is a scratch variable"
^PRCT(446.4,5,1,25,0)="                                 ::V(1) is a scratch variable"
^PRCT(446.4,5,1,26,0)="                                 ::V(2) the last location entered"
^PRCT(446.4,5,1,27,0)="                                 ::V(3) the last equipment number entered"
^PRCT(446.4,5,1,28,0)="                                 ::V(4) contains station number"
^PRCT(446.4,5,1,29,0)="                                 ::V(5) station number on EE label"
^PRCT(446.4,5,1,30,0)="                                 ::V(6) alternate station number"
^PRCT(446.4,5,1,31,0)="                                 ::V(7) another alternate station number"
^PRCT(446.4,5,1,32,0)="                                 ::V(8) another alternate station number"
^PRCT(446.4,5,1,33,0)="                                 ::V(9) another alternate station number"
^PRCT(446.4,5,1,34,0)="                                 ::V(10) another alternate station number"
^PRCT(446.4,5,1,35,0)="                                 ::V(11) another alternate station number"
^PRCT(446.4,5,1,36,0)="                                 ::V(12) another alternate station number"
^PRCT(446.4,5,1,37,0)="                                 ::V(13) last of eight possible alternate"
^PRCT(446.4,5,1,38,0)="                                 ::      station numbers"
^PRCT(446.4,5,1,39,0)="                                 ::F(0) is 39 char formatter"
^PRCT(446.4,5,1,40,0)="                                 ::"
^PRCT(446.4,5,1,41,0)="OI(1000,40)                      ::Initialize INV file"
^PRCT(446.4,5,1,42,0)="OV(14,40)                        ::Initialize variable file"
^PRCT(446.4,5,1,43,0)="OF(1,39)                         ::Truncation in REV/DEL"
^PRCT(446.4,5,1,44,0)="                                 ::"
^PRCT(446.4,5,1,45,0)=".BEG                             ::     BEG"
^PRCT(446.4,5,1,46,0)="DV(4)="""""
^PRCT(446.4,5,1,47,0)="DV(4)=|ENSTA|"
^PRCT(446.4,5,1,48,0)="DV(6)=""""                         ::Initialize alternate station"
^PRCT(446.4,5,1,49,0)="DV(6)=|ENSTA(1)|"
^PRCT(446.4,5,1,50,0)="DV(7)=""""                         ::numbers"
^PRCT(446.4,5,1,51,0)="DV(7)=|ENSTA(2)|"
^PRCT(446.4,5,1,52,0)="DV(8)="""""
^PRCT(446.4,5,1,53,0)="DV(8)=|ENSTA(3)|"
^PRCT(446.4,5,1,54,0)="DV(9)="""""
^PRCT(446.4,5,1,55,0)="DV(9)=|ENSTA(4)|"
^PRCT(446.4,5,1,56,0)="DV(10)="""""
^PRCT(446.4,5,1,57,0)="DV(10)=|ENSTA(5)|"
^PRCT(446.4,5,1,58,0)="DV(11)="""""
^PRCT(446.4,5,1,59,0)="DV(11)=|ENSTA(6)|"
^PRCT(446.4,5,1,60,0)="DV(12)="""""
^PRCT(446.4,5,1,61,0)="DV(12)=|ENSTA(7)|"
^PRCT(446.4,5,1,62,0)="DV(13)="""""
^PRCT(446.4,5,1,63,0)="DV(13)=|ENSTA(8)|"
^PRCT(446.4,5,1,64,0)="S.CLR"
^PRCT(446.4,5,1,65,0)="P""STATION NUMBER:"""
^PRCT(446.4,5,1,66,0)="PV(4)                            ::Alternates not shown"
^PRCT(446.4,5,1,67,0)="P""To continue, please"""
^PRCT(446.4,5,1,68,0)="P""press <ENTER>..."""
^PRCT(446.4,5,1,69,0)="A"
^PRCT(446.4,5,1,70,0)="D$0="""""
^PRCT(446.4,5,1,71,0)="H#1=I                            ::Set reg 1 to current rec # in INV file"
^PRCT(446.4,5,1,72,0)="G#1>0.DAT                        ::If data already exists, warn user"
^PRCT(446.4,5,1,73,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,5,1,74,0)="P""Please enter ...""              ::Ask user for file ID"
^PRCT(446.4,5,1,75,0)="P""file ID: ""                     ::   (cont)"
^PRCT(446.4,5,1,76,0)="A                                ::User input of file ID"
^PRCT(446.4,5,1,77,0)="D$0=""ID ""+$0                     ::Force an entry"
^PRCT(446.4,5,1,78,0)="RI                               ::Store file ID into INV file"
^PRCT(446.4,5,1,79,0)="DV(2)=""""                         ::Initialize V(2)"
^PRCT(446.4,5,1,80,0)="DV(3)="""""
^PRCT(446.4,5,1,81,0)="                                 ::"
^PRCT(446.4,5,1,82,0)=".START                           ::     START"
^PRCT(446.4,5,1,83,0)="S.CLR"
^PRCT(446.4,5,1,84,0)="P""1. Take Inventory"""
^PRCT(446.4,5,1,85,0)="P""2. Transmit Data""              ::  (cont)"
^PRCT(446.4,5,1,86,0)="P""3. Review/Delete""              ::  (cont)"
^PRCT(446.4,5,1,87,0)="P""ENTER (1-3):"""
^PRCT(446.4,5,1,88,0)="A                                ::User input of option"
^PRCT(446.4,5,1,89,0)="G$0=""1"".ENTER                    ::ENTER is entry tag for INV"
^PRCT(446.4,5,1,90,0)="G$0=""2"".XMIT                     ::XMIT is entry tag for transmit"
^PRCT(446.4,5,1,91,0)="G$0=""3"".REVDEL                   ::REVDEL is entry tag for deletion"
^PRCT(446.4,5,1,92,0)="B00                              ::Sound beep two times"
^PRCT(446.4,5,1,93,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,5,1,94,0)="P""*** Error, enter a""            ::Print message of invalid input"
^PRCT(446.4,5,1,95,0)="P""number from 1-3, or""           ::  (cont)"
^PRCT(446.4,5,1,96,0)="P""turn TRAKKER off."""
^PRCT(446.4,5,1,97,0)="W5                               ::Wait 5 seconds to allow view of message"
^PRCT(446.4,5,1,98,0)="G.START                          ::Go back and display main menu"
^PRCT(446.4,5,1,99,0)="                                 ::"
^PRCT(446.4,5,1,100,0)="                                 ::Entries at this point should look like:"
^PRCT(446.4,5,1,101,0)="                                 ::  SP21-110, or"
^PRCT(446.4,5,1,102,0)="                                 ::  688 EE6798, or maybe"
^PRCT(446.4,5,1,103,0)="                                 ::  7832 EE659098"
^PRCT(446.4,5,1,104,0)="                                 ::Anything else needs to be rejected."
^PRCT(446.4,5,1,105,0)=".ENTER                           ::     ENTER"
^PRCT(446.4,5,1,106,0)="H#1=I                            ::Set regist 1 to Num. of rec. in INV file"
^PRCT(446.4,5,1,107,0)="G#1>995.STOP                     ::If INV file full, no more entries"
^PRCT(446.4,5,1,108,0)="S#1>985.WARN                     ::If INV file almost full, warn user"
^PRCT(446.4,5,1,109,0)="D$0=""\e[2JRM: ""+V(2)             ::Clear screen and display Room number"
^PRCT(446.4,5,1,110,0)="P$0                              ::  (cont)"
^PRCT(446.4,5,1,111,0)="D$0=""ID: ""+V(3)                  ::Display current identifier"
^PRCT(446.4,5,1,112,0)="P$0                              ::  (cont)"
^PRCT(446.4,5,1,113,0)="P""...Reader ready...\r\n""        ::Display input symbol for INV"
^PRCT(446.4,5,1,114,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,5,1,115,0)="A                                ::Allow user input of next equip id"
^PRCT(446.4,5,1,116,0)="DV(1)=$0                         ::For safe keeping"
^PRCT(446.4,5,1,117,0)="G$0=""."".START                    ::If input is ""."", goto main menu"
^PRCT(446.4,5,1,118,0)="D$1=$0L2                         ::First 2 char of input"
^PRCT(446.4,5,1,119,0)="G$1=""SP"".LOC                     ::Location label"
^PRCT(446.4,5,1,120,0)="G$0=""F4"".NOLBL                   ::Process item without barcode label"
^PRCT(446.4,5,1,121,0)="D#1=[$0]                         ::Is this a PM number?"
^PRCT(446.4,5,1,122,0)="S#1>8.PMN                        ::Maybe so, go check"
^PRCT(446.4,5,1,123,0)="GV(5)=""PM"".ENTPM                 ::It was a PM number"
^PRCT(446.4,5,1,124,0)="S.PARSE                          ::What is it? Should be EE label."
^PRCT(446.4,5,1,125,0)="SV(5)=""??"".HLP1                  ::Not what we expected, print help and"
^PRCT(446.4,5,1,126,0)="GV(5)=""??"".ENTER                 ::try again"
^PRCT(446.4,5,1,127,0)=".ENTPM                           ::Tag to skip parsing"
^PRCT(446.4,5,1,128,0)="GV(2)="""".NOLOC                   ::Have EE label, but no open loc"
^PRCT(446.4,5,1,129,0)="GV(5)=""PM"".RECNX                 ::PM number and open loc; record"
^PRCT(446.4,5,1,130,0)="GV(4)=V(5).RECNX                 ::EE label and open loc; record"
^PRCT(446.4,5,1,131,0)="GV(5)=V(6).RECNX                 ::Alternate station #"
^PRCT(446.4,5,1,132,0)="GV(5)=V(7).RECNX                 ::Second alternate station #"
^PRCT(446.4,5,1,133,0)="GV(5)=V(8).RECNX                 ::Third alternate station #"
^PRCT(446.4,5,1,134,0)="GV(5)=V(9).RECNX                 ::Fourth alternate station #"
^PRCT(446.4,5,1,135,0)="GV(5)=V(10).RECNX                ::Fifth alternate station #"
^PRCT(446.4,5,1,136,0)="GV(5)=V(11).RECNX                ::Sixth alternate station #"
^PRCT(446.4,5,1,137,0)="GV(5)=V(12).RECNX                ::Seventh alternate station #"
^PRCT(446.4,5,1,138,0)="GV(5)=V(13).RECNX                ::Eighth alternate station #"
^PRCT(446.4,5,1,139,0)=".RPT                             ::In case we need to repeat"
^PRCT(446.4,5,1,140,0)="S.CLR                            ::exception message"
^PRCT(446.4,5,1,141,0)="P""WARNING...EE label"""
^PRCT(446.4,5,1,142,0)="B01"
^PRCT(446.4,5,1,143,0)="D$1=""is from VAMC ""+V(5)         ::Show foreign station"
^PRCT(446.4,5,1,144,0)="P$1"
^PRCT(446.4,5,1,145,0)="P""To continue, press""            ::Next screen"
^PRCT(446.4,5,1,146,0)="P""<ENTER>..."""
^PRCT(446.4,5,1,147,0)="A                                ::Any char OK"
^PRCT(446.4,5,1,148,0)="S.CLR"
^PRCT(446.4,5,1,149,0)="P""Enter '1' to accept"""
^PRCT(446.4,5,1,150,0)="PV(1)"
^PRCT(446.4,5,1,151,0)="P""or '2' to reject it."""
^PRCT(446.4,5,1,152,0)="A1                               ::Input 1 char"
^PRCT(446.4,5,1,153,0)="G$0=""1"".RECNX                    ::Add to file"
^PRCT(446.4,5,1,154,0)="G$0=""2"".ENTER                    ::Ignore it"
^PRCT(446.4,5,1,155,0)="G.RPT                            ::Repeat the question"
^PRCT(446.4,5,1,156,0)="                                 ::"
^PRCT(446.4,5,1,157,0)=".RECNX                           ::    RECNX"
^PRCT(446.4,5,1,158,0)="                                 ::Add EE number to I"
^PRCT(446.4,5,1,159,0)="DV(3)=V(1)                       ::Update variable"
^PRCT(446.4,5,1,160,0)="D$0=V(1)                         ::Restore register"
^PRCT(446.4,5,1,161,0)="RI                               ::File EE number"
^PRCT(446.4,5,1,162,0)="DV(5)=""""                         ::Clear reg"
^PRCT(446.4,5,1,163,0)="G.ENTER                          ::Next scan"
^PRCT(446.4,5,1,164,0)="                                 ::"
^PRCT(446.4,5,1,165,0)=".NOLOC                           ::     NOLOC"
^PRCT(446.4,5,1,166,0)="B1101                            ::Audible signal"
^PRCT(446.4,5,1,167,0)="S.CLR                            ::EE label scanned before"
^PRCT(446.4,5,1,168,0)="P""Inventory process""             ::location"
^PRCT(446.4,5,1,169,0)="P""must begin with"""
^PRCT(446.4,5,1,170,0)="P""location label."""
^PRCT(446.4,5,1,171,0)="P""Press <ENTER>..."""
^PRCT(446.4,5,1,172,0)="A                                ::Accept any char"
^PRCT(446.4,5,1,173,0)="G.ENTER                          ::Try again"
^PRCT(446.4,5,1,174,0)="                                 ::"
^PRCT(446.4,5,1,175,0)=".NOLBL                           ::     NOLBL"
^PRCT(446.4,5,1,176,0)="GV(2)="""".NOLOC                   ::No open loc; can't proceed"
^PRCT(446.4,5,1,177,0)="S.CLR                            ::Get text description of"
^PRCT(446.4,5,1,178,0)="P""Enter MODEL NUMBER:\r\n""       ::items without barcode"
^PRCT(446.4,5,1,179,0)="D$0="""""
^PRCT(446.4,5,1,180,0)="A                                ::labels"
^PRCT(446.4,5,1,181,0)="G$0=""^"".NLABRT                   ::User abort"
^PRCT(446.4,5,1,182,0)="D$2=$0                           ::Temp save of mod in $2"
^PRCT(446.4,5,1,183,0)="S.CLR"
^PRCT(446.4,5,1,184,0)="P""Enter SERIAL NUMBER:""          ::Get serial #"
^PRCT(446.4,5,1,185,0)="D$0="""""
^PRCT(446.4,5,1,186,0)="A"
^PRCT(446.4,5,1,187,0)="G$0=""^"".NLABRT                   ::User abort"
^PRCT(446.4,5,1,188,0)="G$0="""".NLABRT"
^PRCT(446.4,5,1,189,0)="D$3=$0                           ::Temp save of s/n in $3"
^PRCT(446.4,5,1,190,0)=".DESC                            ::Item description"
^PRCT(446.4,5,1,191,0)="S.CLR"
^PRCT(446.4,5,1,192,0)="P""Enter DESCRIPTION:\r\n""        ::Free text description"
^PRCT(446.4,5,1,193,0)="A                                ::40 char max because of fixed"
^PRCT(446.4,5,1,194,0)="D#0=[$0]                         ::record size"
^PRCT(446.4,5,1,195,0)="G#0<41.NOLBL1"
^PRCT(446.4,5,1,196,0)="S.CLR                            ::Clear screen for"
^PRCT(446.4,5,1,197,0)="P""ERROR  Description""            ::error message"
^PRCT(446.4,5,1,198,0)="P""may not exceed 40"""
^PRCT(446.4,5,1,199,0)="P""characters."""
^PRCT(446.4,5,1,200,0)="P""Press <ENTER>...""              ::Wait for user resp"
^PRCT(446.4,5,1,201,0)="A                                ::Take anything"
^PRCT(446.4,5,1,202,0)="G.DESC                           ::Try again"
^PRCT(446.4,5,1,203,0)=".NOLBL1                          ::Continue"
^PRCT(446.4,5,1,204,0)="D$1=$0                           ::Shuffle the string"
^PRCT(446.4,5,1,205,0)="D$0=""MOD:""+$2                    ::registers and file"
^PRCT(446.4,5,1,206,0)="RI                               ::user inputs"
^PRCT(446.4,5,1,207,0)="D$0=""S/N:""+$3"
^PRCT(446.4,5,1,208,0)="RI"
^PRCT(446.4,5,1,209,0)="D$0=$1"
^PRCT(446.4,5,1,210,0)="RI                               ::Filing complete"
^PRCT(446.4,5,1,211,0)=".NLABRT                          ::Jump here to skip filing"
^PRCT(446.4,5,1,212,0)="G.ENTER                          ::End of program segment"
^PRCT(446.4,5,1,213,0)="                                 ::"
^PRCT(446.4,5,1,214,0)=".PMN                             ::     PMN"
^PRCT(446.4,5,1,215,0)="D$1=$0M1,5                       ::Is this really a PM number?"
^PRCT(446.4,5,1,216,0)="G$1=""-"".PMN1                     ::Apparently so"
^PRCT(446.4,5,1,217,0)="Q                                ::Not PM number, return"
^PRCT(446.4,5,1,218,0)=".PMN1                            ::Assume NNNN-NNNN is PM#"
^PRCT(446.4,5,1,219,0)="DV(5)=""PM""                       ::Set flag"
^PRCT(446.4,5,1,220,0)="DV(0)=""""                         ::Add prefix"
^PRCT(446.4,5,1,221,0)="DV(0)=V(1)"
^PRCT(446.4,5,1,222,0)="DV(1)="""""
^PRCT(446.4,5,1,223,0)="DV(1)=""PM#:""+V(0)"
^PRCT(446.4,5,1,224,0)="Q                                ::Return"
^PRCT(446.4,5,1,225,0)="                                 ::"
^PRCT(446.4,5,1,226,0)=".REVDEL                          ::     REVDEL"
^PRCT(446.4,5,1,227,0)="H#1=I                            ::Get last"
^PRCT(446.4,5,1,228,0)="D#1=#1-1                         ::record number"
^PRCT(446.4,5,1,229,0)=".LP10"
^PRCT(446.4,5,1,230,0)="G#1=0.START                      ::Can't go above first LOCATION"
^PRCT(446.4,5,1,231,0)="S.CLR"
^PRCT(446.4,5,1,232,0)="C$1=#1                           ::Display"
^PRCT(446.4,5,1,233,0)="D$0=$1+"") ""                      ::content of"
^PRCT(446.4,5,1,234,0)="D$0=$0+I(#1)                     ::current record"
^PRCT(446.4,5,1,235,0)="DF(0)=$0                         ::Truncate to"
^PRCT(446.4,5,1,236,0)="D$0=F(0)                         ::40 char"
^PRCT(446.4,5,1,237,0)="P$0"
^PRCT(446.4,5,1,238,0)="P""(D)elete, (Q)uit,""             ::Get instructions"
^PRCT(446.4,5,1,239,0)="P""or (C)ontinue..."""
^PRCT(446.4,5,1,240,0)="D$0=""""                           ::Clear input buffer"
^PRCT(446.4,5,1,241,0)="A1"
^PRCT(446.4,5,1,242,0)="G$0=""D"".LP20                     ::Deletion"
^PRCT(446.4,5,1,243,0)="G$0=""Q"".START                    ::Back to main menu"
^PRCT(446.4,5,1,244,0)="G$0=""C"".LP30                     ::Next record"
^PRCT(446.4,5,1,245,0)="P""Error. Must enter"""
^PRCT(446.4,5,1,246,0)="P""D, Q, or C."""
^PRCT(446.4,5,1,247,0)="P""To proceed, please"""
^PRCT(446.4,5,1,248,0)="P""press <ENTER>..."""
^PRCT(446.4,5,1,249,0)="D$0="""""
^PRCT(446.4,5,1,250,0)="A"
^PRCT(446.4,5,1,251,0)="G.LP10"
^PRCT(446.4,5,1,252,0)=".LP20                            ::Physical deletion"
^PRCT(446.4,5,1,253,0)="S.CLR"
^PRCT(446.4,5,1,254,0)="P""Deleting record"""
^PRCT(446.4,5,1,255,0)="D$0=""number ""+$1"
^PRCT(446.4,5,1,256,0)="D$0=$0+""..."""
^PRCT(446.4,5,1,257,0)="P$0"
^PRCT(446.4,5,1,258,0)="W5"
^PRCT(446.4,5,1,259,0)="DI(#1)=""*****""                   ::Deletion marker"
^PRCT(446.4,5,1,260,0)="P""(Q)uit or (C)ont?""             ::Get instructions"
^PRCT(446.4,5,1,261,0)="D$0="""""
^PRCT(446.4,5,1,262,0)="A1"
^PRCT(446.4,5,1,263,0)="G$0=""C"".LP25                     ::Continue"
^PRCT(446.4,5,1,264,0)="G.START                          ::Back to main menu"
^PRCT(446.4,5,1,265,0)=".LP25                            ::     LP25"
^PRCT(446.4,5,1,266,0)="D#1=#1-1                         ::Move file pointer"
^PRCT(446.4,5,1,267,0)="G.LP10"
^PRCT(446.4,5,1,268,0)=".LP30                            ::     LP30"
^PRCT(446.4,5,1,269,0)="D#1=#1-1                         ::Move file pointer"
^PRCT(446.4,5,1,270,0)="G.LP10"
^PRCT(446.4,5,1,271,0)="                                 ::"
^PRCT(446.4,5,1,272,0)=".XMIT                            ::     XMIT"
^PRCT(446.4,5,1,273,0)="D$0=""ENNX""                       ::Define data identifier"
^PRCT(446.4,5,1,274,0)="XMP,$0                           ::Transmit data identifier to host system"
^PRCT(446.4,5,1,275,0)="XMP,I                            ::Transmit INV file to host device"
^PRCT(446.4,5,1,276,0)="H#1=I                            ::Find how many records exist in INV file"
^PRCT(446.4,5,1,277,0)="C$0=#1                           ::Set string variable to Number of Records"
^PRCT(446.4,5,1,278,0)="D$0=""***END***^""+$0              ::Setup End of File message"
^PRCT(446.4,5,1,279,0)="XMP,$0                           ::Send End of File message to external device"
^PRCT(446.4,5,1,280,0)="YMN;1                            ::Clear data buffer"
^PRCT(446.4,5,1,281,0)=".ASK                             ::     ASK"
^PRCT(446.4,5,1,282,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,5,1,283,0)="P""Data xmitted, do""              ::Display confirmation of transmission message"
^PRCT(446.4,5,1,284,0)="P""you want to purge""             ::  (cont)"
^PRCT(446.4,5,1,285,0)="P""the file (Y/N) ? ""             ::  (cont)"
^PRCT(446.4,5,1,286,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,5,1,287,0)="A                                ::Allow user input"
^PRCT(446.4,5,1,288,0)="G$0=""Y"".PUR                      ::If ""Y"", purge inventory file"
^PRCT(446.4,5,1,289,0)="G$0=""N"".START                    ::If user input is a ""N"", go back to main menu"
^PRCT(446.4,5,1,290,0)="G$0=""."".START                    ::If user input is a ""."", go back to main menu"
^PRCT(446.4,5,1,291,0)="B00                              ::Sound beep two times"
^PRCT(446.4,5,1,292,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,5,1,293,0)="P""Please enter a ""               ::Display error message"
^PRCT(446.4,5,1,294,0)="P""Y or N.""                       ::  (cont)"
^PRCT(446.4,5,1,295,0)="W3                               ::Wait 5 seconds to allow view of message"
^PRCT(446.4,5,1,296,0)="G.ASK                            ::Go back and ask purge question"
^PRCT(446.4,5,1,297,0)="                                 ::"
^PRCT(446.4,5,1,298,0)=".PUR                             ::     PUR"
^PRCT(446.4,5,1,299,0)="HI=0                             ::Purge of INV file"
^PRCT(446.4,5,1,300,0)="HV=0                             ::Purge of local variable file"
^PRCT(446.4,5,1,301,0)="B0                               ::Sound beep one time"
^PRCT(446.4,5,1,302,0)="P""** File Purged **""             ::Inform user of purged file"
^PRCT(446.4,5,1,303,0)="W3                               ::Wait three seconds to allow view of message"
^PRCT(446.4,5,1,304,0)="G.BEG                            ::Go back to begining of program"
^PRCT(446.4,5,1,305,0)="                                 ::"
^PRCT(446.4,5,1,306,0)=".CLR                             ::     CLR"
^PRCT(446.4,5,1,307,0)="P""\e[2J""                         ::Clear screen escape sequence"
^PRCT(446.4,5,1,308,0)="D$0=""""                           ::Clear input register"
^PRCT(446.4,5,1,309,0)="Q                                ::Quit subroutine"
^PRCT(446.4,5,1,310,0)="                                 ::"
^PRCT(446.4,5,1,311,0)=".WARN                            ::     WARN"
^PRCT(446.4,5,1,312,0)="B0                               ::Sound beep"
^PRCT(446.4,5,1,313,0)="P""\e[2J**** WARNING ****""        ::Clear screen and print warning message"
^PRCT(446.4,5,1,314,0)="P""Data file is almost""           ::  (cont)"
^PRCT(446.4,5,1,315,0)="P""full.  Please XMIT""            ::  (cont)"
^PRCT(446.4,5,1,316,0)="P""data and purge file.""          ::  (cont)"
^PRCT(446.4,5,1,317,0)="W3                               ::Wait three seconds to allow view of message"
^PRCT(446.4,5,1,318,0)="Q                                ::Quit subroutine"
^PRCT(446.4,5,1,319,0)="                                 ::"
^PRCT(446.4,5,1,320,0)=".STOP                            ::     STOP"
^PRCT(446.4,5,1,321,0)="B00                              ::Sound beep two times"
^PRCT(446.4,5,1,322,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,5,1,323,0)="P""Sorry, data file is""           ::Print error message"
^PRCT(446.4,5,1,324,0)="P""FULL, you must XMIT""           ::  (cont)"
^PRCT(446.4,5,1,325,0)="P""and purge file.""               ::  (cont)"
^PRCT(446.4,5,1,326,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,5,1,327,0)="G.START                          ::Go back to main menu"
^PRCT(446.4,5,1,328,0)="                                 ::"
^PRCT(446.4,5,1,329,0)=".DAT                             ::     DAT"
^PRCT(446.4,5,1,330,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,5,1,331,0)="B00                              ::Sound beep two times"
^PRCT(446.4,5,1,332,0)="P""*** WARNING ***""               ::Print warning message of existing data"
^PRCT(446.4,5,1,333,0)="P""Data exists on""                ::  (cont)"
^PRCT(446.4,5,1,334,0)="P""this barcode reader.""          ::  (cont)"
^PRCT(446.4,5,1,335,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,5,1,336,0)="S.CLR"
^PRCT(446.4,5,1,337,0)="P""The file ID is:""               ::Display file ID to user"
^PRCT(446.4,5,1,338,0)="D$0=I(0)                         ::Setup display of file ID"
^PRCT(446.4,5,1,339,0)="P$0                              ::Print file id"
^PRCT(446.4,5,1,340,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,5,1,341,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,5,1,342,0)="P""Do you want to""                ::Query user to purge existing file"
^PRCT(446.4,5,1,343,0)="P""purge this file ...""           ::  (cont)"
^PRCT(446.4,5,1,344,0)="P""... (Y/N) ? ""                  ::  (cont)"
^PRCT(446.4,5,1,345,0)="D$0=""""                           ::Initialize input variable"
^PRCT(446.4,5,1,346,0)="A                                ::User input"
^PRCT(446.4,5,1,347,0)="G$0=""Y"".PUR                      ::If user input is a ""Y"", go and purge files"
^PRCT(446.4,5,1,348,0)="G$0=""N"".START                    ::If user input is a ""N"", go to main menu"
^PRCT(446.4,5,1,349,0)="G$0=""."".START                    ::If user input is a ""."", go to main menu"
^PRCT(446.4,5,1,350,0)="B00                              ::Sound beep two times"
^PRCT(446.4,5,1,351,0)="S.CLR                            ::Clear screen"
^PRCT(446.4,5,1,352,0)="P""Please enter a ""               ::Display error message"
^PRCT(446.4,5,1,353,0)="P""Y or N.""                       ::  (cont)"
^PRCT(446.4,5,1,354,0)="W5                               ::Wait five seconds to allow view of message"
^PRCT(446.4,5,1,355,0)="G.DAT                            ::Go back a existing data question"
^PRCT(446.4,5,1,356,0)="                                 ::"
^PRCT(446.4,5,1,357,0)=".LOC                             ::     LOC"
^PRCT(446.4,5,1,358,0)="                                 ::Process location label in $0"
^PRCT(446.4,5,1,359,0)="SV(2)="""".NLOC                    ::No location presently open"
^PRCT(446.4,5,1,360,0)="SV(2)=$0.CLOC                    ::Location is open"
^PRCT(446.4,5,1,361,0)="G$0="""".LOCQ                      ::All is well"
^PRCT(446.4,5,1,362,0)="P""ERROR Must close""              ::Display error"
^PRCT(446.4,5,1,363,0)="B1101                            ::message and sound alarm"
^PRCT(446.4,5,1,364,0)="PV(2)"
^PRCT(446.4,5,1,365,0)="P""before you may open"""
^PRCT(446.4,5,1,366,0)="P$0"
^PRCT(446.4,5,1,367,0)="W10                              ::10 sec to read"
^PRCT(446.4,5,1,368,0)=".LOCQ                            ::Exit from subroutine"
^PRCT(446.4,5,1,369,0)="G.ENTER                          ::Next read"
^PRCT(446.4,5,1,370,0)=".NLOC                            ::     NLOC"
^PRCT(446.4,5,1,371,0)="DV(2)=$0                         ::Store new current location"
^PRCT(446.4,5,1,372,0)="RI                               ::Add new loc to file"
^PRCT(446.4,5,1,373,0)="D$0=""""                           ::All OK flag back to LOC"
^PRCT(446.4,5,1,374,0)="Q"
^PRCT(446.4,5,1,375,0)=".CLOC                            ::     CLOC"
^PRCT(446.4,5,1,376,0)="DV(2)=""""                         ::Close current location"
^PRCT(446.4,5,1,377,0)="D$0=""""                           ::All OK flag back to LOC"
^PRCT(446.4,5,1,378,0)="DV(3)=""""                         ::Clear last EE for new loc"
^PRCT(446.4,5,1,379,0)="Q"
^PRCT(446.4,5,1,380,0)="G.ENTER"
^PRCT(446.4,5,1,381,0)="                                 ::"
^PRCT(446.4,5,1,382,0)=".PARSE                           ::     PARSE"
^PRCT(446.4,5,1,383,0)="DV(5)="""""
^PRCT(446.4,5,1,384,0)="D#1=0                            ::Initialize character count"
^PRCT(446.4,5,1,385,0)=".FNDBL                           ::Look for space"
^PRCT(446.4,5,1,386,0)="D#1=#1+1                         ::Increment counter"
^PRCT(446.4,5,1,387,0)="D$1=$0M1,#1                      ::Examine current char position"
^PRCT(446.4,5,1,388,0)="G$1="""".PARS1                     ::Must not be any spaces"
^PRCT(446.4,5,1,389,0)="G$1="" "".PARS1                    ::That's more like it"
^PRCT(446.4,5,1,390,0)="G.FNDBL                          ::Keep looping"
^PRCT(446.4,5,1,391,0)=".PARS1"
^PRCT(446.4,5,1,392,0)="S$1="""".ERR1                      ::Can't be right"
^PRCT(446.4,5,1,393,0)="S$1="" "".PARS2                    ::Continue"
^PRCT(446.4,5,1,394,0)="Q                                ::Return control to segment ENTER"
^PRCT(446.4,5,1,395,0)="                                 ::"
^PRCT(446.4,5,1,396,0)=".PARS2                           ::     PARS2 (2ND LEVEL)"
^PRCT(446.4,5,1,397,0)="D#2=[$0]                         ::Length of label"
^PRCT(446.4,5,1,398,0)="D#3=#1+1                         ::Start of second piece"
^PRCT(446.4,5,1,399,0)="D#4=#2-#1                        ::Length of second piece"
^PRCT(446.4,5,1,400,0)="D$1=$0M#4,#3                     ::Set $1 to second piece"
^PRCT(446.4,5,1,401,0)="D$2=$1L2                         ::Application code"
^PRCT(446.4,5,1,402,0)="G$2=""EE"".PARS3                   ::Application code should be EE"
^PRCT(446.4,5,1,403,0)="DV(5)=""??""                       ::Error condition"
^PRCT(446.4,5,1,404,0)="G.PARS4"
^PRCT(446.4,5,1,405,0)=".PARS3                           ::Where we want to be"
^PRCT(446.4,5,1,406,0)="D#3=#1-1                         ::Length of station number"
^PRCT(446.4,5,1,407,0)="DV(5)=$0L#3                      ::Store station number from label"
^PRCT(446.4,5,1,408,0)=".PARS4                           ::Re-entry from error condition"
^PRCT(446.4,5,1,409,0)="Q                                ::Return control to PARSE, passing V(5)"
^PRCT(446.4,5,1,410,0)="                                 ::"
^PRCT(446.4,5,1,411,0)=".ERR1                            ::     ERR1"
^PRCT(446.4,5,1,412,0)="DV(5)=""??""                       ::Flag error for segment .ENTER"
^PRCT(446.4,5,1,413,0)="Q"
^PRCT(446.4,5,1,414,0)="                                 ::"
^PRCT(446.4,5,1,415,0)=".HLP1                            ::     HLP1"
^PRCT(446.4,5,1,416,0)="S.CLR                            ::Called from .ENTER if input"
^PRCT(446.4,5,1,417,0)="GV(1)=""?"".HLP12                  ::is a question"
^PRCT(446.4,5,1,418,0)="P""** INVALID ENTRY **""           ::or is questionable"
^PRCT(446.4,5,1,419,0)="B1010                            ::Audible signal"
^PRCT(446.4,5,1,420,0)="P""Press <ENTER> to"""
^PRCT(446.4,5,1,421,0)="P""continue, or enter"""
^PRCT(446.4,5,1,422,0)="P""'?' for help."""
^PRCT(446.4,5,1,423,0)="D$0="""""
^PRCT(446.4,5,1,424,0)="A                                ::User response"
^PRCT(446.4,5,1,425,0)="G$0="""".HLP1Q                     ::Help declined"
^PRCT(446.4,5,1,426,0)="D$0=$0L1                         ::Look at first char"
^PRCT(446.4,5,1,427,0)=".HLP12                           ::'?' to begin with"
^PRCT(446.4,5,1,428,0)="SV(1)=""?"".HLP2                   ::More help"
^PRCT(446.4,5,1,429,0)="S$0=""?"".HLP2                     ::Show help text"
^PRCT(446.4,5,1,430,0)=".HLP1Q                           ::Exit subroutine"
^PRCT(446.4,5,1,431,0)="Q"
^PRCT(446.4,5,1,432,0)="                                 ::"
^PRCT(446.4,5,1,433,0)=".HLP2                            ::     HLP2"
^PRCT(446.4,5,1,434,0)="D$0=V(2)                         ::Ck for location"
^PRCT(446.4,5,1,435,0)="G$0="""".HLP3"
^PRCT(446.4,5,1,436,0)="P""Expecting equipment""           ::Expanded help"
^PRCT(446.4,5,1,437,0)="P""id (ex:688 EE9372),"""
^PRCT(446.4,5,1,438,0)="P""PM #, or special"""
^PRCT(446.4,5,1,439,0)="P""function key F4."""
^PRCT(446.4,5,1,440,0)="W10                              ::10 sec to read"
^PRCT(446.4,5,1,441,0)="P""Will also accept"""
^PRCT(446.4,5,1,442,0)="D$0=V(2)                         ::Display current"
^PRCT(446.4,5,1,443,0)="P$0                              ::location"
^PRCT(446.4,5,1,444,0)="P""to close location"""
^PRCT(446.4,5,1,445,0)="P""or '.' to exit."""
^PRCT(446.4,5,1,446,0)="W10"
^PRCT(446.4,5,1,447,0)="Q"
^PRCT(446.4,5,1,448,0)="                                 ::     HLP3"
^PRCT(446.4,5,1,449,0)=".HLP3"
^PRCT(446.4,5,1,450,0)="S.CLR                            ::No location"
^PRCT(446.4,5,1,451,0)="P""Inv. process must"""
^PRCT(446.4,5,1,452,0)="P""begin with a"""
^PRCT(446.4,5,1,453,0)="P""location label."""
^PRCT(446.4,5,1,454,0)="W10"
^PRCT(446.4,5,1,455,0)="Q"
^PRCT(446.4,5,1,456,0)="                                 ::"
^PRCT(446.4,5,1,457,0)="E                                ::End of program"
^PRCT(446.4,"B","EXPENDABLE PHYSICAL COUNT",1)=""
^PRCT(446.4,"B","EXPENDABLE USAGE",2)=""
^PRCT(446.4,"B","NON-EXPENDABLE",5)=""
^PRCT(446.4,"B","PREVENTIVE MAINTENANCE",4)=""
^PRCT(446.4,"C","ENNX",5)=""
^PRCT(446.4,"C","ENPM",4)=""
^PRCT(446.4,"C","PRCPH",1)=""
^PRCT(446.4,"C","PRCUS",2)=""
