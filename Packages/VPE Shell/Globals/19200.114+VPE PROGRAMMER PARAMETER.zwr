VPE PROGRAMMER PARAMETER
ZWR
^VEE(19200.114,0)="VPE PROGRAMMER PARAMETER^19200.114I^67^67"
^VEE(19200.114,1,0)="DIALOG#^n"
^VEE(19200.114,1,"WP",0)="^^1^1^2960107^^^^"
^VEE(19200.114,1,"WP",1,0)="Record number from DIALOG file ^DI(.84), for text to be returned."
^VEE(19200.114,2,0)="TEXT_PARAM"
^VEE(19200.114,2,"WP",0)="^^3^3^2960106^"
^VEE(19200.114,2,"WP",1,0)="Name of local array containing list of parameters to be incorporated"
^VEE(19200.114,2,"WP",2,0)="into the text. External format. If only one param, it can be passed"
^VEE(19200.114,2,"WP",3,0)="in a local variable or a literal."
^VEE(19200.114,3,0)="OUTPUT_PARAM"
^VEE(19200.114,3,"WP",0)="^^2^2^2960106^^"
^VEE(19200.114,3,"WP",1,0)="Used for ERROR dialogue only. Local array containing list of"
^VEE(19200.114,3,"WP",2,0)="parameters to be passed to calling routine along with text."
^VEE(19200.114,4,0)="OUT_ARRAY"
^VEE(19200.114,4,"WP",0)="^^1^1^2960106^^"
^VEE(19200.114,4,"WP",1,0)="Text will be output to this array. If null, ^TMP is used."
^VEE(19200.114,5,0)="FLAGS"
^VEE(19200.114,5,"I")="BLD^DIALOG"
^VEE(19200.114,5,"WP",0)="^^2^2^2960521^^^^"
^VEE(19200.114,5,"WP",1,0)="S=Suppress blank line normally inserted between text blocks."
^VEE(19200.114,5,"WP",2,0)="F=Formats local array similar to default output to ^TMP global."
^VEE(19200.114,6,0)="FLAGS"
^VEE(19200.114,6,"I")="MSG^DIALOG"
^VEE(19200.114,6,"WP",0)="^^4^4^2960521^^^"
^VEE(19200.114,6,"WP",1,0)="A=Array specified by 2nd param receives the text."
^VEE(19200.114,6,"WP",2,0)="W=Write text to current device."
^VEE(19200.114,6,"WP",3,0)="S=Save ^TMP or designated array."
^VEE(19200.114,6,"WP",4,0)="E,H,M=Error,Help, or Message array text is processed."
^VEE(19200.114,7,0)="TEXT_WIDTH"
^VEE(19200.114,7,"WP",0)="^^3^3^2960106^"
^VEE(19200.114,7,"WP",1,0)="Maximum line length for formatting text. If sent, text is broken"
^VEE(19200.114,7,"WP",2,0)="into lines of this length. Lines are not ""joined"" to fill out to"
^VEE(19200.114,7,"WP",3,0)="this width. Default is IOM or 75."
^VEE(19200.114,8,0)="LEFT_MARGIN"
^VEE(19200.114,8,"WP",0)="^^1^1^2960106^"
^VEE(19200.114,8,"WP",1,0)="Left margin for writing text. Has no effect on text sent to an array."
^VEE(19200.114,9,0)="INPUT_ROOT"
^VEE(19200.114,9,"WP",0)="^^3^3^2960106^"
^VEE(19200.114,9,"WP",1,0)="Closed root of array in which text resides. If text resides in a"
^VEE(19200.114,9,"WP",2,0)="local array, this parameter MUST be sent. The last subscript of the"
^VEE(19200.114,9,"WP",3,0)="array must describe type of text (""DIERR"", ""DIHELP"", or ""DIMSG"")."
^VEE(19200.114,10,0)="FILE"
^VEE(19200.114,10,"WP",0)="^^2^2^2960106^"
^VEE(19200.114,10,"WP",1,0)="Number of file or subfile. If it is a subfile, it must be"
^VEE(19200.114,10,"WP",2,0)="accompanied by the IENS parameter."
^VEE(19200.114,11,0)="IENS"
^VEE(19200.114,11,"I")="EXTENDED"
^VEE(19200.114,11,"WP",0)="^^4^4^2960106^^^^"
^VEE(19200.114,11,"WP",1,0)="A comma-delimited list of internal entry numbers beginning with"
^VEE(19200.114,11,"WP",2,0)="the lowest level subentry. A "","" is appended to the end. A place-"
^VEE(19200.114,11,"WP",3,0)="holder of 1 or 2 characters can be used. +=Add a new entry"
^VEE(19200.114,11,"WP",4,0)="?=Find entry and use for filing  ?+=Find entry (LAYGO authorized)"
^VEE(19200.114,12,0)="IENS"
^VEE(19200.114,12,"I")="FIND^DIC"
^VEE(19200.114,12,"WP",0)="^^5^5^2960117^"
^VEE(19200.114,12,"WP",1,0)="--> H=Help"
^VEE(19200.114,12,"WP",2,0)="If the FILE parameter equals a subfile number, the IENS parameter is"
^VEE(19200.114,12,"WP",3,0)="needed to help identify which subfile. Since this parameter identifies"
^VEE(19200.114,12,"WP",4,0)="the subfile under that record, and not the subrecord itself, the first"
^VEE(19200.114,12,"WP",5,0)="comma-piece of the parameter should be empty."
^VEE(19200.114,12,"WP1",0)="^^15^15^2960117^^"
^VEE(19200.114,12,"WP1",1,0)="If the FILE parameter equals a file number, the IENS parameter is ignored."
^VEE(19200.114,12,"WP1",2,0)="If the FILE parameter equals a subfile number, the IENS is needed to help"
^VEE(19200.114,12,"WP1",3,0)="identify which subfile to list. In other words, files can be specified"
^VEE(19200.114,12,"WP1",4,0)="with the FILE parameter alone, but subfiles require both the FILE and IENS"
^VEE(19200.114,12,"WP1",5,0)="parameters."
^VEE(19200.114,12,"WP1",6,0)=" "
^VEE(19200.114,12,"WP1",7,0)="When the IENS parameter is used, it must equal an IENS that identifies the"
^VEE(19200.114,12,"WP1",8,0)="parent record of the exact subfile to list. Since this parameter"
^VEE(19200.114,12,"WP1",9,0)="identifies the subfile under that record, and not the subrecord itself,"
^VEE(19200.114,12,"WP1",10,0)="the first comma-piece of the parameter should be empty."
^VEE(19200.114,12,"WP1",11,0)=" "
^VEE(19200.114,12,"WP1",12,0)="For example, to specify the Menu Item subfile under option number 67, you"
^VEE(19200.114,12,"WP1",13,0)="must pass FILE=19.01 (the subfile number for the Menu subfile) and"
^VEE(19200.114,12,"WP1",14,0)="IENS="",67,"" (showing that record number 67 holds the Menu subfile you want"
^VEE(19200.114,12,"WP1",15,0)="to list)."
^VEE(19200.114,13,0)="FIELDS"
^VEE(19200.114,13,"I")="FIND^DIC"
^VEE(19200.114,13,"WP",0)="^^4^4^2960512^"
^VEE(19200.114,13,"WP",1,0)="The fields to return with each entry found, in addition to the .01"
^VEE(19200.114,13,"WP",2,0)="field, IEN, and any MUMPS identifiers on the file. It should be set"
^VEE(19200.114,13,"WP",3,0)="equal to the field numbers separated by "";"" characters. Don't include"
^VEE(19200.114,13,"WP",4,0)="computed, word processing, or multiple fields."
^VEE(19200.114,14,0)="VALUE"
^VEE(19200.114,14,"I")="FIND^DIC"
^VEE(19200.114,14,"WP",0)="^^2^2^2960117^^^"
^VEE(19200.114,14,"WP",1,0)="The lookup value. The Finder searches the specified indexes of the file"
^VEE(19200.114,14,"WP",2,0)="looking for values that match this value."
^VEE(19200.114,14,"WP1",0)="^^25^25^2960117^"
^VEE(19200.114,14,"WP1",1,0)=" Certain values generate special behavior by the Finder as follows:"
^VEE(19200.114,14,"WP1",2,0)=" 1. Control characters. Always results in no matches."
^VEE(19200.114,14,"WP1",3,0)=" 2. ^ (shift 6). Always results in no matches. This signifies to FM"
^VEE(19200.114,14,"WP1",4,0)="    that the current activity should be stopped."
^VEE(19200.114,14,"WP1",5,0)=" 3. """" (the empty string). Always results in no matches."
^VEE(19200.114,14,"WP1",6,0)=" 4. "" "" (the space character). This value indicates that the Finder"
^VEE(19200.114,14,"WP1",7,0)="    should return the current user's previous selection from this file."
^VEE(19200.114,14,"WP1",8,0)="    If FM has no previous selection then the Finder returns no matches."
^VEE(19200.114,14,"WP1",9,0)="    The Finder itself never preserves its found values for this recall;"
^VEE(19200.114,14,"WP1",10,0)="    applications wishing to preserve found values should call"
^VEE(19200.114,14,"WP1",11,0)="    RECALL^DILFD."
^VEE(19200.114,14,"WP1",12,0)=" 5. ""`""-Number (accent-grave followed by a number). This indicates that"
^VEE(19200.114,14,"WP1",13,0)="    the Finder should select the entry whose IEN equals the number"
^VEE(19200.114,14,"WP1",14,0)="    following the accent-grave. This does not require the A flag."
^VEE(19200.114,14,"WP1",15,0)=" 6. Numbers. The Finder tries strictly numeric input as an IEN under"
^VEE(19200.114,14,"WP1",16,0)="    any for the following 3 conditions: 1) The caller uses the A flag,"
^VEE(19200.114,14,"WP1",17,0)="    2) the file has a .001 field, or 3) the file's .01 field is not"
^VEE(19200.114,14,"WP1",18,0)="    numeric and the file has no lookup index."
^VEE(19200.114,14,"WP1",19,0)="    Strictly numeric input differs from `-numeric input in that if no"
^VEE(19200.114,14,"WP1",20,0)="    record corresponding to this IEN exists or is selectable, the Finder"
^VEE(19200.114,14,"WP1",21,0)="    proceeds with a regular lookup, using the numeric value to find"
^VEE(19200.114,14,"WP1",22,0)="    matches in the file's indexes. Even used this way, however, numeric"
^VEE(19200.114,14,"WP1",23,0)="    input has the following special restrictions: it is not used as a"
^VEE(19200.114,14,"WP1",24,0)="    lookup value in any indexed pointer or variable pointer field (unless"
^VEE(19200.114,14,"WP1",25,0)="    the Q flag is passed)."
^VEE(19200.114,15,0)="FLAGS"
^VEE(19200.114,15,"I")="FIND^DIC"
^VEE(19200.114,15,"WP",0)="^^5^5^2960521^^^"
^VEE(19200.114,15,"WP",1,0)="--> H=Help"
^VEE(19200.114,15,"WP",2,0)="A=Allow pure numeric input to always be tried as an IEN."
^VEE(19200.114,15,"WP",3,0)="M=Multiple index lookup allowed. Else only search ""B"" index."
^VEE(19200.114,15,"WP",4,0)="Q=Quick lookup. Finder assumes passed value is in internal format."
^VEE(19200.114,15,"WP",5,0)="O=Only find exact matches if possible.   X=Exact matches only."
^VEE(19200.114,15,"WP1",0)="^^17^17^2960521^^^^"
^VEE(19200.114,15,"WP1",1,0)="A = Allow pure numeric input to always be tried as an IEN. Normally"
^VEE(19200.114,15,"WP1",2,0)="    the Finder will only try pure numbers as IENs if: 1) the file has"
^VEE(19200.114,15,"WP1",3,0)="    a .001 field, -or- 2) its .01 field is not numeric and the file has"
^VEE(19200.114,15,"WP1",4,0)="    no lookup index."
^VEE(19200.114,15,"WP1",5,0)="M = Multiple index lookup allowed. If this flag is passed, the Finder"
^VEE(19200.114,15,"WP1",6,0)="    searches all of the file's lookup indexes from B on. If FLAGS does"
^VEE(19200.114,15,"WP1",7,0)="    not contain an M, the Finder only searches the B index."
^VEE(19200.114,15,"WP1",8,0)="O = Only find exact matches if possible. The Finder first searches for"
^VEE(19200.114,15,"WP1",9,0)="    exact matches; if any are found, it returns all exact matches to the"
^VEE(19200.114,15,"WP1",10,0)="    lookup value. Only if it finds none in the file does it search for"
^VEE(19200.114,15,"WP1",11,0)="    partial matches, returning every partial match."
^VEE(19200.114,15,"WP1",12,0)="Q = Quick lookup. If this flag is passed, the Finder assumes the passed"
^VEE(19200.114,15,"WP1",13,0)="    value is in internal format. The Finder performs NO transforms of"
^VEE(19200.114,15,"WP1",14,0)="    the input value, but only tries to find the value in the specified"
^VEE(19200.114,15,"WP1",15,0)="    lookup indexes. This lookup is much more efficient."
^VEE(19200.114,15,"WP1",16,0)="X = Exact matches only. The Finder returns every exact match to the"
^VEE(19200.114,15,"WP1",17,0)="    lookup value. Any partial matches present in the file are ignored."
^VEE(19200.114,16,0)="NUMBER"
^VEE(19200.114,16,"I")="FIND^DIC"
^VEE(19200.114,16,"WP",0)="^^2^2^2960106^"
^VEE(19200.114,16,"WP",1,0)="The maximum number of entries to find. A value of ""*"" designates all"
^VEE(19200.114,16,"WP",2,0)="entries (the default)."
^VEE(19200.114,17,0)="INDEXES"
^VEE(19200.114,17,"I")="FIND^DIC"
^VEE(19200.114,17,"WP",0)="^^2^2^2960106^"
^VEE(19200.114,17,"WP",1,0)="The indexes the Finder should search for matches. A list of index"
^VEE(19200.114,17,"WP",2,0)="names separated by ""^"" characters."
^VEE(19200.114,18,0)="SCREEN"
^VEE(19200.114,18,"WP",0)="^^3^3^2960117^"
^VEE(19200.114,18,"WP",1,0)="A string of MUMPS code that sets $T to 1 if record should be selected."
^VEE(19200.114,18,"WP",2,0)="   Naked indicator is set to record's 0-node"
^VEE(19200.114,18,"WP",3,0)="   Y=IEN, Y1=IENS, and Y array=The DA array for this entry."
^VEE(19200.114,19,0)="IDENTIFIER"
^VEE(19200.114,19,"WP",0)="^^5^5^2960117^"
^VEE(19200.114,19,"WP",1,0)="Text to accompany each found entry to help identify it to end user. This"
^VEE(19200.114,19,"WP",2,0)="should be set to MUMPS code that calls the EN^DDIOL utility to load"
^VEE(19200.114,19,"WP",3,0)="identification text. This code relies upon the same input as the SCREEN"
^VEE(19200.114,19,"WP",4,0)="(Y, Y1, and naked indicator). Returns string with each entry returned as"
^VEE(19200.114,19,"WP",5,0)="a separate node under the ""ID"",""WRITE"" nodes of the output array."
^VEE(19200.114,20,0)="TARGET_ROOT"
^VEE(19200.114,20,"WP",0)="^^4^4^2960614^^"
^VEE(19200.114,20,"WP",1,0)="The array that should receive the output list of found entries. This"
^VEE(19200.114,20,"WP",2,0)="must be a closed array reference and can be either local or global."
^VEE(19200.114,20,"WP",3,0)="If TARGET_ROOT is not passed, the list is returned descendent from"
^VEE(19200.114,20,"WP",4,0)="^TMP(""DILIST"",$J)."
^VEE(19200.114,21,0)="MSG_ROOT"
^VEE(19200.114,21,"WP",0)="^^3^3^2960106^"
^VEE(19200.114,21,"WP",1,0)="The array that should receive any error messages. Example: If"
^VEE(19200.114,21,"WP",2,0)="MSG_ROOT=""OUT(42)"", any errors generated appear in OUT(42,""DIERR"")."
^VEE(19200.114,21,"WP",3,0)="Otherwise, errors are returned descendent from ^TMP(""DIERR"",$J)."
^VEE(19200.114,22,0)="DA"
^VEE(19200.114,22,"WP",0)="^^1^1^2960115^^"
^VEE(19200.114,22,"WP",1,0)="The file entry's internal entry number."
^VEE(19200.114,23,0)="DA(1)"
^VEE(19200.114,23,"I")="DIK"
^VEE(19200.114,23,"WP",0)="^^2^2^2960115^^^^"
^VEE(19200.114,23,"WP",1,0)="Needed when deleting at lower levels."
^VEE(19200.114,23,"WP",2,0)="Ex: S DA(1)=1,DA=2,DIK=""^EMP(""_DA(1)_"",""""SX"""","""
^VEE(19200.114,24,0)="DIK"
^VEE(19200.114,24,"WP",0)="^^1^1^2960107^"
^VEE(19200.114,24,"WP",1,0)="Global root."
^VEE(19200.114,25,0)="DIE"
^VEE(19200.114,25,"WP",0)="^^1^1^2960115^"
^VEE(19200.114,25,"WP",1,0)="File number or global root."
^VEE(19200.114,26,0)="DIDEL"
^VEE(19200.114,26,"WP",0)="^^1^1^2960115^^"
^VEE(19200.114,26,"WP",1,0)="Override delete access (Set DIDEL=FileNumber)."
^VEE(19200.114,27,0)="Y"
^VEE(19200.114,27,"I")="Y^DIQ"
^VEE(19200.114,27,"WP",0)="^^1^1^2960108^"
^VEE(19200.114,27,"WP",1,0)="The internal form of the value being converted."
^VEE(19200.114,28,0)="C"
^VEE(19200.114,28,"D")="$P(^DD(?,?,0),U,2)"
^VEE(19200.114,28,"I")="Y^DIQ"
^VEE(19200.114,28,"WP",0)="^^3^3^2960108^^"
^VEE(19200.114,28,"WP",1,0)="The 2nd piece of the zero node of the data dictionary which defines"
^VEE(19200.114,28,"WP",2,0)="that element. To correctly set the naked global reference do:"
^VEE(19200.114,28,"WP",3,0)="      S C=$P(^DD(File#,Field#,0),U,2)"
^VEE(19200.114,29,0)="DIC"
^VEE(19200.114,29,"WP",0)="^^1^1^2960114^^^"
^VEE(19200.114,29,"WP",1,0)="The global root or file number."
^VEE(19200.114,30,0)="DR"
^VEE(19200.114,30,"I")="DIQ"
^VEE(19200.114,30,"WP",0)="^^4^4^2960115^^"
^VEE(19200.114,30,"WP",1,0)="Names the global subscript(s) which are to be displayed. Enter "":"" for"
^VEE(19200.114,30,"WP",2,0)="a range of subscripts. All data fields stored within, and descendent from,"
^VEE(19200.114,30,"WP",3,0)="the subscript(s) will be displayed. If DR is not defined, all fields are"
^VEE(19200.114,30,"WP",4,0)="displayed."
^VEE(19200.114,31,0)="DIQ(0)"
^VEE(19200.114,31,"WP",0)="^^3^3^2960108^"
^VEE(19200.114,31,"WP",1,0)="C=Display computed fields"
^VEE(19200.114,31,"WP",2,0)="A=Display audit records for the entry"
^VEE(19200.114,31,"WP",3,0)="R=Display entry's IEN."
^VEE(19200.114,32,0)="VALUE"
^VEE(19200.114,32,"I")="EN^DDIOL"
^VEE(19200.114,32,"WP",0)="^^3^3^2960108^"
^VEE(19200.114,32,"WP",1,0)="If just 1 line of text place here. It can be a string, numeric literal,"
^VEE(19200.114,32,"WP",2,0)="or variable. If more than 1 line of text, enter .ARRAY, where text is"
^VEE(19200.114,32,"WP",3,0)="stored in ARRAY(1),ARRAY(2), etc."
^VEE(19200.114,33,0)="GLOBAL ROOT"
^VEE(19200.114,33,"WP",0)="^^5^5^2960108^"
^VEE(19200.114,33,"WP",1,0)="An alternate way to pass text is in a global root. The VALUE parameter is"
^VEE(19200.114,33,"WP",2,0)="null and GLOBAL ROOT contains the name of the global root that contains"
^VEE(19200.114,33,"WP",3,0)="the text. Example: ^GLB(1)=Text,^GLB(2)=Text GLOBAL ROOT=""^GLB"""
^VEE(19200.114,33,"WP",4,0)="Put formatting instructions in ""F"" nodes descendent from the node"
^VEE(19200.114,33,"WP",5,0)="containing text. Example: A(1)=""Text"", A(1,""F"")=""!?5"""
^VEE(19200.114,34,0)="FORMAT"
^VEE(19200.114,34,"WP",0)="^^2^2^2960108^"
^VEE(19200.114,34,"WP",1,0)="Formatting instructions. Only use when VALUE parameter is used."
^VEE(19200.114,34,"WP",2,0)="Example: FORMAT=""!!!?4"""
^VEE(19200.114,35,0)="DIFILE"
^VEE(19200.114,35,"WP",0)="^^1^1^2960108^"
^VEE(19200.114,35,"WP",1,0)="The file number."
^VEE(19200.114,36,0)="DIAC"
^VEE(19200.114,36,"WP",0)="^^4^4^2960115^^^"
^VEE(19200.114,36,"WP",1,0)="Use one of the values listed below. Returns DIAC=0 or 1"
^VEE(19200.114,36,"WP",2,0)="                  ""RD""=Read         ""WR""=Write"
^VEE(19200.114,36,"WP",3,0)="               ""AUDIT""=Audit        ""DD""=Data Dictionary  "
^VEE(19200.114,36,"WP",4,0)="                 ""DEL""=Delete    ""LAYGO""=Laygo"
^VEE(19200.114,37,0)="DIC(0)"
^VEE(19200.114,37,"I")="DIC"
^VEE(19200.114,37,"WP",0)="^^2^2^2960115^"
^VEE(19200.114,37,"WP",1,0)="--> H=HELP"
^VEE(19200.114,37,"WP",2,0)="A string of alpha characters which alter how the program responds."
^VEE(19200.114,37,"WP1",0)="^^43^43^2960115^^^^"
^VEE(19200.114,37,"WP1",1,0)="A = Ask the entry"
^VEE(19200.114,37,"WP1",2,0)="    If DIC(0) does not contain A, the input to DIC is assumed to be in"
^VEE(19200.114,37,"WP1",3,0)="    the variable X."
^VEE(19200.114,37,"WP1",4,0)="C = Xref suppression"
^VEE(19200.114,37,"WP1",5,0)="    When DIC does a lookup and finds an entry that matches the input,"
^VEE(19200.114,37,"WP1",6,0)="    that entry is presented to the user only once even if the entry"
^VEE(19200.114,37,"WP1",7,0)="    appears in more than one cross reference. This is called cross"
^VEE(19200.114,37,"WP1",8,0)="    reference suppression. It can be overridden by including a C in"
^VEE(19200.114,37,"WP1",9,0)="    DIC(0)."
^VEE(19200.114,37,"WP1",10,0)="E = Echo back information"
^VEE(19200.114,37,"WP1",11,0)="    The file entry names that match the input will be echoed back to the"
^VEE(19200.114,37,"WP1",12,0)="    terminal."
^VEE(19200.114,37,"WP1",13,0)="F = Forget lookup value."
^VEE(19200.114,37,"WP1",14,0)="    If an entry is found, the entry number gets saved in the ^DISV global."
^VEE(19200.114,37,"WP1",15,0)="    ^DISV(DUZ,DIC) is set equal to the entry number. This allows the user"
^VEE(19200.114,37,"WP1",16,0)="    to do a subsequent lookup of the same entry by pressing <SPACE BAR>,"
^VEE(19200.114,37,"WP1",17,0)="    <RET>. To suppress this, include F in DIC(0)."
^VEE(19200.114,37,"WP1",18,0)="I = Ignore special lookup program"
^VEE(19200.114,37,"WP1",19,0)="    Any special user written lookup program will be ignored and DIC will"
^VEE(19200.114,37,"WP1",20,0)="    proceed with its normal lookup process."
^VEE(19200.114,37,"WP1",21,0)="L = LAYGO allowed"
^VEE(19200.114,37,"WP1",22,0)="    Allow user to add a new entry to the file."
^VEE(19200.114,37,"WP1",23,0)="M = Multiple-index lookup allowed"
^VEE(19200.114,37,"WP1",24,0)="N = IEN lookup allowed"
^VEE(19200.114,37,"WP1",25,0)="O = Only find 1 entry if it matches exactly"
^VEE(19200.114,37,"WP1",26,0)="    If there is an exact match for the lookup value, only the entry that"
^VEE(19200.114,37,"WP1",27,0)="    matches exactly will be selected."
^VEE(19200.114,37,"WP1",28,0)="Q = Question erroneous input"
^VEE(19200.114,37,"WP1",29,0)="    If erroneous input is entered, 2 question marks will be displayed and"
^VEE(19200.114,37,"WP1",30,0)="    a beep will sound."
^VEE(19200.114,37,"WP1",31,0)="S = Suppress display of .01 (except B xref match)"
^VEE(19200.114,37,"WP1",32,0)="    If DIC(0) does not contain S, the value of the .01 field will be"
^VEE(19200.114,37,"WP1",33,0)="    displayed for all matches found in any xref. If it does contain S, the"
^VEE(19200.114,37,"WP1",34,0)="    .01 field won't be displayed unless the match was found in the B xref."
^VEE(19200.114,37,"WP1",35,0)="X = Exact match required"
^VEE(19200.114,37,"WP1",36,0)="    The input value must be found exactly as it was entered. Otherwise,"
^VEE(19200.114,37,"WP1",37,0)="    the routine will look for any entries that begin with the input X."
^VEE(19200.114,37,"WP1",38,0)="Z = Zero node returned in Y(0) and external form in Y(0,0)"
^VEE(19200.114,37,"WP1",39,0)="    If lookup was successful, then variable Y(0) will be returned equal to"
^VEE(19200.114,37,"WP1",40,0)="    the entire zero node of the entry. Y(0,0) is also returned and will be"
^VEE(19200.114,37,"WP1",41,0)="    equal to the printable expression of the .01 field. This means that"
^VEE(19200.114,37,"WP1",42,0)="    for Date/Time, Set of Codes, and Pointer data types, Y(0,0) will"
^VEE(19200.114,37,"WP1",43,0)="    contain the external format."
^VEE(19200.114,38,0)="DIC('A')"
^VEE(19200.114,38,"WP",0)="^^1^1^2960113^"
^VEE(19200.114,38,"WP",1,0)="Default prompt."
^VEE(19200.114,39,0)="DIC('B')"
^VEE(19200.114,39,"WP",0)="^^1^1^2960113^"
^VEE(19200.114,39,"WP",1,0)="Default answer."
^VEE(19200.114,40,0)="DIC('S')"
^VEE(19200.114,40,"WP",0)="^^4^4^2960113^"
^VEE(19200.114,40,"WP",1,0)="String of MUMPS code that DIC will use to screen an entry from"
^VEE(19200.114,40,"WP",2,0)="selection. If $T=1 entry will be displayed. When DIC(""S"") is"
^VEE(19200.114,40,"WP",3,0)="executed, Y=IEN and naked indicator is at the global level"
^VEE(19200.114,40,"WP",4,0)="@(DIC_""Y,0)"")."
^VEE(19200.114,41,0)="DIC('W')"
^VEE(19200.114,41,"WP",0)="^^4^4^2960113^"
^VEE(19200.114,41,"WP",1,0)="A MUMPS string that will be executed when DIC displays each entry"
^VEE(19200.114,41,"WP",2,0)="that matches user input. Y and naked indicator are the same as for"
^VEE(19200.114,41,"WP",3,0)="DIC(""S""). DIC(""W"") overrides identifiers. So, DIC(""W"")="""" will"
^VEE(19200.114,41,"WP",4,0)="suppress the display of identifiers."
^VEE(19200.114,42,0)="DIC('DR')"
^VEE(19200.114,42,"WP",0)="^^3^3^2960114^^"
^VEE(19200.114,42,"WP",1,0)="When DIC(0) contains L, you can specify fields to be asked for if"
^VEE(19200.114,42,"WP",2,0)="user enters new entry. Looks same as DIE's DR string. This overrides"
^VEE(19200.114,42,"WP",3,0)="the asking of identifiers."
^VEE(19200.114,43,0)="DIC('P')"
^VEE(19200.114,43,"WP",0)="^^4^4^2960115^"
^VEE(19200.114,43,"WP",1,0)="--> H=Help"
^VEE(19200.114,43,"WP",2,0)="This variable is needed to successfully add the FIRST subentry to a"
^VEE(19200.114,43,"WP",3,0)="multiple when the header node of the multiple doesn't exist."
^VEE(19200.114,43,"WP",4,0)="Example: S DIC(""P"")=$P(^DD(16150,9,0),""^"",2)."
^VEE(19200.114,43,"WP1",0)="^^10^10^2960115^^"
^VEE(19200.114,43,"WP1",1,0)="This variable is needed to successfully add the FIRST subentry to a"
^VEE(19200.114,43,"WP1",2,0)="multiple when the descriptor node of the multiple does not exist. In"
^VEE(19200.114,43,"WP1",3,0)="that situation, DIC(""P"") should be set equal to the subfile number and"
^VEE(19200.114,43,"WP1",4,0)="subfile specifier codes for the multiple."
^VEE(19200.114,43,"WP1",5,0)=" "
^VEE(19200.114,43,"WP1",6,0)="In order to automatically include any changes in the field's definition,"
^VEE(19200.114,43,"WP1",7,0)="it is best to set this variable to the 2nd piece of the 0-node of the"
^VEE(19200.114,43,"WP1",8,0)="multiple field's definition in the DD."
^VEE(19200.114,43,"WP1",9,0)=" "
^VEE(19200.114,43,"WP1",10,0)="Example:  S DIC(""P"")=$P(^DD(16150,9,0),""^"",2)"
^VEE(19200.114,44,0)="DIC('V')"
^VEE(19200.114,44,"WP",0)="^^3^3^2960115^"
^VEE(19200.114,44,"WP",1,0)="--> H=Help"
^VEE(19200.114,44,"WP",2,0)="If .01 field is a variable pointer, you can restrict users from inputting"
^VEE(19200.114,44,"WP",3,0)="entries from certain files by setting DIC(""V"")."
^VEE(19200.114,44,"WP1",0)="^^7^7^2960115^^^"
^VEE(19200.114,44,"WP1",1,0)="If the .01 field is a variable pointer, it can point to entries in more"
^VEE(19200.114,44,"WP1",2,0)="than one file. You can restrict the user's ability to input entries from"
^VEE(19200.114,44,"WP1",3,0)="certain files by using the DIC(""V"") variable. It is used to screen files"
^VEE(19200.114,44,"WP1",4,0)="from the user. The variable is set equal to a line of MUMPS code that will"
^VEE(19200.114,44,"WP1",5,0)="return a truth value when executed. The code is executed after someone"
^VEE(19200.114,44,"WP1",6,0)="enters data into a variable pointer field. If the code tests false, the"
^VEE(19200.114,44,"WP1",7,0)="user's input is rejected."
^VEE(19200.114,45,0)="DTIME"
^VEE(19200.114,45,"WP",0)="^^1^1^2960113^"
^VEE(19200.114,45,"WP",1,0)="Number of seconds for timeout. DTOUT=1 is returned."
^VEE(19200.114,46,0)="DLAYGO"
^VEE(19200.114,46,"WP",0)="^^3^3^2960113^"
^VEE(19200.114,46,"WP",1,0)="If set equal to file number, then user will be able to add a new entry"
^VEE(19200.114,46,"WP",2,0)="to the file whether or not they have LAYGO access to the file. DIC(0)"
^VEE(19200.114,46,"WP",3,0)="must also contain ""L""."
^VEE(19200.114,47,0)="X"
^VEE(19200.114,47,"I")="DIC"
^VEE(19200.114,47,"WP",0)="^^3^3^2960114^^"
^VEE(19200.114,47,"WP",1,0)="If DIC(0) does not contain an A, then the variable X must be defined"
^VEE(19200.114,47,"WP",2,0)="equal to the value you want to lookup. If the value in X has more than"
^VEE(19200.114,47,"WP",3,0)="one match or partial match, the lookup fails and Y=-1 is returned."
^VEE(19200.114,48,0)="DA(1)"
^VEE(19200.114,48,"I")="DIC"
^VEE(19200.114,48,"WP",0)="^^5^5^2960113^"
^VEE(19200.114,48,"WP",1,0)="Use to add new subentries to a multiple. DIC(0) would contain 'L'."
^VEE(19200.114,48,"WP",2,0)="DA(1)=IEN of the entry to which the subentry is to be added."
^VEE(19200.114,48,"WP",3,0)="  S DIC=DIC_DA(1)_"",4,"" ;..............The root of the subfile"
^VEE(19200.114,48,"WP",4,0)="  S DIC(""P"")=$P(^DD(16150,9,0),""^"",2) ;Return subfile# & specifiers"
^VEE(19200.114,48,"WP",5,0)="  D ^DIC"
^VEE(19200.114,49,0)="D"
^VEE(19200.114,49,"WP",0)="^^2^2^2960114^^"
^VEE(19200.114,49,"WP",1,0)="List of xrefs to be searched (separated by ""^"")."
^VEE(19200.114,49,"WP",2,0)="Example: D=""B^SSN^C"""
^VEE(19200.114,50,0)="X"
^VEE(19200.114,50,"I")="FILE^DICN"
^VEE(19200.114,50,"WP",0)="^^3^3^2960114^"
^VEE(19200.114,50,"WP",1,0)="The value of the .01 field that is to be added to the file. The"
^VEE(19200.114,50,"WP",2,0)="programmer has to ensure that the value meets all the criteria"
^VEE(19200.114,50,"WP",3,0)="described in the input transform."
^VEE(19200.114,51,0)="DINUM"
^VEE(19200.114,51,"WP",0)="^^2^2^2960114^"
^VEE(19200.114,51,"WP",1,0)="The IEN of the new entry. Must be a canonic number and no data can"
^VEE(19200.114,51,"WP",2,0)="exist in the global at this subscript location."
^VEE(19200.114,52,0)="DIC('DR')"
^VEE(19200.114,52,"I")="FILE^DICN"
^VEE(19200.114,52,"WP",0)="^^3^3^2960114^"
^VEE(19200.114,52,"WP",1,0)="Used to input other data elements at the time of adding the entry."
^VEE(19200.114,52,"WP",2,0)="If the user does not enter these elements, the entry will not be"
^VEE(19200.114,52,"WP",3,0)="added. The format is the same as DR when making a DIE call."
^VEE(19200.114,53,0)="DIC"
^VEE(19200.114,53,"I")="FILE^DICN"
^VEE(19200.114,53,"WP",0)="^^4^4^2960114^"
^VEE(19200.114,53,"WP",1,0)="The global root or file number."
^VEE(19200.114,53,"WP",2,0)="You MUST kill DD variable PRIOR to calling FILE^DICN. If DO does not"
^VEE(19200.114,53,"WP",3,0)="contain the characteristics of the file you are adding to, then DO"
^VEE(19200.114,53,"WP",4,0)="should be killed also. NOTE: This variable is D with the letter O."
^VEE(19200.114,54,0)="%"
^VEE(19200.114,54,"I")="YN^DICN"
^VEE(19200.114,54,"WP",0)="^^4^4^2960517^^"
^VEE(19200.114,54,"WP",1,0)="--> H=Help"
^VEE(19200.114,54,"WP",2,0)="The default response:   %=0  No default"
^VEE(19200.114,54,"WP",3,0)="                        %=1  YES"
^VEE(19200.114,54,"WP",4,0)="                        %=2 (NO)"
^VEE(19200.114,54,"WP1",0)="^^8^8^2960115^^^"
^VEE(19200.114,54,"WP1",1,0)=" Output Variables:"
^VEE(19200.114,54,"WP1",2,0)="    %    %=-1  User entered ""^"""
^VEE(19200.114,54,"WP1",3,0)="         %=0   User entered <RET> when no default was presented"
^VEE(19200.114,54,"WP1",4,0)="               User entered ""?"""
^VEE(19200.114,54,"WP1",5,0)="         %=1   User entered YES"
^VEE(19200.114,54,"WP1",6,0)="         %=2   User entered NO"
^VEE(19200.114,54,"WP1",7,0)=" "
^VEE(19200.114,54,"WP1",8,0)="   %Y = The actual text that the user entered."
^VEE(19200.114,55,0)="D"
^VEE(19200.114,55,"D")="""B"""
^VEE(19200.114,55,"I")="DQ^DICQ"
^VEE(19200.114,55,"WP",0)="^^1^1^2960114^^"
^VEE(19200.114,55,"WP",1,0)="Set to ""B""."
^VEE(19200.114,56,0)="DZ"
^VEE(19200.114,56,"D")="""??"""
^VEE(19200.114,56,"WP",0)="^^2^2^2960114^"
^VEE(19200.114,56,"WP",1,0)="Set to ""??"". This is set in order to prevent FM from issuing the"
^VEE(19200.114,56,"WP",2,0)="""DO YOU WANT TO SEE ALL nn ENTRIES?"" prompt."
^VEE(19200.114,57,0)="DIFORMAT"
^VEE(19200.114,57,"WP",0)="^^3^3^2960114^"
^VEE(19200.114,57,"WP",1,0)="Equal to the desired data dictionary listing format:"
^VEE(19200.114,57,"WP",2,0)="  STANDARD            BRIEF               MODIFIED STANDARD"
^VEE(19200.114,57,"WP",3,0)="  TEMPLATES ONLY      GLOBAL MAP          CONDENSED"
^VEE(19200.114,58,0)="DR"
^VEE(19200.114,58,"I")="DIE"
^VEE(19200.114,58,"WP",0)="^^2^2^2960115^^^"
^VEE(19200.114,58,"WP",1,0)="--> H=Help"
^VEE(19200.114,58,"WP",2,0)="A string specifying data fields to be asked."
^VEE(19200.114,58,"WP1",0)="^^57^57^2960115^"
^VEE(19200.114,58,"WP1",1,0)="The DR string consists of the following:"
^VEE(19200.114,58,"WP1",2,0)="  o  A single number corresponding to the IEN of a field in the file."
^VEE(19200.114,58,"WP1",3,0)="  o  A field number followed by ""//"" and a default prompt."
^VEE(19200.114,58,"WP1",4,0)="  o  A fild number followed by ""///"" and a value. The value should be"
^VEE(19200.114,58,"WP1",5,0)="     in the external form of the field's value. The value will be"
^VEE(19200.114,58,"WP1",6,0)="     automatically inserted into the data base after passing through the"
^VEE(19200.114,58,"WP1",7,0)="     input transform. You may pass the value contained in a variable. In"
^VEE(19200.114,58,"WP1",8,0)="     that case use: ""S DR=27///^S X=VAR"""
^VEE(19200.114,58,"WP1",9,0)="  o  A field followed by ""////"" and a value. The value will be inserted"
^VEE(19200.114,58,"WP1",10,0)="     WITHOUT VALIDATION into the data base. The value should be in its"
^VEE(19200.114,58,"WP1",11,0)="     internally stored form. Cannot be used for .01 fields."
^VEE(19200.114,58,"WP1",12,0)="  o  A range of field numbers, in the form M:N."
^VEE(19200.114,58,"WP1",13,0)="  o  A place-holder like @1."
^VEE(19200.114,58,"WP1",14,0)="  o  A line of MUMPS code."
^VEE(19200.114,58,"WP1",15,0)="  o  A sequence of any of the above, separated by "";""."
^VEE(19200.114,58,"WP1",16,0)="  o  An input templete enclosed in ""[]""."
^VEE(19200.114,58,"WP1",17,0)=" "
^VEE(19200.114,58,"WP1",18,0)="S P E C I F I E R S"
^VEE(19200.114,58,"WP1",19,0)="You can include specifiers in the DR string:"
^VEE(19200.114,58,"WP1",20,0)="       T = Use Title of field rather than field label."
^VEE(19200.114,58,"WP1",21,0)="   ""xxx"" = Literal enclosed in quotes. Used as the prompt rather than"
^VEE(19200.114,58,"WP1",22,0)="           field label."
^VEE(19200.114,58,"WP1",23,0)="     DUP = Duplicate the response to this field from entry to entry."
^VEE(19200.114,58,"WP1",24,0)="     REQ = Require an answer to the field."
^VEE(19200.114,58,"WP1",25,0)=" "
^VEE(19200.114,58,"WP1",26,0)="Using field #3 as an example:"
^VEE(19200.114,58,"WP1",27,0)="      3T = Title......The T immediately follows the field number."
^VEE(19200.114,58,"WP1",28,0)="    3xxx = Literal....No quotes."
^VEE(19200.114,58,"WP1",29,0)="      3d = Duplicate..Lowercase D."
^VEE(19200.114,58,"WP1",30,0)="      3R = Required...Uppercase R"
^VEE(19200.114,58,"WP1",31,0)="You can combine specifiers by separating with a ""~""."
^VEE(19200.114,58,"WP1",32,0)=" "
^VEE(19200.114,58,"WP1",33,0)="B R A N C H I N G   L O G I C"
^VEE(19200.114,58,"WP1",34,0)="You can include branching logic within DR. This done by inserting an"
^VEE(19200.114,58,"WP1",35,0)="executable MUMPS statement in one of the semicolon-pieces. This code will"
^VEE(19200.114,58,"WP1",36,0)="be executed when this piece is encountered by the DIE routine. If the"
^VEE(19200.114,58,"WP1",37,0)="MUMPS code sets the variable Y, DIE will jump to the field whose number"
^VEE(19200.114,58,"WP1",38,0)="(or label) matches Y. The field must be specified elsewhere within the"
^VEE(19200.114,58,"WP1",39,0)="DR variable. Y may look like a place holder, e.g. @1. If Y is set to zero"
^VEE(19200.114,58,"WP1",40,0)="or null, DIE will exit. If Y is killed or never set, no branching will"
^VEE(19200.114,58,"WP1",41,0)="occur. X will be equal to the internal value of the field previously"
^VEE(19200.114,58,"WP1",42,0)="asked."
^VEE(19200.114,58,"WP1",43,0)="Example: S DR=""4;I X=""""YES"""" S Y=10;.01;10:15"""
^VEE(19200.114,58,"WP1",44,0)=" "
^VEE(19200.114,58,"WP1",45,0)="S P E C I F I C   F I E L D S   I N   A   M U L T I P L E"
^VEE(19200.114,58,"WP1",46,0)="If you want to edit only selected fields in a multiple, set DR normally"
^VEE(19200.114,58,"WP1",47,0)="and then set a subscripted value of Dr equal to the sub-fields to edit."
^VEE(19200.114,58,"WP1",48,0)="Example: S DR=""5"",DR(2,16001.02)="".01;7"""
^VEE(19200.114,58,"WP1",49,0)="         Where 2 means the 2nd level of the file, and the 2nd subscript"
^VEE(19200.114,58,"WP1",50,0)="         is the subfile number of the multiple field (#5)."
^VEE(19200.114,58,"WP1",51,0)=" "
^VEE(19200.114,58,"WP1",52,0)="C O N T I N U E D   D R   S T R I N G S"
^VEE(19200.114,58,"WP1",53,0)="If there is more than 245 characters in a DR-string, you can set"
^VEE(19200.114,58,"WP1",54,0)="continuation strings by defining the DR-array at the 3rd subscript"
^VEE(19200.114,58,"WP1",55,0)="level. These subscripts should be sequential integers starting at 1."
^VEE(19200.114,58,"WP1",56,0)="Example: The 1st continuation node of DR(2,16001.02) would be"
^VEE(19200.114,58,"WP1",57,0)="         DR(2,160001.02,1)."
^VEE(19200.114,59,0)="DIE('NO~')"
^VEE(19200.114,59,"I")="DIE"
^VEE(19200.114,59,"WP",0)="^^5^5^2960115^"
^VEE(19200.114,59,"WP",1,0)="DIE(""NO^"") variable:"
^VEE(19200.114,59,"WP",2,0)="   ""OUTOK""          Exiting YES        Jumping NO"
^VEE(19200.114,59,"WP",3,0)="   ""BACK""           Exiting NO    Jumping back YES"
^VEE(19200.114,59,"WP",4,0)="   ""BACKOUTOK""      Exiting YES   Jumping back YES"
^VEE(19200.114,59,"WP",5,0)="   ""Other value""    Exiting NO         Jumping NO"
^VEE(19200.114,60,0)="DA(1)"
^VEE(19200.114,60,"I")="DIE"
^VEE(19200.114,60,"WP",0)="^^2^2^2960115^"
^VEE(19200.114,60,"WP",1,0)="--> H=Help"
^VEE(19200.114,60,"WP",2,0)="DIE can be called to directly edit an entry in a subfile."
^VEE(19200.114,60,"WP1",0)="^^8^8^2960115^"
^VEE(19200.114,60,"WP1",1,0)="Suppose that the data in subfile 16000.02 is stored decendent from"
^VEE(19200.114,60,"WP1",2,0)="subscript 20 and you are going to edit entry number 777, subentry"
^VEE(19200.114,60,"WP1",3,0)="number 1:"
^VEE(19200.114,60,"WP1",4,0)="   S DIE=""^FILE(777,20,"""
^VEE(19200.114,60,"WP1",5,0)="   S DA(1)=777"
^VEE(19200.114,60,"WP1",6,0)="   S DA=1"
^VEE(19200.114,60,"WP1",7,0)="   S DR=""3;7"""
^VEE(19200.114,60,"WP1",8,0)="   D ^DIE"
^VEE(19200.114,61,0)="FLAGS"
^VEE(19200.114,61,"I")="GETS^DIQ"
^VEE(19200.114,61,"WP",0)="^^5^5^2960521^^"
^VEE(19200.114,61,"WP",1,0)="E = Returns external values in nodes ending with ""E""."
^VEE(19200.114,61,"WP",2,0)="I = Returns internal values in nodes ending with ""I""."
^VEE(19200.114,61,"WP",3,0)="N = Does not return Null values."
^VEE(19200.114,61,"WP",4,0)="R = Resolves field numbers to field names in target array subscripts."
^VEE(19200.114,61,"WP",5,0)="Z = Word processing fields include Zero nodes."
^VEE(19200.114,62,0)="FIELDS"
^VEE(19200.114,62,"I")="GETS^DIQ"
^VEE(19200.114,62,"WP",0)="^^5^5^2960512^"
^VEE(19200.114,62,"WP",1,0)="A single field number. A list of field numbers separated by semicolons."
^VEE(19200.114,62,"WP",2,0)="A range of field numbers, in the form M:N. * for all fields at the top"
^VEE(19200.114,62,"WP",3,0)="level. ** for all fields including sub-multiple fields. Field number of"
^VEE(19200.114,62,"WP",4,0)="a multiple followed by an * to indicate all fields and records in the"
^VEE(19200.114,62,"WP",5,0)="submultiple for that field."
^VEE(19200.114,63,0)="FLAGS"
^VEE(19200.114,63,"I")="UPDATE^DIE"
^VEE(19200.114,63,"WP",0)="^^5^5^2960526^^"
^VEE(19200.114,63,"WP",1,0)="E=External values are processed. Values in the FDA must be in the format"
^VEE(19200.114,63,"WP",2,0)="  input by the user. Updater validates all values and converts them to"
^VEE(19200.114,63,"WP",3,0)="  internal format. Invalid values cancel the entire transaction."
^VEE(19200.114,63,"WP",4,0)="  If flag is not set, values must be in internal format and valid."
^VEE(19200.114,63,"WP",5,0)="S=Updater Saves the FDA instead of killing it."
^VEE(19200.114,64,0)="FDA_ROOT"
^VEE(19200.114,64,"I")="UPDATE^DIE"
^VEE(19200.114,64,"WP",0)="^^3^3^2960521^"
^VEE(19200.114,64,"WP",1,0)="The name of the root of a Fileman Data Array, which describes the"
^VEE(19200.114,64,"WP",2,0)="entries to add to the database. The Updater accepts Adding Nodes,"
^VEE(19200.114,64,"WP",3,0)="Filing Nodes, Finding Nodes, and LAYGO Finding Nodes in its FDAs."
^VEE(19200.114,65,0)="IEN_ROOT"
^VEE(19200.114,65,"I")="UPDATE^DIE"
^VEE(19200.114,65,"WP",0)="^^2^2^2960521^^"
^VEE(19200.114,65,"WP",1,0)="--> Help Text"
^VEE(19200.114,65,"WP",2,0)="The name of the IEN Array. This should be a closed root."
^VEE(19200.114,65,"WP1",0)="^^32^32^2960521^"
^VEE(19200.114,65,"WP1",1,0)="The IEN Array has 2 functions:"
^VEE(19200.114,65,"WP1",2,0)=" "
^VEE(19200.114,65,"WP1",3,0)="1. Requesting Record Numbers for New Entries."
^VEE(19200.114,65,"WP1",4,0)="   The application can set nodes in the IEN Array to direct the Updater"
^VEE(19200.114,65,"WP1",5,0)="   to use specific record numbers for specific new records. These nodes"
^VEE(19200.114,65,"WP1",6,0)="   should have a single subscript equal to the sequence number in the"
^VEE(19200.114,65,"WP1",7,0)="   IENS subscript of the FDA entry and a value equal to the desired record"
^VEE(19200.114,65,"WP1",8,0)="   number."
^VEE(19200.114,65,"WP1",9,0)=" "
^VEE(19200.114,65,"WP1",10,0)="   For example, if the application sets the IEN_ROOT parameter to ORIEN,"
^VEE(19200.114,65,"WP1",11,0)="   and sets ORIEN(1)=1701, the Updater will try to assign record number"
^VEE(19200.114,65,"WP1",12,0)="   1701 to the new record denoted by the ""+1"" value in the FDA subscripts."
^VEE(19200.114,65,"WP1",13,0)=" "
^VEE(19200.114,65,"WP1",14,0)="   This feature also affects LAYGO Finding nodes. When these nodes result"
^VEE(19200.114,65,"WP1",15,0)="   in adding a new record, the Updater will check the IEN Array to see if"
^VEE(19200.114,65,"WP1",16,0)="   the application wants to place the new record at a specific record"
^VEE(19200.114,65,"WP1",17,0)="   number. When LAYGO Finding nodes result in a successful lookup, the"
^VEE(19200.114,65,"WP1",18,0)="   IEN Array node passed in by the application is changed to the record"
^VEE(19200.114,65,"WP1",19,0)="   number of the record found."
^VEE(19200.114,65,"WP1",20,0)=" "
^VEE(19200.114,65,"WP1",21,0)="   If the application sets an entry in the IEN Array for a Finding node,"
^VEE(19200.114,65,"WP1",22,0)="   the Updater will ignore it (actually, it will overwrite it when it"
^VEE(19200.114,65,"WP1",23,0)="   finds the record number for that node). This feature is meaningless"
^VEE(19200.114,65,"WP1",24,0)="   for Filing nodes since they have no sequence numbers."
^VEE(19200.114,65,"WP1",25,0)=" "
^VEE(19200.114,65,"WP1",26,0)="2. Locating Feedback on What the Update Did."
^VEE(19200.114,65,"WP1",27,0)="   As the Updater decodes and processes the sequence numbers, it"
^VEE(19200.114,65,"WP1",28,0)="   gradually converts them into genuine record numbers. The IEN Array"
^VEE(19200.114,65,"WP1",29,0)="   named by the IEN_ROOT parameter is where this feedback will be given."
^VEE(19200.114,65,"WP1",30,0)="   Those sequence numbers not already assigned by the application will"
^VEE(19200.114,65,"WP1",31,0)="   be filled in by the Updater (or sometimes replaced, in the case of"
^VEE(19200.114,65,"WP1",32,0)="   LAYGO Finding nodes)."
^VEE(19200.114,66,0)="FLAGS"
^VEE(19200.114,66,"I")="FILE^DIE"
^VEE(19200.114,66,"WP",0)="^^3^3^2960526^"
^VEE(19200.114,66,"WP",1,0)="K=Locking is done by Filer."
^VEE(19200.114,66,"WP",2,0)="S=Save FDA array."
^VEE(19200.114,66,"WP",3,0)="E=External values are processed."
^VEE(19200.114,67,0)="TARGET_ROOT"
^VEE(19200.114,67,"I")="GETS^DIQ"
^VEE(19200.114,67,"WP",0)="^^3^3^2960614^"
^VEE(19200.114,67,"WP",1,0)="The array that should receive the output list of found entries. This"
^VEE(19200.114,67,"WP",2,0)="must be a closed array reference and can be either local or global."
^VEE(19200.114,67,"WP",3,0)="This is a REQUIRED field."
^VEE(19200.114,"B","%",54)=""
^VEE(19200.114,"B","C",28)=""
^VEE(19200.114,"B","D",49)=""
^VEE(19200.114,"B","D",55)=""
^VEE(19200.114,"B","DA",22)=""
^VEE(19200.114,"B","DA(1)",23)=""
^VEE(19200.114,"B","DA(1)",48)=""
^VEE(19200.114,"B","DA(1)",60)=""
^VEE(19200.114,"B","DIAC",36)=""
^VEE(19200.114,"B","DIALOG#",1)=""
^VEE(19200.114,"B","DIC",29)=""
^VEE(19200.114,"B","DIC",53)=""
^VEE(19200.114,"B","DIC('A')",38)=""
^VEE(19200.114,"B","DIC('B')",39)=""
^VEE(19200.114,"B","DIC('DR')",42)=""
^VEE(19200.114,"B","DIC('DR')",52)=""
^VEE(19200.114,"B","DIC('P')",43)=""
^VEE(19200.114,"B","DIC('S')",40)=""
^VEE(19200.114,"B","DIC('V')",44)=""
^VEE(19200.114,"B","DIC('W')",41)=""
^VEE(19200.114,"B","DIC(0)",37)=""
^VEE(19200.114,"B","DIDEL",26)=""
^VEE(19200.114,"B","DIE",25)=""
^VEE(19200.114,"B","DIE('NO~')",59)=""
^VEE(19200.114,"B","DIFILE",35)=""
^VEE(19200.114,"B","DIFORMAT",57)=""
^VEE(19200.114,"B","DIK",24)=""
^VEE(19200.114,"B","DINUM",51)=""
^VEE(19200.114,"B","DIQ(0)",31)=""
^VEE(19200.114,"B","DLAYGO",46)=""
^VEE(19200.114,"B","DR",30)=""
^VEE(19200.114,"B","DR",58)=""
^VEE(19200.114,"B","DTIME",45)=""
^VEE(19200.114,"B","DZ",56)=""
^VEE(19200.114,"B","FDA_ROOT",64)=""
^VEE(19200.114,"B","FIELDS",13)=""
^VEE(19200.114,"B","FIELDS",62)=""
^VEE(19200.114,"B","FILE",10)=""
^VEE(19200.114,"B","FLAGS",5)=""
^VEE(19200.114,"B","FLAGS",6)=""
^VEE(19200.114,"B","FLAGS",15)=""
^VEE(19200.114,"B","FLAGS",61)=""
^VEE(19200.114,"B","FLAGS",63)=""
^VEE(19200.114,"B","FLAGS",66)=""
^VEE(19200.114,"B","FORMAT",34)=""
^VEE(19200.114,"B","GLOBAL ROOT",33)=""
^VEE(19200.114,"B","IDENTIFIER",19)=""
^VEE(19200.114,"B","IENS",11)=""
^VEE(19200.114,"B","IENS",12)=""
^VEE(19200.114,"B","IEN_ROOT",65)=""
^VEE(19200.114,"B","INDEXES",17)=""
^VEE(19200.114,"B","INPUT_ROOT",9)=""
^VEE(19200.114,"B","LEFT_MARGIN",8)=""
^VEE(19200.114,"B","MSG_ROOT",21)=""
^VEE(19200.114,"B","NUMBER",16)=""
^VEE(19200.114,"B","OUTPUT_PARAM",3)=""
^VEE(19200.114,"B","OUT_ARRAY",4)=""
^VEE(19200.114,"B","SCREEN",18)=""
^VEE(19200.114,"B","TARGET_ROOT",20)=""
^VEE(19200.114,"B","TARGET_ROOT",67)=""
^VEE(19200.114,"B","TEXT_PARAM",2)=""
^VEE(19200.114,"B","TEXT_WIDTH",7)=""
^VEE(19200.114,"B","VALUE",14)=""
^VEE(19200.114,"B","VALUE",32)=""
^VEE(19200.114,"B","X",47)=""
^VEE(19200.114,"B","X",50)=""
^VEE(19200.114,"B","Y",27)=""
