DINIT2B9 ;SFISC/MKO-SQLI FILES ;10:51 AM  30 Mar 1999
 ;;22.0;VA FileMan;;Mar 30, 1999
 ;Per VHA Directive 10-93-142, this routine should not be modified.
 F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) S @X=Y
 G ^DINIT2BA
Q Q
 ;;^DIC(1.5217,0,"GL")
 ;;=^DMSQ("C",
 ;;^DIC("B","SQLI_COLUMN",1.5217)
 ;;=
 ;;^DIC(1.5217,"%D",0)
 ;;=^^6^6^2970806^^
 ;;^DIC(1.5217,"%D",1,0)
 ;;=A set of formatting and physical structure specifications.
 ;;^DIC(1.5217,"%D",2,0)
 ;;=Each column specification has a column type table element
 ;;^DIC(1.5217,"%D",3,0)
 ;;=(SQLI_TABLE_ELEMENT) which contains the relational specifications, name
 ;;^DIC(1.5217,"%D",4,0)
 ;;=and domain. The column specification contains those attributes required
 ;;^DIC(1.5217,"%D",5,0)
 ;;=to locate the value in the global structure, and to project the value to
 ;;^DIC(1.5217,"%D",6,0)
 ;;=the user.
 ;;^DD(1.5217,0)
 ;;=FIELD^^16^17
 ;;^DD(1.5217,0,"DT")
 ;;=2970311
 ;;^DD(1.5217,0,"IX","B",1.5217,.01)
 ;;=
 ;;^DD(1.5217,0,"IX","C",1.5217,8)
 ;;=
 ;;^DD(1.5217,0,"IX","D",1.5217,4)
 ;;=
 ;;^DD(1.5217,0,"IX","E",1.5217,16)
 ;;=
 ;;^DD(1.5217,0,"NM","SQLI_COLUMN")
 ;;=
 ;;^DD(1.5217,0,"PT",1.5217,8)
 ;;=
 ;;^DD(1.5217,0,"PT",1.5218,1)
 ;;=
 ;;^DD(1.5217,0,"PT",1.5219,2)
 ;;=
 ;;^DD(1.5217,0,"VRPK")
 ;;=DI
 ;;^DD(1.5217,.01,0)
 ;;=C_TABLE_ELEMENT^RP1.5216'^DMSQ("E",^0;1^Q
 ;;^DD(1.5217,.01,.1)
 ;;=Table Element
 ;;^DD(1.5217,.01,1,0)
 ;;=^.1
 ;;^DD(1.5217,.01,1,1,0)
 ;;=1.5217^B
 ;;^DD(1.5217,.01,1,1,1)
 ;;=S ^DMSQ("C","B",$E(X,1,30),DA)=""
 ;;^DD(1.5217,.01,1,1,2)
 ;;=K ^DMSQ("C","B",$E(X,1,30),DA)
 ;;^DD(1.5217,.01,3)
 ;;=
 ;;^DD(1.5217,.01,9)
 ;;=^
 ;;^DD(1.5217,.01,21,0)
 ;;=^^1^1^2960926^^
 ;;^DD(1.5217,.01,21,1,0)
 ;;=IEN of table element.
 ;;^DD(1.5217,.01,"DT")
 ;;=2960820
 ;;^DD(1.5217,1,0)
 ;;=C_FILE^NJ16,6^^0;5^K:+X'=X!(X>999999999.999999)!(X<1)!(X?.E1"."7N.N) X
 ;;^DD(1.5217,1,.1)
 ;;=File ID
 ;;^DD(1.5217,1,3)
 ;;=Type a Number between 1 and 999999999.999999, 6 Decimal Digits
 ;;^DD(1.5217,1,9)
 ;;=^
 ;;^DD(1.5217,1,21,0)
 ;;=^^2^2^2960926^
 ;;^DD(1.5217,1,21,1,0)
 ;;=FileMan file (or subfile) ID, if column was derived from ^DD.
 ;;^DD(1.5217,1,21,2,0)
 ;;= NULL if column is generated by SQLI.
 ;;^DD(1.5217,1,"DT")
 ;;=2960926
 ;;^DD(1.5217,2,0)
 ;;=C_WIDTH^NJ2,0^^0;2^K:+X'=X!(X>22)!(X<1)!(X?.E1"."1N.N) X
 ;;^DD(1.5217,2,.1)
 ;;=Width
 ;;^DD(1.5217,2,3)
 ;;=Type an integer between 1 and 999999999999999
 ;;^DD(1.5217,2,9)
 ;;=^
 ;;^DD(1.5217,2,21,0)
 ;;=^^3^3^2960926^
 ;;^DD(1.5217,2,21,1,0)
 ;;=Field width for display
 ;;^DD(1.5217,2,21,2,0)
 ;;=This field is estimated by SQLI from evidence in ^DD unless it's specified
 ;;^DD(1.5217,2,21,3,0)
 ;;=with J modifier.
 ;;^DD(1.5217,2,"DT")
 ;;=2960820
 ;;^DD(1.5217,3,0)
 ;;=C_SCALE^NJ1,0^^0;3^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
 ;;^DD(1.5217,3,.1)
 ;;=Dec. Pt.
 ;;^DD(1.5217,3,3)
 ;;=Type a Number between 1 and 9, 0 Decimal Digits
 ;;^DD(1.5217,3,9)
 ;;=^
 ;;^DD(1.5217,3,21,0)
 ;;=^^2^2^2960926^
 ;;^DD(1.5217,3,21,1,0)
 ;;=Number of decimal points to display on output (numeric only).
 ;;^DD(1.5217,3,21,2,0)
 ;;=If scale is specified as 0, SQLI projects column as integer.
 ;;^DD(1.5217,3,"DT")
 ;;=2960926
 ;;^DD(1.5217,4,0)
 ;;=C_FIELD^NJ15,7^^0;6^K:+X'=X!(X>9999999.9999999)!(X<.001)!(X?.E1"."8N.N) X
 ;;^DD(1.5217,4,1,0)
 ;;=^.1
 ;;^DD(1.5217,4,1,1,0)
 ;;=1.5217^D^MUMPS
 ;;^DD(1.5217,4,1,1,1)
 ;;=S ^DMSQ("C","D",$P(^DMSQ("C",DA,0),U,5),X,DA)=""
 ;;^DD(1.5217,4,1,1,2)
 ;;=K ^DMSQ("C","D",$P(^DMSQ("C",DA,0),U,5),X,DA)
 ;;^DD(1.5217,4,1,1,"%D",0)
 ;;=^^1^1^2960827^
 ;;^DD(1.5217,4,1,1,"%D",1,0)
 ;;=Column by FileMan File number, by field number
 ;;^DD(1.5217,4,1,1,"DT")
 ;;=2960827
 ;;^DD(1.5217,4,3)
 ;;=Type a Number between .001 and 9999999.9999999, 7 Decimal Digits
 ;;^DD(1.5217,4,9)
 ;;=^
 ;;^DD(1.5217,4,21,0)
 ;;=^^2^2^2970311^^^
 ;;^DD(1.5217,4,21,1,0)
 ;;=FileMan field ID from ^DD
 ;;^DD(1.5217,4,21,2,0)
 ;;=NULL unless column is derived directly from the data dictionary.
 ;;^DD(1.5217,4,"DT")
 ;;=2970311
 ;;^DD(1.5217,5,0)
 ;;=C_NOT_NULL^S^0:Not required;1:Required;^0;7^Q
 ;;^DD(1.5217,5,.1)
 ;;=Req.
 ;;^DD(1.5217,5,9)
 ;;=^
 ;;^DD(1.5217,5,21,0)
 ;;=^^1^1^2960926^
 ;;^DD(1.5217,5,21,1,0)
 ;;=When true (1) value is required, when false (0) not required.
 ;;^DD(1.5217,5,"DT")
 ;;=2960926
 ;;^DD(1.5217,6,0)
 ;;=C_SECURE^S^0:Not secure;1:Secure;^0;8^Q
 ;;^DD(1.5217,6,.1)
 ;;=Secure
 ;;^DD(1.5217,6,9)
 ;;=^
 ;;^DD(1.5217,6,21,0)
 ;;=^^2^2^2960926^
 ;;^DD(1.5217,6,21,1,0)
 ;;=If true, there is a security screen, else not.
 ;;^DD(1.5217,6,21,2,0)
 ;;=When this flag is set, vendors should use DBS to retrieve data.
 ;;^DD(1.5217,6,"DT")
 ;;=2960926
 ;;^DD(1.5217,7,0)
 ;;=C_VIRTUAL^S^0:Base column;1:Calculated value column;^0;9^Q
 ;;^DD(1.5217,7,.1)
 ;;=Virtual
 ;;^DD(1.5217,7,9)
 ;;=^
 ;;^DD(1.5217,7,21,0)
 ;;=^^2^2^2960926^
 ;;^DD(1.5217,7,21,1,0)
 ;;=If true, the value is computed.
 ;;^DD(1.5217,7,21,2,0)
 ;;=Vendors should use DBS to get value.
 ;;^DD(1.5217,7,"DT")
 ;;=2960926
 ;;^DD(1.5217,8,0)
 ;;=C_PARENT^P1.5217'^DMSQ("C",^0;10^Q
 ;;^DD(1.5217,8,.1)
 ;;=Parent Column
 ;;^DD(1.5217,8,1,0)
 ;;=^.1
 ;;^DD(1.5217,8,1,1,0)
 ;;=1.5217^C
 ;;^DD(1.5217,8,1,1,1)
 ;;=S ^DMSQ("C","C",$E(X,1,30),DA)=""
 ;;^DD(1.5217,8,1,1,2)
 ;;=K ^DMSQ("C","C",$E(X,1,30),DA)
 ;;^DD(1.5217,8,1,1,"%D",0)
 ;;=^^1^1^2960823^
 ;;^DD(1.5217,8,1,1,"%D",1,0)
 ;;=Column by parent column
 ;;^DD(1.5217,8,1,1,"DT")
 ;;=2960823
 ;;^DD(1.5217,8,9)
 ;;=^
 ;;^DD(1.5217,8,21,0)
 ;;=^^2^2^2960926^
 ;;^DD(1.5217,8,21,1,0)
 ;;=Column whose physical global structure precedes this column.
 ;;^DD(1.5217,8,21,2,0)
 ;;=Used to construct global root. Chain goes back to ^DIC.
 ;;^DD(1.5217,8,"DT")
 ;;=2960926
 ;;^DD(1.5217,9,0)
 ;;=C_GLOBAL^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
 ;;^DD(1.5217,9,.1)
 ;;=Global
 ;;^DD(1.5217,9,3)
 ;;=M global fragment which precedes this element
 ;;^DD(1.5217,9,9)
 ;;=^
 ;;^DD(1.5217,9,21,0)
 ;;=^^3^3^2960926^
 ;;^DD(1.5217,9,21,1,0)
 ;;=M global fragment between this column and parent column.
 ;;^DD(1.5217,9,21,2,0)
 ;;=Contains node specifier for non-key columns. Key columns are constructed
 ;;^DD(1.5217,9,21,3,0)
 ;;=by SQLI and contain the multiple node specifier or ^DIC root.
 ;;^DD(1.5217,9,"DT")
 ;;=2960926
 ;;^DD(1.5217,10,0)
 ;;=C_PIECE^NJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
 ;;^DD(1.5217,10,.1)
 ;;=Piece
 ;;^DD(1.5217,10,3)
 ;;=Type a Number between 1 and 99, 0 Decimal Digits
 ;;^DD(1.5217,10,9)
 ;;=^
 ;;^DD(1.5217,10,21,0)
 ;;=^^2^2^2960926^
 ;;^DD(1.5217,10,21,1,0)
 ;;=The piece address of the column in a data string.
 ;;^DD(1.5217,10,21,2,0)
 ;;=If the piece address was of form E1,30, this value is null.
 ;;^DD(1.5217,10,"DT")
 ;;=2960926
 ;;^DD(1.5217,11,0)
 ;;=C_EXTRACT_FROM^NJ3,0^^0;12^K:+X'=X!(X>511)!(X<1)!(X?.E1"."1N.N) X
