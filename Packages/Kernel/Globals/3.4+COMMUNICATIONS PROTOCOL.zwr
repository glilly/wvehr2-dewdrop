COMMUNICATIONS PROTOCOL
ZWR
^DIC(3.4,0)="COMMUNICATIONS PROTOCOL^3.4^27^27"
^DIC(3.4,0,"GL")="^DIC(3.4,"
^DIC(3.4,1,0)="TEST"
^DIC(3.4,1,1)="W !,""R: "",XMSG S ER=0"
^DIC(3.4,1,2)="R !,""S: "",XMRG S ER=XMRG[""@@@@@"""
^DIC(3.4,1,3)="D ^%ZIS S ER=POP"
^DIC(3.4,1,4)="S ER=0 C:IO'=IO(0) IO"
^DIC(3.4,1,5,0)="^^4^4^2920714^^^^"
^DIC(3.4,1,5,1,0)="This is a test channel which is used to direct the data stream to a"
^DIC(3.4,1,5,2,0)="terminal for programmer-level testing.  Each line of input is preceded"
^DIC(3.4,1,5,3,0)="by ""R:"" for data sent by the computer, and the programmer is prompted"
^DIC(3.4,1,5,4,0)="with ""S:"" for his input.  Open and Close work off of %ZIS style logic."
^DIC(3.4,2,0)="DIAL OUT"
^DIC(3.4,2,1)="W XMSG,! S ER=0 ; S XMTRAN=""S: ""_XMSG D TRAN^XMC1"
^DIC(3.4,2,2)="R XMRG:60 S ER='$T,XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,2,3)="I '($D(IO)#10) S (IO,IO(0))=$I"
^DIC(3.4,2,4)="Q"
^DIC(3.4,2,5,0)="^^2^2^2920714^^^^"
^DIC(3.4,2,5,1,0)="This is an autodial channel which will automatically dial and connect"
^DIC(3.4,2,5,2,0)="to remote sites via the autodial logic of the DEVICE file,"
^DIC(3.4,3,0)="SERVER"
^DIC(3.4,3,1)="D SEN^XMS3"
^DIC(3.4,3,2)="D REC^XMS3"
^DIC(3.4,3,3)="D OPEN^XMS3"
^DIC(3.4,3,4)="D CLOSE^XMS3"
^DIC(3.4,3,5,0)="^^6^6^2870304^^^^"
^DIC(3.4,3,5,1,0)="This protocol is used to read messages from MailMan into a dedicated"
^DIC(3.4,3,5,2,0)="server process, which is named in the Option file.  If XMOPEN is executed"
^DIC(3.4,3,5,3,0)="a return message is generated, each line being inserted with XMSEN"
^DIC(3.4,3,5,4,0)="executes.  XMCLOSE terminates the message.  If XMER is not zero upon"
^DIC(3.4,3,5,5,0)="return from the server, MailMan will assume that the message was rejected,"
^DIC(3.4,3,5,6,0)="it is the server's responsibility to compose the message why."
^DIC(3.4,4,0)="CHECKED"
^DIC(3.4,4,1)="S X=XMSG D SEND^XML ; S XMTRAN=""S: ""_XMSG D TRAN^XMC1"
^DIC(3.4,4,2)="D REC^XML S XMRG=X ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,4,3)="Q"
^DIC(3.4,4,4)="Q"
^DIC(3.4,5,0)="SCP"
^DIC(3.4,5,1)="S X=XMSG D SEND^XML I $G(XM)[""D"" S XMTRAN=""S: ""_$E(XMSG,1,242) D TRAN^XMC1"
^DIC(3.4,5,2)="D REC^XML I $G(XM)[""D"" S XMTRAN=""R: ""_$E(XMRG,1,242) D TRAN^XMC1"
^DIC(3.4,5,3)="I $D(^%ZOSF(""OS"")),^(""OS"")[""VAX"" U IO:PACK"
^DIC(3.4,5,4)="Q"
^DIC(3.4,5,5,0)="^3.41^1^1^2920714^^^^"
^DIC(3.4,5,5,1,0)="SIMPLE COMMUNICATIONS PROTOCOL"
^DIC(3.4,6,0)="DIRECT"
^DIC(3.4,6,1)="W XMSG,$C(13)"
^DIC(3.4,6,2)="R XMRG:60 S ER='$T"
^DIC(3.4,6,3)="I '($D(IO)#10) S (IO,IO(0))=$I"
^DIC(3.4,6,4)="Q"
^DIC(3.4,6,5,0)="^^2^2^2870304^^^^"
^DIC(3.4,6,5,1,0)="This is an autodial channel which will automatically dial and connect"
^DIC(3.4,6,5,2,0)="to remote sites via the autodial logic of the DEVICE file,"
^DIC(3.4,7,0)="NO-LF"
^DIC(3.4,7,1)="W XMSG,*13 S ER=0 ; S XMTRAN=""S: ""_XMSG D TRAN^XMC1"
^DIC(3.4,7,2)="R XMRG:60 S ER='$T ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,7,3)="I '($D(IO)#10) S (IO,IO(0))=$I"
^DIC(3.4,7,4)="Q"
^DIC(3.4,7,5,0)="^3.41^2^2^2870304^^"
^DIC(3.4,7,5,1,0)="This is an autodial channel which will automatically dial and connect"
^DIC(3.4,7,5,2,0)="to remote sites via the autodial logic of the DEVICE file,"
^DIC(3.4,8,0)="S-GLOBAL"
^DIC(3.4,8,1)="S ^%ZTSK(XMTSK,XMLIN)=XMSG,ER=0,XMLIN=XMLIN+1"
^DIC(3.4,8,2)="Q"
^DIC(3.4,8,3)="D OPEN^XMS2"
^DIC(3.4,8,4)="D CLOSE^XMS2"
^DIC(3.4,8,5,0)="^^3^3^2870304^^^^"
^DIC(3.4,8,5,1,0)="This protocol is the sender protocol for inter-UCI mail transfers between"
^DIC(3.4,8,5,2,0)="UCI's on the same machine.  It opens a taskman task, then inserts SMTP"
^DIC(3.4,8,5,3,0)="commands on succesive lines, not waiting for responses."
^DIC(3.4,9,0)="R-GLOBAL"
^DIC(3.4,9,1)="W !,XMSG"
^DIC(3.4,9,2)="S XMLIN=$N(^%ZTSK(XMTSK,XMLIN)),ER=0 S:XMLIN<0 ER=1 Q:ER  S XMRG=^(XMLIN) ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,9,3)="S XMLIN=0"
^DIC(3.4,9,4)="Q"
^DIC(3.4,9,5,0)="^^1^1^2870331^^^^"
^DIC(3.4,9,5,1,0)="READS GLOBALS"
^DIC(3.4,10,0)="TAPE"
^DIC(3.4,10,1)="W XMSG,! ; S XMTRAN=""S: ""_XMSG D TRAN^XMC1"
^DIC(3.4,10,2)="R XMRG ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,10,3)="S XMBT=1 D ^%ZIS I IO=IO(0)!POP S ER=1,XMTRAN=""Invalid device !!!"" D TRAN^XMC1 Q"
^DIC(3.4,10,4)="X ^%ZIS(""C"")"
^DIC(3.4,11,0)="T-IN"
^DIC(3.4,11,1)="; S XMTRAN=""S: ""_XMSG D TRAN^XMC1"
^DIC(3.4,11,2)="R XMRG ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,11,3)="D ^%ZIS"
^DIC(3.4,11,4)="X ^%ZIS(""C"")"
^DIC(3.4,12,0)="BCP"
^DIC(3.4,12,1)="D SEND^XML2 ; S XMTRAN=""S: ""_XMSG D TRAN^XMC1 D SEND^XML2"
^DIC(3.4,12,2)="D REC^XML2 ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,12,3)="D INIT^XML2 S XMOPEN="""",XMCLOSE="""""
^DIC(3.4,12,4)="S:XMOBLC XMWDON=0,XMWFLG=1 D:XMOBLC WRT^XML2 U IO R X:0 D KILL^XML2"
^DIC(3.4,12,5,0)="^^1^1^2870304^^^^"
^DIC(3.4,12,5,1,0)="BLOCK MODE PROTOCOL....CHECKSUMS"
^DIC(3.4,13,0)="TASKER"
^DIC(3.4,13,1)="S XMLINE=XMLINE+1,^%ZISL(4.281,XMTASK,""T"",XMLINE,0)=XMSG"
^DIC(3.4,13,2)="Q"
^DIC(3.4,13,3)="Q"
^DIC(3.4,13,4)="Q"
^DIC(3.4,13,5,0)="^^3^3^2920608^^^^"
^DIC(3.4,13,5,1,0)="This protocol allows the sending of a message into a different UCI"
^DIC(3.4,13,5,2,0)="that contains MailMan and a different XMB global.  It does this"
^DIC(3.4,13,5,3,0)="by putting the data into %ZTSK and then reading it out."
^DIC(3.4,14,0)="TASK-IN"
^DIC(3.4,14,1)="Q"
^DIC(3.4,14,2)="S XMLINE=$O(^%ZISL(4.281,XMTASK,""T"",XMLINE)),XMRG=^(XMLINE,0)"
^DIC(3.4,14,3)="Q"
^DIC(3.4,14,4)="Q"
^DIC(3.4,14,5,0)="^^2^2^2920608^^^^"
^DIC(3.4,14,5,1,0)="This is the receive side of a protocol that allows a message to be moved"
^DIC(3.4,14,5,2,0)="to a UCI that has installed MailMan but uses a different XMB golbal."
^DIC(3.4,15,0)="BSCP"
^DIC(3.4,15,1)="S X=XMSG D SEND^XML3 ; S XMTRAN=""S: ""_XMSG D TRAN^XMC1"
^DIC(3.4,15,2)="D REC^XML3 ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,15,3)="Q"
^DIC(3.4,15,4)="Q"
^DIC(3.4,15,5,0)="^^1^1^2870304^^^^"
^DIC(3.4,15,5,1,0)="BLOCK CHECKED PROTOCOL OVER SCP PROTOCOL"
^DIC(3.4,16,0)="2BSCP"
^DIC(3.4,16,1)="S X=XMSG D SEND^XML3CRC ; S XMTRAN=""S: ""_XMSG D TRAN^XMC1"
^DIC(3.4,16,2)="D REC^XML3CRC ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,16,3)="Q"
^DIC(3.4,16,4)="Q"
^DIC(3.4,16,5,0)="^^1^1^2870414^"
^DIC(3.4,16,5,1,0)="Modified version of Block Mode protocol."
^DIC(3.4,17,0)="1SCP"
^DIC(3.4,17,1)="S X=XMSG D SEND^XML1CRC I $G(XM)[""D"" S XMTRAN=""S: ""_$E(XMSG,1,242) D TRAN^XMC1"
^DIC(3.4,17,2)="D REC^XML1CRC I $G(XM)[""D"" S XMTRAN=""R: ""_$E(XMRG,1,242) D TRAN^XMC1"
^DIC(3.4,17,3)="I $D(^%ZOSF(""OS"")),^(""OS"")[""VAX"" U IO:PACK"
^DIC(3.4,17,4)="Q"
^DIC(3.4,17,5,0)="^^1^1^2920930^^^^"
^DIC(3.4,17,5,1,0)="Simple Communications Protocol (SCP) with $ZC error check"
^DIC(3.4,18,0)="TEST2BSCP"
^DIC(3.4,18,1)="S XMTRAN=""S: ""_XMSG_""%%""_$S($D(J):J,1:""   "")_""...""_$S($D(XMSUM):XMSUM,1:""  "")_""...""_$S($D(XMTSUM):XMTSUM,1:""   "") D TRAN^XMC1 S X=XMSG D SEND^ZXML3CRC"
^DIC(3.4,18,2)="D REC^ZXML3CRC S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,18,4)="Q"
^DIC(3.4,18,5,0)="^^1^1^2870224^^^^"
^DIC(3.4,18,5,1,0)="THIS IS A MODIFIED VERSION OF THE BLOCK MODE PROTOCOL"
^DIC(3.4,19,0)="TESTBSCP"
^DIC(3.4,19,1)="D SEND^ZXMLBMP"
^DIC(3.4,19,2)="D REC^ZXMLBMP1"
^DIC(3.4,19,4)="Q"
^DIC(3.4,19,5,0)="^^1^1^2870224^^"
^DIC(3.4,19,5,1,0)="TEST BLOCK MODE PROTOCOL"
^DIC(3.4,20,0)="3BSCP"
^DIC(3.4,20,1)="S X=XMSG D SEND^XML4CRC I $G(XM)[""D"" S XMTRAN=""S: ""_$E(XMSG,1,242) D TRAN^XMC1"
^DIC(3.4,20,2)="D REC^XML4CRC1 I $G(XM)[""D"" S XMTRAN=""R: ""_$E(XMRG,1,242)_$S('$D(XMLIN):"""",XMLIN<1:"""",1:""*"") D TRAN^XMC1"
^DIC(3.4,20,3)="I $D(^%ZOSF(""OS"")),^(""OS"")[""VAX"" U IO:PACK"
^DIC(3.4,20,4)="Q"
^DIC(3.4,20,5,0)="^^2^2^2890126^^^^"
^DIC(3.4,20,5,1,0)="BLOCK MODE PROTOCOL WITH AN OPERATING SYSTEM CHECK SUM CALCULATION AND"
^DIC(3.4,20,5,2,0)="RESTART CAPABILITY."
^DIC(3.4,21,0)="BCX"
^DIC(3.4,21,1)="S X=XMSG D SEND^XML ; S XMTRAN=""S: ""_XMSG D TRAN^XMC1"
^DIC(3.4,21,2)="D REC^XML ; S XMTRAN=""R: ""_XMRG D TRAN^XMC1"
^DIC(3.4,21,3)="S XMBCP=1 Q"
^DIC(3.4,21,4)="K XMBCP Q"
^DIC(3.4,21,5,0)="^^2^2^2870304^^^"
^DIC(3.4,21,5,1,0)="BLOCK XMISSION/RECEPTION OF BODY OF MESSAGE ONLY."
^DIC(3.4,21,5,2,0)=" 8-27-86"
^DIC(3.4,22,0)="SPEC"
^DIC(3.4,22,1)="W XMSG,$C(13)"
^DIC(3.4,22,2)="R XMRG:60 S ER='$T"
^DIC(3.4,22,3)="Q"
^DIC(3.4,22,4)="Q"
^DIC(3.4,22,5,0)="^^1^1^2880201^"
^DIC(3.4,22,5,1,0)="SPECIAL PROTOCOL TO BYPASS CRC CHECKING"
^DIC(3.4,23,0)="SWP"
^DIC(3.4,23,1)="D SEND^XMLSWP"
^DIC(3.4,23,2)="D REC^XMLSWP0"
^DIC(3.4,23,3)="K XMLD S:$G(XM)[""D"" XMLD=1 I $D(^%ZOSF(""OS"")),^%ZOSF(""OS"")[""VAX"" U IO:PACK"
^DIC(3.4,23,4)="K XMLD"
^DIC(3.4,23,5,0)="^^24^24^2930211^^^^"
^DIC(3.4,23,5,1,0)="This is a sliding window protocol using a logitudinal parity check checksum."
^DIC(3.4,23,5,2,0)="It is comparable in speed to the 3BSCP protocol, but is a bit slower and"
^DIC(3.4,23,5,3,0)="more likely to succeed.  Speed reported is based on actual lines sent."
^DIC(3.4,23,5,4,0)="Characters (lines) resent because of errors are not included in the total as"
^DIC(3.4,23,5,5,0)="they are in the 3BSCP protocol.  Error recovery is much better.  Short of"
^DIC(3.4,23,5,6,0)="the virtual connection almost totally disintegrating, messages sent with"
^DIC(3.4,23,5,7,0)="this protocol will be transmitted.  While the 3BSCP protocol must resend an"
^DIC(3.4,23,5,8,0)="entire block when it gets an error, this protocol sends only lines that were"
^DIC(3.4,23,5,9,0)="not acknowledged.  It is therefore faster under non-ideal circumstances"
^DIC(3.4,23,5,10,0)="than the 3BSCP protocol."
^DIC(3.4,23,5,11,0)=" "
^DIC(3.4,23,5,12,0)="Like 3BSCP protocol, SWP (Sliding Window Protocol) tries to take advantage"
^DIC(3.4,23,5,13,0)="of response time over the network by sending lines without waiting for"
^DIC(3.4,23,5,14,0)="acknowledgements.  SWP will increase the number of lines that it will send"
^DIC(3.4,23,5,15,0)="without acknowledgement to a maximum if the connection seems successful and"
^DIC(3.4,23,5,16,0)="will reduce the number of lines in a 'window' to as few as 1 if there seems"
^DIC(3.4,23,5,17,0)="to be a lot of errors.  Each line has its own checksum.  Each line is"
^DIC(3.4,23,5,18,0)="acknowledged.  Under ideal  circumstances, it is therefore more resource"
^DIC(3.4,23,5,19,0)="intensive than 3BSCP.  However, when errors occur, SWP only resends lines"
^DIC(3.4,23,5,20,0)="that were not acknowledged (1 for each error), while 3BSCP must resend an"
^DIC(3.4,23,5,21,0)="entire block (100 the 1st error, 50 lines the 2nd...).  3BSCP also quits"
^DIC(3.4,23,5,22,0)="when a maximum number of errors is sensed, while SWP does not quit unless it senses that the virtual connection has been terminated."
^DIC(3.4,23,5,23,0)=" "
^DIC(3.4,23,5,24,0)="'SWP' CAN NOT BE USED WITH VERSIONS OF MAILMAN PRIOR TO 3.17a !!!"
^DIC(3.4,24,0)="DECNET"
^DIC(3.4,24,1)="W XMSG,! D ENS^XMC11"
^DIC(3.4,24,2)="R XMRG S ER=0 D ENR^XMC11"
^DIC(3.4,24,3)="S XMLST=$H*86400+$P($H,"","",2),XMDECNET=1 I '($D(IO)#10) S (IO,IO(0))=$I"
^DIC(3.4,24,4)="K XMDECNET,XMLINE,XMLCT,XMLST Q"
^DIC(3.4,24,5,0)="^^1^1^2901023^^^^"
^DIC(3.4,24,5,1,0)="This protocol is disigned exclusively for use with DECNET TASK-TO-TASK communications.  While using DECNET channels *READS and #READS may not be done."
^DIC(3.4,25,0)="TCP/IP-MAILMAN"
^DIC(3.4,25,1)="D SEND^XMLTCP I $G(XM)[""D"" S XMTRAN=""S: ""_$E(XMSG,1,242) D TRAN^XMC1"
^DIC(3.4,25,2)="D REC^XMLTCP I $G(XM)[""D"" S XMTRAN=""R: ""_$E(XMRG,1,242) D TRAN^XMC1"
^DIC(3.4,25,3)="S (X,XMLINE,XMLCHAR,XMLER,XMLST,XMNO220)=0,XMLTCP="""",XMSTIME=60"
^DIC(3.4,25,4)="K XMLTCP L -^XMBX(""TCPCHAN"",XMHOST) Q"
^DIC(3.4,25,5,0)="8^^4^4^2960606^^^^"
^DIC(3.4,25,5,1,0)="This protocol is for MailMan to use across a TCP/IP channel.  Important"
^DIC(3.4,25,5,2,0)="things to know about this channel:"
^DIC(3.4,25,5,3,0)=" "
^DIC(3.4,25,5,4,0)="  1.  A ""!"" puts the last written characters into the TCP/IP buffer"
^DIC(3.4,26,0)="PC1"
^DIC(3.4,26,1)="S X=XMSG D SEND^XMLPC I $G(XM)[""D"" S XMTRAN=""S: ""_$E(XMSG,1,242) D TRAN^XMC1"
^DIC(3.4,26,2)="D REC^XMLPC I $G(XM)[""D"" S XMTRAN=""R: ""_$E(XMRG,1,242) D TRAN^XMC1"
^DIC(3.4,26,3)="D OPEN^XMLPC"
^DIC(3.4,26,4)="Q"
^DIC(3.4,26,5,0)="^^1^1^2930413^^^^"
^DIC(3.4,26,5,1,0)="Protocol especially for devices without buffers"
^DIC(3.4,27,0)="TCP/GTM"
^DIC(3.4,27,1)="D SNDGTM^XMLTCP I $G(XM)[""D"" S XMTRAN=""S: ""_$E(XMSG,1,242) D TRAN^XMC1"
^DIC(3.4,27,2)="D RECGTM^XMLTCP I $G(XM)[""D"" S XMTRAN=""R: ""_$E(XMRG,1,242) D TRAN^XMC1"
^DIC(3.4,27,3)="S (X,XMLINE,XMLCHAR,XMLER,XMLST,XMNO220)=0,XMLTCP="""",XMSTIME=60"
^DIC(3.4,27,4)="K XMLTCP L -^XMBX(""TCPCHAN"",XMHOST) Q"
^DIC(3.4,27,5,0)="^^3^3^3030502^"
^DIC(3.4,27,5,1,0)="This protocol is for MailMan to use across a TCP/IP channel.  Important"
^DIC(3.4,27,5,2,0)="things to know about this channel: 1.  A ""#"" puts the last written"
^DIC(3.4,27,5,3,0)="characters into the TCP/IP buffer."
^DIC(3.4,"%",0)="^1.005^1^1"
^DIC(3.4,"%",1,0)="XM"
^DIC(3.4,"%","B","XM",1)=""
^DIC(3.4,"%D",0)="^^5^5^3020422^^^^"
^DIC(3.4,"%D",1,0)="This file holds the definitions of all the communications protocols"
^DIC(3.4,"%D",2,0)="known to the kernel.  A protocol has executable MUMPS code for sending,"
^DIC(3.4,"%D",3,0)="receiving, opening, and closing a link.  This file is not to be touched"
^DIC(3.4,"%D",4,0)="by anyone not intimately knowledgeable with the workings of the networked"
^DIC(3.4,"%D",5,0)="MailMan."
^DIC(3.4,"B","1SCP",17)=""
^DIC(3.4,"B","2BSCP",16)=""
^DIC(3.4,"B","3BSCP",20)=""
^DIC(3.4,"B","BCP",12)=""
^DIC(3.4,"B","BCX",21)=""
^DIC(3.4,"B","BSCP",15)=""
^DIC(3.4,"B","CHECKED",4)=""
^DIC(3.4,"B","DECNET",24)=""
^DIC(3.4,"B","DIAL OUT",2)=""
^DIC(3.4,"B","DIRECT",6)=""
^DIC(3.4,"B","NO-LF",7)=""
^DIC(3.4,"B","PC1",26)=""
^DIC(3.4,"B","R-GLOBAL",9)=""
^DIC(3.4,"B","S-GLOBAL",8)=""
^DIC(3.4,"B","SCP",5)=""
^DIC(3.4,"B","SERVER",3)=""
^DIC(3.4,"B","SPEC",22)=""
^DIC(3.4,"B","SWP",23)=""
^DIC(3.4,"B","T-IN",11)=""
^DIC(3.4,"B","TAPE",10)=""
^DIC(3.4,"B","TASK-IN",14)=""
^DIC(3.4,"B","TASKER",13)=""
^DIC(3.4,"B","TCP/GTM",27)=""
^DIC(3.4,"B","TCP/IP-MAILMAN",25)=""
^DIC(3.4,"B","TEST",1)=""
^DIC(3.4,"B","TEST2BSCP",18)=""
^DIC(3.4,"B","TESTBSCP",19)=""
