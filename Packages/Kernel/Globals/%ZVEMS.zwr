^%ZVEMS
ZWR
^%ZVEMS="NEW FLAGQ,VEE S FLAGQ=0 D ^%ZVEMSY Q:FLAGQ  KILL FLAGQ X ^%ZVEMS(""ZS"",1) NEW VEESHC,VEESHL S VEESHL=""RUN"" F  X ^%ZVEMS(""ZA"",1) I $G(VEESHC)=""^"" X:$D(^%ZVEMS(""ZK"",1)) ^(1) Q:VEESHC'=""NO EXIT"""
^%ZVEMS("%")="Scratch area"
^%ZVEMS("%","20501-47,vista","SHL")="RUN"
^%ZVEMS("CLH")="Command line history"
^%ZVEMS("CLH",1,"VRR")="1"
^%ZVEMS("CLH",1,"VRR",1)="KBAWDUMP"
^%ZVEMS("CLH",1,"VSHL")="2"
^%ZVEMS("CLH",1,"VSHL",1)="..e"
^%ZVEMS("CLH",1,"VSHL",2)="..1"
^%ZVEMS("CLH","UCI","1-47,vista")="EHR,EHR"
^%ZVEMS("E")="X ^%ZVEMS(""E"",3) Q:$G(DUZ)=""""  NEW FLAGSAVE,FLAGVPE,VEES NEW:$G(VEE(""OS""))']"""" VEE X ^%ZVEMS(""E"",4) Q:'$D(^TMP(""VEE"",""VRR"",$J))  X ^%ZVEMS(""E"",1) KILL ^UTILITY($J) L"
^%ZVEMS("E",1)="NEW %Y,VRRPGM,X D SAVE^%ZVEMRC(1) Q:$G(VRRPGM)']""""  X ^%ZVEMS(""E"",2)"
^%ZVEMS("E",2)="NEW X S X=VRRPGM X VEES(""ZS""),^%ZVEMS(""E"",5)"
^%ZVEMS("E",3)="Q:$G(DUZ)>0  S ^TMP(""VEE"",$J,1)=$G(%1),^(2)=$G(%2) D ID^%ZVEMKU S:$G(VEESHL)=""RUN"" %1=^TMP(""VEE"",$J,1),%2=^(2) KILL ^TMP(""VEE"",$J)"
^%ZVEMS("E",4)="S $P(FLAGVPE,""^"",4)=""EDIT"" D PARAM^%ZVEMR($G(%1),$G(%2))"
^%ZVEMS("E",5)="Q:VEE(""OS"")'=17&(VEE(""OS"")'=19)  NEW LINK,PGM S PGM=VRRPGM,PGM=$TR(PGM,""%"",""_"") S LINK=""ZLINK """"""_PGM_"""""""" X LINK"
^%ZVEMS("E","VRR",1)="KBAWDUMP"
^%ZVEMS("ID")="User IDs"
^%ZVEMS("ID","DUZ",1,"EHR,EHR",1)="62634,53904"
^%ZVEMS("ID","SHL",1,"EHR,EHR",1)="62634,53904"
^%ZVEMS("PARAM")="Shell parameters"
^%ZVEMS("QS")="System QWIK COMMANDs"
^%ZVEMS("QS","ASCII")="D ASCII^%ZVEMST"
^%ZVEMS("QS","ASCII","DSC")="ASCII Table^^3"
^%ZVEMS("QS","CAL")="D CALENDAR^%ZVEMST"
^%ZVEMS("QS","CAL","DSC")="Calendar Display^%1=Number of Starting Month^3"
^%ZVEMS("QS","CLH")="D CLH^%ZVEMSY1"
^%ZVEMS("QS","CLH","DSC")="Resequence Command Line History^^2"
^%ZVEMS("QS","DIC")="D DICCALL^%ZVEMSU1"
^%ZVEMS("QS","DIC","DSC")="Fileman DIC Look-up Template^^4"
^%ZVEMS("QS","DOS")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","DOS",8)="D ^%OS"
^%ZVEMS("QS","DOS",9)="d ^%dos"
^%ZVEMS("QS","DOS","DSC")="DOS Interface^^5"
^%ZVEMS("QS","DTMVT")="Q:VEE(""OS"")'=9  Q:VEE(""IO"")'=1  U 1:VT=1"
^%ZVEMS("QS","DTMVT","DSC")="Reset VT-100 in DataTree^^2"
^%ZVEMS("QS","E")="X ^%ZVEMS(""E"")"
^%ZVEMS("QS","E","DSC")="Routine Editor^%1=Rtn Name^3"
^%ZVEMS("QS","FMC")="D ^%ZVEMSF"
^%ZVEMS("QS","FMC","DSC")="Fileman Calls^^4"
^%ZVEMS("QS","FMTI")="D DIET^%ZVEMSU1"
^%ZVEMS("QS","FMTI","DSC")="Fileman Input Template Display^^4"
^%ZVEMS("QS","FMTP")="D DIPT^%ZVEMSU1"
^%ZVEMS("QS","FMTP","DSC")="Fileman Print Template Display^^4"
^%ZVEMS("QS","FMTS")="D DIBT^%ZVEMSU1"
^%ZVEMS("QS","FMTS","DSC")="Fileman Sort Template Display^^4"
^%ZVEMS("QS","G")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","G",2)="D ^%G"
^%ZVEMS("QS","G",8)="D ^%GL"
^%ZVEMS("QS","G",9)="d ^%g"
^%ZVEMS("QS","G",16)="D ^%G"
^%ZVEMS("QS","G",17)="D ^%G"
^%ZVEMS("QS","G",18)="D ^%G"
^%ZVEMS("QS","G",19)="D ^%G"
^%ZVEMS("QS","G","DSC")="Global List^^5"
^%ZVEMS("QS","GCOPY")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","GCOPY",2)="D ^%GC"
^%ZVEMS("QS","GCOPY",8)="D ^%GCOPY"
^%ZVEMS("QS","GCOPY",9)="d ^%gcopy"
^%ZVEMS("QS","GCOPY",16)="D ^%GC"
^%ZVEMS("QS","GCOPY",17)="D ^%GC"
^%ZVEMS("QS","GCOPY",19)="D ^%GC"
^%ZVEMS("QS","GCOPY","DSC")="Global Copy^^5"
^%ZVEMS("QS","GD")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","GD",2)="D ^%GD"
^%ZVEMS("QS","GD",8)="D ^%GD"
^%ZVEMS("QS","GD",9)="d ^%gd"
^%ZVEMS("QS","GD",16)="D ^%GD"
^%ZVEMS("QS","GD",17)="D ^%GD"
^%ZVEMS("QS","GD",18)="D ^%GD"
^%ZVEMS("QS","GD",19)="D ^%GD"
^%ZVEMS("QS","GD","DSC")="Global Directory^^5"
^%ZVEMS("QS","GDE")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","GDE",8)="D ^%GDE"
^%ZVEMS("QS","GDE",16)="D ^%EGD"
^%ZVEMS("QS","GDE","DSC")="Extended Global Directory^^5"
^%ZVEMS("QS","GEDIT")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","GEDIT",2)="D ^%GEDIT"
^%ZVEMS("QS","GEDIT",8)="D ^%GEDIT"
^%ZVEMS("QS","GEDIT",9)="d ^%gedit"
^%ZVEMS("QS","GEDIT",16)="D ^%GEDIT"
^%ZVEMS("QS","GEDIT",17)="D ^%GED"
^%ZVEMS("QS","GEDIT",18)="D ^%GED"
^%ZVEMS("QS","GEDIT",19)="D ^%GED"
^%ZVEMS("QS","GEDIT","DSC")="Global Edit^^5"
^%ZVEMS("QS","GLB")="D GLB^%ZVEMKT(%1,""SC"",%2)"
^%ZVEMS("QS","GLB","DSC")="Global Screen Capture^%1=Global Reference  %2=How many lines before pause^5"
^%ZVEMS("QS","GR")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","GR",2)="D ^%GTI"
^%ZVEMS("QS","GR",8)="D ^%GR"
^%ZVEMS("QS","GR",9)="d ^%gload"
^%ZVEMS("QS","GR",16)="D ^%GTI"
^%ZVEMS("QS","GR",17)="D ^%GI"
^%ZVEMS("QS","GR",18)="D ^%GI"
^%ZVEMS("QS","GR",19)="D ^%GI"
^%ZVEMS("QS","GR","DSC")="Global Restore^^5"
^%ZVEMS("QS","GS")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","GS",2)="D ^%GTO"
^%ZVEMS("QS","GS",8)="D ^%GS"
^%ZVEMS("QS","GS",9)="d ^%gsave"
^%ZVEMS("QS","GS",16)="D ^%GTO"
^%ZVEMS("QS","GS",17)="D ^%GO"
^%ZVEMS("QS","GS",19)="D ^%GO"
^%ZVEMS("QS","GS","DSC")="Global Save^^5"
^%ZVEMS("QS","GSE")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","GSE",8)="D ^%GSE"
^%ZVEMS("QS","GSE",9)="d ^%gedit"
^%ZVEMS("QS","GSE",17)="D ^%GSE"
^%ZVEMS("QS","GSE",19)="D ^%GSE"
^%ZVEMS("QS","GSE","DSC")="Global Search^^5"
^%ZVEMS("QS","GSEL")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","GSEL",2)="D ^%GSEL"
^%ZVEMS("QS","GSEL",8)="D ^%GSEL"
^%ZVEMS("QS","GSEL",9)="w $$^%gselect,"" globals selected"""
^%ZVEMS("QS","GSEL",16)="D ^%GSEL"
^%ZVEMS("QS","GSEL",17)="D ^%GSEL"
^%ZVEMS("QS","GSEL",18)="D ^%GSET"
^%ZVEMS("QS","GSEL",19)="D ^%GSEL"
^%ZVEMS("QS","GSEL","DSC")="Global Select^^5"
^%ZVEMS("QS","KEY")="D KEY^%ZVEMSU1"
^%ZVEMS("QS","KEY","DSC")="Display Escape Sequence for any Key^^3"
^%ZVEMS("QS","LBRY")="D ^%ZVEMRLM"
^%ZVEMS("QS","LBRY","DSC")="Routine Library^%1=ON/OFF %2=Module (L/V)^3"
^%ZVEMS("QS","LF")="D ^%ZVEMSL"
^%ZVEMS("QS","LF","DSC")="VA KERNEL Library Functions^^4"
^%ZVEMS("QS","LOCKTAB")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","LOCKTAB",2)="D ^LOCKTAB"
^%ZVEMS("QS","LOCKTAB",8)="D ^LOCKTAB"
^%ZVEMS("QS","LOCKTAB",9)="d ^%lockexam"
^%ZVEMS("QS","LOCKTAB",16)="D ^LOCKTAB"
^%ZVEMS("QS","LOCKTAB","DSC")="Lock Table^^5"
^%ZVEMS("QS","NOTES")="D HELP^%ZVEMKT(""NOTES"")"
^%ZVEMS("QS","NOTES","DSC")="VPE Programmer Notes^^3"
^%ZVEMS("QS","PARAM")="D ^%ZVEMSP"
^%ZVEMS("QS","PARAM","DSC")="System Parameters^^2"
^%ZVEMS("QS","PUR")="D PURGE^%ZVEMSU"
^%ZVEMS("QS","PUR","DSC")="Purge VShell Temp Storage Area - %ZVEMS(""%"")^%1=Number of days to preserve^2"
^%ZVEMS("QS","PURVEDD")="KILL ^%ZVEMS(""CLH"",VEE(""ID""),""VEDD"")"
^%ZVEMS("QS","PURVEDD","DSC")="Purge Command Line History (VEDD)^^2"
^%ZVEMS("QS","PURVGL")="KILL ^%ZVEMS(""CLH"",VEE(""ID""),""VGL"")"
^%ZVEMS("QS","PURVGL","DSC")="Purge Command Line History (VGL)^^2"
^%ZVEMS("QS","PURVRR")="KILL ^%ZVEMS(""CLH"",VEE(""ID""),""VRR"")"
^%ZVEMS("QS","PURVRR","DSC")="Purge Command Line History (VRR)^^2"
^%ZVEMS("QS","PURVSHL")="KILL ^%ZVEMS(""CLH"",VEE(""ID""),""VSHL"")"
^%ZVEMS("QS","PURVSHL","DSC")="Purge Command Line History (VShell)^^2"
^%ZVEMS("QS","QB")="D BOX^%ZVEMSQU"
^%ZVEMS("QS","QB","DSC")="Assign QWIK to Display Box^^1"
^%ZVEMS("QS","QC")="D COPY^%ZVEMSQU"
^%ZVEMS("QS","QC","DSC")="Copy a QWIK^^1"
^%ZVEMS("QS","QD")="D DELETE^%ZVEMSQU"
^%ZVEMS("QS","QD","DSC")="Delete a QWIK^^1"
^%ZVEMS("QS","QE")="S VEESHC=""<TAB>"" D ^%ZVEMSQ"
^%ZVEMS("QS","QE","DSC")="Add/Edit a QWIK^^1"
^%ZVEMS("QS","QL1")="S VEESHC=""<F1-1>"" D ^%ZVEMSQ"
^%ZVEMS("QS","QL1","DSC")="List User QWIKs & Description^^1"
^%ZVEMS("QS","QL2")="S VEESHC=""<F1-2>"" D ^%ZVEMSQ"
^%ZVEMS("QS","QL2","DSC")="List User QWIKs & Code^^1"
^%ZVEMS("QS","QL3")="S VEESHC=""<F1-3>"" D ^%ZVEMSQ"
^%ZVEMS("QS","QL3","DSC")="List System QWIKs & Description^^1"
^%ZVEMS("QS","QL4")="S VEESHC=""<F1-4>"" D ^%ZVEMSQ"
^%ZVEMS("QS","QL4","DSC")="List System QWIKs & Code^^1"
^%ZVEMS("QS","QSAVE")="D SAVE^%ZVEMSS"
^%ZVEMS("QS","QSAVE","DSC")="Save/Restore User QWIKs^^1"
^%ZVEMS("QS","QV")="D VENDOR^%ZVEMSQV"
^%ZVEMS("QS","QV","DSC")="Add Vendor Specific Code^^1"
^%ZVEMS("QS","QVL")="D VENLIST^%ZVEMSQW"
^%ZVEMS("QS","QVL","DSC")="List Vendor Specific Code^^1"
^%ZVEMS("QS","RCHANGE")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RCHANGE",2)="D ^%RCE"
^%ZVEMS("QS","RCHANGE",8)="D ^%RCHANGE"
^%ZVEMS("QS","RCHANGE",9)="d ^%rchange"
^%ZVEMS("QS","RCHANGE",16)="D ^%RCE"
^%ZVEMS("QS","RCHANGE",17)="D ^%RCE"
^%ZVEMS("QS","RCHANGE",18)="D ^%RCHANGE"
^%ZVEMS("QS","RCHANGE",19)="D ^%RCE"
^%ZVEMS("QS","RCHANGE","DSC")="Routine Change^^5"
^%ZVEMS("QS","RCMP")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RCMP",2)="D ^%RCMP"
^%ZVEMS("QS","RCMP",8)="D ^%RCMP"
^%ZVEMS("QS","RCMP",9)="d ^%rcompare"
^%ZVEMS("QS","RCMP",16)="D ^%RCMP"
^%ZVEMS("QS","RCMP",18)="D ^%RCMP"
^%ZVEMS("QS","RCMP","DSC")="Routine Compare^^5"
^%ZVEMS("QS","RCOPY")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RCOPY",8)="D ^%RCOPY"
^%ZVEMS("QS","RCOPY",9)="D ^%rcopy"
^%ZVEMS("QS","RCOPY",16)="D ^%RCOPY"
^%ZVEMS("QS","RCOPY",18)="D ^%RCOPY"
^%ZVEMS("QS","RCOPY","DSC")="Routine Copy to Another UCI^^5"
^%ZVEMS("QS","RD")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RD",2)="D ^%RD"
^%ZVEMS("QS","RD",8)="D ^%RD"
^%ZVEMS("QS","RD",9)="d ^%rd"
^%ZVEMS("QS","RD",16)="D ^%RD"
^%ZVEMS("QS","RD",17)="D ^%RD"
^%ZVEMS("QS","RD",18)="D ^%RD"
^%ZVEMS("QS","RD",19)="D ^%RD"
^%ZVEMS("QS","RD","DSC")="Routine Directory^^5"
^%ZVEMS("QS","RDEL")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RDEL",2)="D ^%ZRDELET"
^%ZVEMS("QS","RDEL",8)="D ^%RDEL"
^%ZVEMS("QS","RDEL",9)="d ^%rdelete"
^%ZVEMS("QS","RDEL",16)="D ^%RPURGE"
^%ZVEMS("QS","RDEL",17)="D ^%ZTRDEL"
^%ZVEMS("QS","RDEL",18)="D ^%RDELETE"
^%ZVEMS("QS","RDEL",19)="D ^%ZTRDEL"
^%ZVEMS("QS","RDEL","DSC")="Routine Delete^^5"
^%ZVEMS("QS","RL")="D ^%ZVEMSRL"
^%ZVEMS("QS","RL","DSC")="Routine Lister^^5"
^%ZVEMS("QS","RR")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RR",2)="D ^%RR"
^%ZVEMS("QS","RR",8)="D ^%RR"
^%ZVEMS("QS","RR",9)="d ^%rload"
^%ZVEMS("QS","RR",16)="D ^%RR"
^%ZVEMS("QS","RR",17)="D ^%RI"
^%ZVEMS("QS","RR",18)="D ^%RI"
^%ZVEMS("QS","RR",19)="D ^%RI"
^%ZVEMS("QS","RR","DSC")="Routine Restore^^5"
^%ZVEMS("QS","RS")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RS",2)="D ^%RS"
^%ZVEMS("QS","RS",8)="D ^%RS"
^%ZVEMS("QS","RS",9)="d ^%rsave"
^%ZVEMS("QS","RS",16)="D ^%RS"
^%ZVEMS("QS","RS",17)="D ^%RO"
^%ZVEMS("QS","RS",18)="D ^%RO"
^%ZVEMS("QS","RS",19)="D ^%RO"
^%ZVEMS("QS","RS","DSC")="Routine Save^^5"
^%ZVEMS("QS","RSEARCH")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RSEARCH",8)="D ^%RSE"
^%ZVEMS("QS","RSEARCH",9)="d ^%rsearch"
^%ZVEMS("QS","RSEARCH",16)="D ^%RSE"
^%ZVEMS("QS","RSEARCH",17)="D ^%RSE"
^%ZVEMS("QS","RSEARCH",18)="D ^%RFIND"
^%ZVEMS("QS","RSEARCH",19)="D ^%RSE"
^%ZVEMS("QS","RSEARCH","DSC")="Routine Search^^5"
^%ZVEMS("QS","RSEL")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RSEL",2)="D ^%RSEL"
^%ZVEMS("QS","RSEL",8)="D ^%RSEL"
^%ZVEMS("QS","RSEL",9)="w $$^%rselect,"" routines selected"""
^%ZVEMS("QS","RSEL",16)="D ^%RSEL"
^%ZVEMS("QS","RSEL",17)="D ^%RSEL"
^%ZVEMS("QS","RSEL",18)="D ^%RSET"
^%ZVEMS("QS","RSEL",19)="D ^%RSEL"
^%ZVEMS("QS","RSEL","DSC")="Routine Select^^5"
^%ZVEMS("QS","RSIZE")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","RSIZE",2)="D ^%RSIZE"
^%ZVEMS("QS","RSIZE",8)="D ^%RSIZE"
^%ZVEMS("QS","RSIZE",16)="D ^%RSIZE"
^%ZVEMS("QS","RSIZE","DSC")="Routine Size^^5"
^%ZVEMS("QS","RTN")="D ^%ZVEMSNR"
^%ZVEMS("QS","RTN","DSC")="Make NEW Routine^^5"
^%ZVEMS("QS","UCI")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","UCI",2)="D ^%ZUCI"
^%ZVEMS("QS","UCI",8)="D ^%LOGON"
^%ZVEMS("QS","UCI",9)="d ^%nspace"
^%ZVEMS("QS","UCI",16)="D ^%ZUCI"
^%ZVEMS("QS","UCI","DSC")="Switch UCI^^5"
^%ZVEMS("QS","UL")="D LIST^%ZVEMSID"
^%ZVEMS("QS","UL","DSC")="List Users DUZ/ID^^2"
^%ZVEMS("QS","UTIL")="W $C(7),!?2,""Not available for this M Vendor."",!"
^%ZVEMS("QS","UTIL",2)="D ^%LIB"
^%ZVEMS("QS","UTIL",8)="D ^%UTL"
^%ZVEMS("QS","UTIL",9)="ZZUTIL"
^%ZVEMS("QS","UTIL",16)="D ^%LIB"
^%ZVEMS("QS","UTIL","DSC")="Utilities Menu^^5"
^%ZVEMS("QS","VEDD")="D PARAM^%ZVEMD(%1,%2,%3)"
^%ZVEMS("QS","VEDD","DSC")="VElectronic Data Dictionary^^3"
^%ZVEMS("QS","VER")="D VERSION^%ZVEMSU2"
^%ZVEMS("QS","VER","DSC")="VShell Version Information^^2"
^%ZVEMS("QS","VGL")="D PARAM^%ZVEMG(%1)"
^%ZVEMS("QS","VGL","DSC")="VGlobal Lister^^3"
^%ZVEMS("QS","VRR")="D PARAM^%ZVEMR(%1)"
^%ZVEMS("QS","VRR","DSC")="VRoutine Reader^^3"
^%ZVEMS("QS","XQH")="D XQH^%ZVEMST"
^%ZVEMS("QS","XQH","DSC")="Help Text for Kernel Menu Options^%1=Kernel Menu Option^4"
^%ZVEMS("QS","ZD")="D ^%ZVEMSD"
^%ZVEMS("QS","ZD","DSC")="KILL variables whose names start with these letters^%1=letters %2=letters ...^3"
^%ZVEMS("QS","ZP")="D ZPRINT^%ZVEMSU2"
^%ZVEMS("QS","ZP","DSC")="ZPrint a Routine^%1=Rtn Name^3"
^%ZVEMS("QS","ZR")="Q:'$$ZREMOVE^%ZVEMSU2()  NEW I,X F I=1:1:9 S X=@(""%""_I) Q:X']""""  ZR  ZS @X W !?2,X,"" Removed..."""
^%ZVEMS("QS","ZR","DSC")="ZRemove 1 to 9 Routines^%1=Rtn Name  %2=Rtn Name ...^3"
^%ZVEMS("QS","ZW")="D WRITE^%ZVEMSPS(%1)"
^%ZVEMS("QS","ZW","DSC")="ZWrite Symbol Table^%1=Starting letter^3"
^%ZVEMS("QU")="User QWIK COMMANDs"
^%ZVEMS("SY")="-47,vista"
^%ZVEMS("ZA")="Main Section"
^%ZVEMS("ZA",1)="S @($$T^%ZVEMSY) X ^%ZVEMS(""ZO"",4),^%ZVEMS(""ZO"",2) F  Q:'$D(^%ZVEMS)  X ^%ZVEMS(""ZA"",6) I $G(VEESHC)]"""" Q:VEESHC=""^""  W ! X ^%ZVEMS(""ZO"",1),VEESHC D RESET^%ZVEMSY X ^%ZVEMS(""ZS"",2)"
^%ZVEMS("ZA",2)="X ^%ZVEMS(""ZK"",4),^%ZVEMS(""ZA"",4) Q:""^""[VEESHC  X:VEESHC=""<TO>"" ^%ZVEMS(""ZT"",1) Q:""^""[VEESHC  X ^%ZVEMS(""ZS"",4),$S(VEESHC?1.2""."":^%ZVEMS(""ZQ"",1),VEESHC?1.2"".""1A.E:^%ZVEMS(""ZQ"",1),1:^%ZVEMS(""ZA"",3))"
^%ZVEMS("ZA",3)="I VEESHC?1""<"".E1"">""!(VEESHC?1.2"".""1N.E) D ^%ZVEMSQ S VEESHC=$S(VEESHC?1""**"".E:$E(VEESHC,3,999),1:"""") I VEESHC]"""" X ^%ZVEMS(""ZA"",2) ;CLH"
^%ZVEMS("ZA",4)="S:VEESHC?.E1P1""VEESHL"".1P.E VEESHC="""" S:$E(VEESHC)=""?""!(VEESHC=""<ESCH>"") VEESHC=""D ^%ZVEMSH"" I "",^,H,h,HALT,halt,""[("",""_VEESHC_"","") S VEESHC=""^"""
^%ZVEMS("ZA",5)="X ^%ZVEMS(""ZS"",3),^%ZVEMS(""ZA"",7),^%ZVEMS(""ZO"",2) KILL VEEWARN S VEESHL=""RUN"" D USEZERO^%ZVEMSU ;Reset variables"
^%ZVEMS("ZA",6)="X ^%ZVEMS(""ZA"",5),^%ZVEMS(""ZR"",1) Q:""^""[VEESHC  X ^%ZVEMS(""ZA"",2) Q:""^""[VEESHC  X ^%ZVEMS(""ZC"",1) KILL VEEWARN"
^%ZVEMS("ZA",7)="I $G(VEE(""OS""))=8 X ""ZM 0"" ;Disable MSM trace function"
^%ZVEMS("ZC")="Check for global KILL"
^%ZVEMS("ZC",1)="Q:$G(VEEWARN)=""QWIK""  NEW HLD X ^%ZVEMS(""ZQ"",2) I HLD[""K"",HLD[""^"" NEW FLAGG S FLAGG=""GLB"" D KILLCHK^%ZVEMKU(HLD)"
^%ZVEMS("ZK")="Kill ^%ZVEMS(""%"") on exit, VA KERNEL interface"
^%ZVEMS("ZK",1)="X:'$D(VEE(""ID""))!('$D(VEE(""OS""))) ^%ZVEMS(""ZS"",3) X ^%ZVEMS(""ZK"",3) Q:$G(VEESHC)=""NO EXIT""  X ^%ZVEMS(""ZK"",2),^%ZVEMS(""ZK"",5),^%ZVEMS(""ZK"",6),^%ZVEMS(""ZK"",7),^%ZVEMS(""ZK"",9)"
^%ZVEMS("ZK",2)="Q:'$D(^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")),""XUTL""))  KILL ^XUTL(""XQ"",$J) NEW %X,%Y S %X=""^%ZVEMS(""""%"""",""""""_$J_$G(^%ZVEMS(""SY""))_"""""",""""XUTL"""","",%Y=""^XUTL(""""XQ"""",$J,"" D %XY^%RCR"
^%ZVEMS("ZK",3)="NEW U1,U2 X ^%ZVEMS(""ZK"",8) I U1]"""",U2]"""",U1'=U2 S VEESHC=""NO EXIT"" W $C(7),!!?2,""VA KERNEL menu option active."",!?2,""Move to UCI '"",U2,""' to HALT."",!"
^%ZVEMS("ZK",4)="I $D(^XUSEC(0)),"",D ^ZU,DO ^ZU,d ^zu,do ^zu,d ^ZU,do ^ZU,""[("",""_VEESHC_"","") S VEESHC="""" W $C(7),!!?2,""HALT out of VSHELL before calling ^ZU."",!"
^%ZVEMS("ZK",5)="I VEE(""OS"")=9,$D(^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")),""DTM"")) X ""U $I:(IXXLATE=$P(^(""""DTM""""),""""^"""",1))"""
^%ZVEMS("ZK",6)="I $D(^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")),""KRNUCI"")) D NOBRK^%ZVEMKY2"
^%ZVEMS("ZK",7)="I $D(^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")),""SYMTAB"")) D RESSYM^%ZVEMSU ;Restore sym table"
^%ZVEMS("ZK",8)="S U1=$G(^%ZVEMS(""CLH"",""UCI"",VEE(""ID"")_$G(^%ZVEMS(""SY"")))),U2=$G(^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")),""KRNUCI""))"
^%ZVEMS("ZK",9)="KILL ^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")))"
^%ZVEMS("ZO")="Other"
^%ZVEMS("ZO",1)="NEW X S:$G(VEE(""$ZR""))]"""" @(""X=$""_$S(VEE(""$ZR"")[""("":""O"",1:""D"")_""(""_VEE(""$ZR"")_"")"") I $G(VEE(""$T"")) ;Reset $ZR and $T"
^%ZVEMS("ZO",2)="Q:'$D(VEE(""ID""))  Q:'$D(^%ZOSF(""UCI""))  NEW Y X ^(""UCI"") Q:$G(^%ZVEMS(""CLH"",""UCI"",VEE(""ID"")_$G(^%ZVEMS(""SY""))))=Y  X ^%ZVEMS(""ZO"",3)"
^%ZVEMS("ZO",3)="S ^%ZVEMS(""CLH"",""UCI"",VEE(""ID"")_$G(^%ZVEMS(""SY"")))=Y KILL ^%ZVEMS(""CLH"",VEE(""ID""),""VSHL"") ;Kill VShell's CLH if user switches UCIs."
^%ZVEMS("ZO",4)="S:$D(%1) X=%1 KILL:'$D(%1) X KILL %1 ;Reset X after ^%ZOSF(""TRAP"")"
^%ZVEMS("ZQ")="Process QWIKs. VEEWARN turns off glb kill warning."
^%ZVEMS("ZQ",1)="NEW HLD S VEEWARN=""QWIK"" X ^%ZVEMS(""ZQ"",2) D QWIK^%ZVEMSQS(HLD)"
^%ZVEMS("ZQ",2)="S HLD=$TR(VEESHC,""abcdefghijklmnopqrstuvwxyz"",""ABCDEFGHIJKLMNOPQRSTUVWXYZ"")"
^%ZVEMS("ZR")="Single Character READ"
^%ZVEMS("ZR",1)="NEW CD,FLAGCLH,PROMPT,Y S:'$D(VEE(""IOM"")) VEE(""IOM"")=80 X ^%ZVEMS(""ZR"",2) S CD="""",FLAGCLH="">>"" D SCREEN^%ZVEMKEA(PROMPT,0,VEE(""IOM"")-2) X ^%ZVEMS(""ZR"",4),^%ZVEMS(""ZR"",3)"
^%ZVEMS("ZR",2)="X:$D(^%ZOSF(""UCI""))&($D(^%ZVEMS(""PARAM"",VEE(""ID""),""PROMPT""))) ^%ZOSF(""UCI"")  S PROMPT=$G(Y)_"">>"" X ^%ZVEMS(""ZR"",5)"
^%ZVEMS("ZR",3)="S VEESHC=$S(VEESHC=""<RET>"":CD,VEESHC?1""<"".E1"">"".E&(CD']""""):VEESHC,1:"""")"
^%ZVEMS("ZR",4)="I VEESHC=""TOO LONG"" W ! D CLHSET^%ZVEMSCL(""VSHL"",CD) S VEESHC="""""
^%ZVEMS("ZR",5)="KILL ^%ZVEMS(""ERROR"",VEE(""ID""))"
^%ZVEMS("ZS")="Save/Restore Variables"
^%ZVEMS("ZS",1)="NEW % S ^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")))=+$H_""^Scratch Area"" X ^%ZVEMS(""ZS"",7)"
^%ZVEMS("ZS",2)="Q:$G(^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")),""SV""))=""""  X ^%ZVEMS(""ZS"",8)"
^%ZVEMS("ZS",3)="X ^%ZVEMS(""ZS"",2) D BS^%ZVEMKY1 NEW I F I=1:1:9 KILL @(""%""_I) ;kill parameter variables"
^%ZVEMS("ZS",4)="Q:VEESHC?1""<"".E1"">""!("",^,H,h,HALT,halt,""[("",""_VEESHC_"",""))  NEW CHK,X S CHK=0,X=$G(^%ZVEMS(""CLH"",VEE(""ID""),""VSHL"")) X ^%ZVEMS(""ZS"",6) Q:CHK  X ^%ZVEMS(""ZS"",5)"
^%ZVEMS("ZS",5)="S X=$G(^%ZVEMS(""CLH"",VEE(""ID""),""VSHL""))+1,^(""VSHL"")=X,^(""VSHL"",X)=VEESHC I X>20 S X=$O(^%ZVEMS(""CLH"",VEE(""ID""),""VSHL"","""")) KILL ^(X)"
^%ZVEMS("ZS",6)="I X>0,$G(^%ZVEMS(""CLH"",VEE(""ID""),""VSHL"",X))=VEESHC!($G(^(X-1))=VEESHC) S CHK=1"
^%ZVEMS("ZS",7)="NEW %,LIST,VAR X ^%ZVEMS(""ZS"",9) S ^%ZVEMS(""%"",$J_$G(^%ZVEMS(""SY"")),""SV"")="""" F %=1:1:$L(LIST,""^"") S VAR=$P(LIST,""^"",%) S ^(""SV"")=^(""SV"")_$S($D(@VAR)#2:@VAR,1:"""")_""^"""
^%ZVEMS("ZS",8)="NEW %,LIST X ^%ZVEMS(""ZS"",9) F %=1:1:$L(LIST,""^"") S @($P(LIST,""^"",%)_""=$P(^%ZVEMS(""""%"""",$J_$G(^%ZVEMS(""""SY"""")),""""SV""""),""""^"""",%)"")"
^%ZVEMS("ZS",9)="S LIST=""VEE(""""ID"""")^VEE(""""EON"""")^VEE(""""EOFF"""")^VEE(""""IOF"""")^VEE(""""IOSL"""")^VEE(""""OS"""")^VEE(""""IO"""")^VEE(""""IOM"""")^VEE(""""TRMON"""")^VEE(""""TRMOFF"""")^VEE(""""TRMRD"""")^VEE(""""$ZE"""")"""
^%ZVEMS("ZT")="Session timed out"
^%ZVEMS("ZT",1)="S VEESHC=$G(^%ZVEMS(""QU"",VEE(""ID""),""TO"")) Q:VEESHC=""""  S:VEESHC=""HALT""!(VEESHC=""halt"") VEESHC=""^"""
^%ZVEMS("ZZ")="Help Text"
^%ZVEMS("ZZ","%DT",1)=" % D T     Date and Time Input and Conversion"
^%ZVEMS("ZZ","%DT",2)=""
^%ZVEMS("ZZ","%DT",3)=" 1. ENTRY POINT: ^%DT"
^%ZVEMS("ZZ","%DT",4)="    Returns date in VA Fileman format: YYYMMDD.HHMMSS"
^%ZVEMS("ZZ","%DT",5)="    Date is a canonic number - no trailing zeroes after the decimal."
^%ZVEMS("ZZ","%DT",6)=""
^%ZVEMS("ZZ","%DT",7)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DT",8)="    %DT.......A = Ask for date input"
^%ZVEMS("ZZ","%DT",9)="              E = Echo the answer"
^%ZVEMS("ZZ","%DT",10)="              F = Future dates are assumed"
^%ZVEMS("ZZ","%DT",11)="              P = Pure numeric input not allowed"
^%ZVEMS("ZZ","%DT",12)="              R = Require time input"
^%ZVEMS("ZZ","%DT",13)="              S = Seconds should be returned"
^%ZVEMS("ZZ","%DT",14)="              T = Time input allowed but not required"
^%ZVEMS("ZZ","%DT",15)="              X = Exact date required (with month and day)."
^%ZVEMS("ZZ","%DT",16)="    X.........If %DT doesn't contain A, X must equal value to be processed."
^%ZVEMS("ZZ","%DT",17)="    %DT(""A"")..Default prompt."
^%ZVEMS("ZZ","%DT",18)="    %DT(""B""...Default answer."
^%ZVEMS("ZZ","%DT",19)="    %DT(0)....Optional. Prevents input date from being before or after a"
^%ZVEMS("ZZ","%DT",20)="              particular date:"
^%ZVEMS("ZZ","%DT",21)="              %DT(0)=2930101 Allows input only of dates GREATER THAN or"
^%ZVEMS("ZZ","%DT",22)="                             EQUAL TO that date."
^%ZVEMS("ZZ","%DT",23)="              %DT(0)=-2930101 Allows input only of dates LESS THAN or EQUAL"
^%ZVEMS("ZZ","%DT",24)="                              TO that date."
^%ZVEMS("ZZ","%DT",25)="              %DT(0)=""NOW"" Allows dates from current time forward."
^%ZVEMS("ZZ","%DT",26)="              %DT(0)=""-NOW"" Allows dates up to the current time."
^%ZVEMS("ZZ","%DT",27)="    DTIME.....Time out."
^%ZVEMS("ZZ","%DT",28)=""
^%ZVEMS("ZZ","%DT",29)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DT",30)="    Y.........-1 (Date/time was invalid) -or- YYYMMDD.HHMMSS."
^%ZVEMS("ZZ","%DT",31)="    X.........What was passed (%DT doesn't contain A) or what was entered."
^%ZVEMS("ZZ","%DT",32)="    DTOUT.....%DT timed out."
^%ZVEMS("ZZ","%DT",33)=""
^%ZVEMS("ZZ","%DT",34)=" 1. ENTRY POINT: DD^%DT"
^%ZVEMS("ZZ","%DT",35)="    Converts internal date in Y to its external format."
^%ZVEMS("ZZ","%DT",36)=""
^%ZVEMS("ZZ","%DT",37)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DT",38)="    Y.......Internal date."
^%ZVEMS("ZZ","%DT",39)="    %DT.....Optional. If it contains S, forces seconds to be returned."
^%ZVEMS("ZZ","%DT",40)=""
^%ZVEMS("ZZ","%DT",41)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DT",42)="    Y.......Date in external format."
^%ZVEMS("ZZ","%DT",43)=""
^%ZVEMS("ZZ","%DT",44)=" 1. ENTRY POINT: X ^DD(""DD"")"
^%ZVEMS("ZZ","%DT",45)="    Converts a date from internal to external format. Set Y=internal date"
^%ZVEMS("ZZ","%DT",46)="    and X ^DD(""DD""). Y will equal external format."
^%ZVEMS("ZZ","%DTC",1)=" % D T C     Date/Time Manipulation"
^%ZVEMS("ZZ","%DTC",2)=""
^%ZVEMS("ZZ","%DTC",3)=" 1. ENTRY POINT: ^%DTC"
^%ZVEMS("ZZ","%DTC",4)="    Return number of days between two dates."
^%ZVEMS("ZZ","%DTC",5)=""
^%ZVEMS("ZZ","%DTC",6)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",7)="    X1.......1st date"
^%ZVEMS("ZZ","%DTC",8)="    X2.......2nd date"
^%ZVEMS("ZZ","%DTC",9)=""
^%ZVEMS("ZZ","%DTC",10)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",11)="    X........Number of days between the 2 dates (X2-X1)."
^%ZVEMS("ZZ","%DTC",12)="    %Y.......1 = Dates have both month and day values."
^%ZVEMS("ZZ","%DTC",13)="             0 = Dates were imprecise and not workable."
^%ZVEMS("ZZ","%DTC",14)=""
^%ZVEMS("ZZ","%DTC",15)=" 1. ENTRY POINT: C^%DTC"
^%ZVEMS("ZZ","%DTC",16)="    Add or subtract a number of days to a date."
^%ZVEMS("ZZ","%DTC",17)=""
^%ZVEMS("ZZ","%DTC",18)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",19)="    X1.......Date in VA Fileman format."
^%ZVEMS("ZZ","%DTC",20)="    X2.......If positive, number of days to add. If negative, number of"
^%ZVEMS("ZZ","%DTC",21)="             days to subtract."
^%ZVEMS("ZZ","%DTC",22)=""
^%ZVEMS("ZZ","%DTC",23)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",24)="    X........Resulting date."
^%ZVEMS("ZZ","%DTC",25)="    %H.......The $H form of the date."
^%ZVEMS("ZZ","%DTC",26)=""
^%ZVEMS("ZZ","%DTC",27)=" 1. ENTRY POINT: H^%DTC"
^%ZVEMS("ZZ","%DTC",28)="    Converts a VA Fileman date/time to a $H format."
^%ZVEMS("ZZ","%DTC",29)=""
^%ZVEMS("ZZ","%DTC",30)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",31)="    X.......Date in VA Fileman format."
^%ZVEMS("ZZ","%DTC",32)=""
^%ZVEMS("ZZ","%DTC",33)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",34)="    %H.......The $H form of the date. If date is imprecise, then first of"
^%ZVEMS("ZZ","%DTC",35)="             the month or year is returned."
^%ZVEMS("ZZ","%DTC",36)="    %T.......The time in $H format. If no time, %T equals zero."
^%ZVEMS("ZZ","%DTC",37)="    %Y.......Day-of-week as numberic from 0 to 6. 0=Sunday. If the date is"
^%ZVEMS("ZZ","%DTC",38)="             imprecise, %Y equals -1."
^%ZVEMS("ZZ","%DTC",39)=""
^%ZVEMS("ZZ","%DTC",40)=" 1. ENTRY POINT: DW^%DTC"
^%ZVEMS("ZZ","%DTC",41)="    This entry point produces results similar to H^%DTC. The difference is"
^%ZVEMS("ZZ","%DTC",42)="    that X is reset to the name of the day. If the date is imprecise, X"
^%ZVEMS("ZZ","%DTC",43)="    is returned equal to null."
^%ZVEMS("ZZ","%DTC",44)=""
^%ZVEMS("ZZ","%DTC",45)=" 1. ENTRY POINT: NOW^%DTC"
^%ZVEMS("ZZ","%DTC",46)="    Returns the current date/time in VA Fileman and $H formats."
^%ZVEMS("ZZ","%DTC",47)=""
^%ZVEMS("ZZ","%DTC",48)=" 2. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",49)="    %..........VA Fileman date/time to the second."
^%ZVEMS("ZZ","%DTC",50)="    %H.........$H date/time."
^%ZVEMS("ZZ","%DTC",51)="    %I(1)......Numeric value of the month."
^%ZVEMS("ZZ","%DTC",52)="    %I(2)......Numeric value of the day."
^%ZVEMS("ZZ","%DTC",53)="    %I(3)......Numeric value of the year."
^%ZVEMS("ZZ","%DTC",54)="    X..........VA Fileman date only."
^%ZVEMS("ZZ","%DTC",55)=""
^%ZVEMS("ZZ","%DTC",56)=" 1. ENTRY POINT: YMD^%DTC"
^%ZVEMS("ZZ","%DTC",57)="    Converts $H format date to VA Fileman format."
^%ZVEMS("ZZ","%DTC",58)=""
^%ZVEMS("ZZ","%DTC",59)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",60)="    %H.........A $H format date/time."
^%ZVEMS("ZZ","%DTC",61)=""
^%ZVEMS("ZZ","%DTC",62)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",63)="    %..........Time to the second, as a decimal. If %H doesn't have time,"
^%ZVEMS("ZZ","%DTC",64)="               % equals zero."
^%ZVEMS("ZZ","%DTC",65)="    X..........Date in VA Fileman format."
^%ZVEMS("ZZ","%DTC",66)=""
^%ZVEMS("ZZ","%DTC",67)=" 1. ENTRY POINT: YX^%DTC"
^%ZVEMS("ZZ","%DTC",68)="    Converts $H format date to VA Fileman format and to a printable date/time."
^%ZVEMS("ZZ","%DTC",69)=""
^%ZVEMS("ZZ","%DTC",70)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",71)="    %H.........A $H format date/time."
^%ZVEMS("ZZ","%DTC",72)=""
^%ZVEMS("ZZ","%DTC",73)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",74)="    Y..........The date and time (if time's sent) in external format. Seconds"
^%ZVEMS("ZZ","%DTC",75)="               will be included if the input contained seconds."
^%ZVEMS("ZZ","%DTC",76)="    %..........Time to the second, as a decimal. If %H doesn't have time,"
^%ZVEMS("ZZ","%DTC",77)="               then % equals zero."
^%ZVEMS("ZZ","%DTC",78)="    X..........Date in VA Fileman format."
^%ZVEMS("ZZ","%DTC",79)=""
^%ZVEMS("ZZ","%DTC",80)=" 1. ENTRY POINT: S^%DTC"
^%ZVEMS("ZZ","%DTC",81)="    Converts seconds from midnight to hours, min, and sec as decimal part"
^%ZVEMS("ZZ","%DTC",82)="    of a VA Fileman date."
^%ZVEMS("ZZ","%DTC",83)=""
^%ZVEMS("ZZ","%DTC",84)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",85)="    %..........Number of seconds from midnight, $P($H,"","",2)."
^%ZVEMS("ZZ","%DTC",86)=""
^%ZVEMS("ZZ","%DTC",87)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",88)="    %..........Decimal part of a VA Fileman date."
^%ZVEMS("ZZ","%DTC",89)=""
^%ZVEMS("ZZ","%DTC",90)=" 1. ENTRY POINT: HELP^%DTC"
^%ZVEMS("ZZ","%DTC",91)="    Displays help prompt based on %DT and %DT(0)."
^%ZVEMS("ZZ","%DTC",92)=""
^%ZVEMS("ZZ","%DTC",93)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%DTC",94)="    %DT........Same as %DT"
^%ZVEMS("ZZ","%DTC",95)="    %DT(0).....Optional. Causes HELP to display upper or lower bound"
^%ZVEMS("ZZ","%DTC",96)="               that is acceptable for this particular call."
^%ZVEMS("ZZ","%RCR",1)=" % R C R     Array Moving"
^%ZVEMS("ZZ","%RCR",2)=""
^%ZVEMS("ZZ","%RCR",3)=" 1. ENTRY POINT: %XY^%RCR"
^%ZVEMS("ZZ","%RCR",4)=""
^%ZVEMS("ZZ","%RCR",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","%RCR",6)="    %X.....The global or array root of an existing array."
^%ZVEMS("ZZ","%RCR",7)="    %Y.....The global or array root of the target array."
^%ZVEMS("ZZ","%RCR",8)="           Example: To move array X to ^TMP($J you would write:"
^%ZVEMS("ZZ","%RCR",9)="                       S %X=""X("""
^%ZVEMS("ZZ","%RCR",10)="                       S %Y=""^TMP($J,"""
^%ZVEMS("ZZ","%RCR",11)="                       D %XY^%RCR"
^%ZVEMS("ZZ","BOXES",1)=" B O X E S"
^%ZVEMS("ZZ","BOXES",2)=""
^%ZVEMS("ZZ","BOXES",3)=" To help you organize the User QWIK commands you develop, the VShell allows you"
^%ZVEMS("ZZ","BOXES",4)=" to store them in boxes. A box can be any whole number."
^%ZVEMS("ZZ","BOXES",5)=""
^%ZVEMS("ZZ","BOXES",6)=" Let's look at the UCI QWIK which we set up earlier. We had you assign it to"
^%ZVEMS("ZZ","BOXES",7)=" box 1. You can display the QWIKs stored in box 1 by typing one dot and the"
^%ZVEMS("ZZ","BOXES",8)=" box number. Type '.1' and you will see your UCI QWIK along with any other"
^%ZVEMS("ZZ","BOXES",9)=" QWIKs that have been assigned to box 1."
^%ZVEMS("ZZ","BOXES",10)=""
^%ZVEMS("ZZ","BOXES",11)=" If you recall, you may display your User QWIKs by hitting <PF1> or <PF2>. You"
^%ZVEMS("ZZ","BOXES",12)=" will find however, as you develop more and more User QWIKs, it becomes easier"
^%ZVEMS("ZZ","BOXES",13)=" and clearer if you group them into boxes and display the boxes."
^%ZVEMS("ZZ","BOXES",14)=""
^%ZVEMS("ZZ","BOXES",15)=" System QWIKs also use boxes. To display the System QWIKs assigned to a box,"
^%ZVEMS("ZZ","BOXES",16)=" type two dots and the box number. For example: '..1' will display all System"
^%ZVEMS("ZZ","BOXES",17)=" QWIKs assigned to box 1. The System QWIKs have been grouped as follows:"
^%ZVEMS("ZZ","BOXES",18)=""
^%ZVEMS("ZZ","BOXES",19)="     Box 1..... All QWIK related System QWIKs"
^%ZVEMS("ZZ","BOXES",20)="     Box 2..... All VShell related System QWIKs"
^%ZVEMS("ZZ","BOXES",21)="     Box 3..... Programmers' Tools"
^%ZVEMS("ZZ","BOXES",22)="     Box 4..... Fileman/VA Kernel related System QWIKs"
^%ZVEMS("ZZ","BOXES",23)="     Box 5..... Vendor Generic Utilities"
^%ZVEMS("ZZ","BOXES",24)=""
^%ZVEMS("ZZ","BOXES",25)=" Typing one or two dots and the box number will display QWIKs and their"
^%ZVEMS("ZZ","BOXES",26)=" descriptions. If you wish to see the code they will execute, type a letter"
^%ZVEMS("ZZ","BOXES",27)=" 'C' after the box number. So, '.1C' will display User QWIKs assigned to box 1"
^%ZVEMS("ZZ","BOXES",28)=" and the code those QWIKs will execute."
^%ZVEMS("ZZ","CLH",1)=" C O M M A N D   L I N E   H I S T O R Y"
^%ZVEMS("ZZ","CLH",2)=""
^%ZVEMS("ZZ","CLH",3)=" The VShell maintains a Command Line History (CLH) that allows you to"
^%ZVEMS("ZZ","CLH",4)=" capture, edit, and reissue up to 20 commands. Actually there are 4 separate"
^%ZVEMS("ZZ","CLH",5)=" CLH's, one for each module of VPE (VGL,VRR,VEDD) and one for the VShell itself."
^%ZVEMS("ZZ","CLH",6)=" Hitting the left arrow key will display your last 20 commands, and allow you"
^%ZVEMS("ZZ","CLH",7)=" to edit and reissue any one. You can use the up and down arrow keys to move"
^%ZVEMS("ZZ","CLH",8)=" up and down the CLH, and edit and reissue any individual command."
^%ZVEMS("ZZ","CLH",9)=""
^%ZVEMS("ZZ","CLH",10)=" If you have a previous command that you wish to convert to a User QWIK, move"
^%ZVEMS("ZZ","CLH",11)=" to that command using the arrow keys, and then hit <ESC>Q for the QWIK"
^%ZVEMS("ZZ","CLH",12)=" dialogue. The QWIK you create will use the code from the CLH."
^%ZVEMS("ZZ","CLH",13)=""
^%ZVEMS("ZZ","CLH",14)=" You may purge the CLH at any time using the following System QWIKs:"
^%ZVEMS("ZZ","CLH",15)="      ..PURVSHL   Purge VShell CLH"
^%ZVEMS("ZZ","CLH",16)="      ..PURVRR    Purge Routine Lister/Editor CLH"
^%ZVEMS("ZZ","CLH",17)="      ..PURVGL    Purge Global Lister/Editor CLH"
^%ZVEMS("ZZ","CLH",18)="      ..PURVEDD   Purge VEDD CLH"
^%ZVEMS("ZZ","CLH",19)=""
^%ZVEMS("ZZ","CLH",20)=" As commands are added and dropped from the CLH, the number of any individual"
^%ZVEMS("ZZ","CLH",21)=" command can become large. Each time you enter the VShell the CLH is renumbered"
^%ZVEMS("ZZ","CLH",22)=" back to 1-20. You can manually renumber the CLH with System QWIK ..CLH."
^%ZVEMS("ZZ","CLH",23)=""
^%ZVEMS("ZZ","CLH",24)=" If you have the ^%ZOSF(""UCI"") global node on your system, VShell will delete"
^%ZVEMS("ZZ","CLH",25)=" the SHL Command Line History whenever you switch UCIs. This is to protect you"
^%ZVEMS("ZZ","CLH",26)=" from accidientily rerunning a command in the wrong UCI."
^%ZVEMS("ZZ","CLH",27)=""
^%ZVEMS("ZZ","CLH",28)=" The CLH is an extremely useful tool and you should become proficient in its"
^%ZVEMS("ZZ","CLH",29)=" use. Remember, it is also available in VRR, VGL, and VEDD."
^%ZVEMS("ZZ","COMMA",1)=" % D T C     Number Formatting"
^%ZVEMS("ZZ","COMMA",2)=""
^%ZVEMS("ZZ","COMMA",3)=" 1. ENTRY POINT: COMMA^%DTC"
^%ZVEMS("ZZ","COMMA",4)="    Formats a number with commas."
^%ZVEMS("ZZ","COMMA",5)=""
^%ZVEMS("ZZ","COMMA",6)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","COMMA",7)="    X........Number to be formatted. May be positive or negative."
^%ZVEMS("ZZ","COMMA",8)="    X2.......Number of decimal digits. If X2 is undefined, 2 decimal digits"
^%ZVEMS("ZZ","COMMA",9)="             are returned. If X2 is a number followed by a dollar sign"
^%ZVEMS("ZZ","COMMA",10)="             (e.g. 3$), then a dollar sign will be prefixed to X."
^%ZVEMS("ZZ","COMMA",11)="    X3.......Length of the desired output. If X3 is less than the formatted X,"
^%ZVEMS("ZZ","COMMA",12)="             X3 will be ignored. If X3 is not defined, then a length of 12"
^%ZVEMS("ZZ","COMMA",13)="             is used."
^%ZVEMS("ZZ","COMMA",14)=""
^%ZVEMS("ZZ","COMMA",15)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","COMMA",16)="    X........The initial value of X formatted."
^%ZVEMS("ZZ","COMMA",17)="              Examples of COMMA^%DTC output:"
^%ZVEMS("ZZ","COMMA",18)="                 S X=12345.678 D COMMA^%DTC       X=""  12,345.68 """
^%ZVEMS("ZZ","COMMA",19)="                 S X=9876.54,X2=""0$""              X=""     $9,877 """
^%ZVEMS("ZZ","COMMA",20)="                 S X=-3,X2=""2$""                   X=""     ($3.00)"""
^%ZVEMS("ZZ","COMMA",21)="                 S X=12345.678,X3=10              X=""12,345.68 """
^%ZVEMS("ZZ","DATE",1)=" DATE FUNCTIONS - XLFDT"
^%ZVEMS("ZZ","DATE",2)=""
^%ZVEMS("ZZ","DATE",3)=" HTFM(x,y)......%H to Fileman"
^%ZVEMS("ZZ","DATE",4)="      x = $H date (in quotes)"
^%ZVEMS("ZZ","DATE",5)="      y = 1 (optional) to return date portion only (no seconds)"
^%ZVEMS("ZZ","DATE",6)="      Ex: W $$HTFM^XLFDT(""54786,40523"",1)  --> 2901231"
^%ZVEMS("ZZ","DATE",7)=""
^%ZVEMS("ZZ","DATE",8)=" FMTH(x,y)......Fileman to $H"
^%ZVEMS("ZZ","DATE",9)="      x = Fileman date"
^%ZVEMS("ZZ","DATE",10)="      y = 1 (Optional) no seconds."
^%ZVEMS("ZZ","DATE",11)="      Ex: W $$FMTH^XLFDT(2901231.111523)   --> 54786,40523"
^%ZVEMS("ZZ","DATE",12)=""
^%ZVEMS("ZZ","DATE",13)=" HTE(x,y)......$H to External"
^%ZVEMS("ZZ","DATE",14)="      x = $H date (in quotes)"
^%ZVEMS("ZZ","DATE",15)="      y = See FMTE(x,y) for alternate values"
^%ZVEMS("ZZ","DATE",16)="      Ex: W $$HTE^XLFDT(""54786,40523"")   --> Dec 31, 1990@11:15:23"
^%ZVEMS("ZZ","DATE",17)=""
^%ZVEMS("ZZ","DATE",18)=" FMTE(x,y)......Fileman to External"
^%ZVEMS("ZZ","DATE",19)="      x = VA Fileman date"
^%ZVEMS("ZZ","DATE",20)="      y = optional - if null ('$D(y)) return written-out format"
^%ZVEMS("ZZ","DATE",21)="         if +y=1 return written-out format"
^%ZVEMS("ZZ","DATE",22)="         if +y=2 return in MM/DD/YY@HH:MM:SS format"
^%ZVEMS("ZZ","DATE",23)="         if +y=3 return in DD/MM/YY@HH:MM:SS format"
^%ZVEMS("ZZ","DATE",24)="         if +y=4 return in YY/MM/DD@HH:MM:SS format"
^%ZVEMS("ZZ","DATE",25)="         if y contains S return seconds"
^%ZVEMS("ZZ","DATE",26)="         if y contains D return date portion only"
^%ZVEMS("ZZ","DATE",27)="         if y contains P return in HH:MM:SS am/pm format"
^%ZVEMS("ZZ","DATE",28)="      Ex: W $$FMTE^XLFDT(2901231.111523,1)  --> Dec 31, 1990@11:15:23"
^%ZVEMS("ZZ","DATE",29)="          W $$FMTE^XLFDT(2901231.1115,""4D"") --> 90/02/31"
^%ZVEMS("ZZ","DATE",30)=""
^%ZVEMS("ZZ","DATE",31)=" DOW(x,y)......Day-of-Week"
^%ZVEMS("ZZ","DATE",32)="      x = VA Fileman date"
^%ZVEMS("ZZ","DATE",33)="      y = 1 (optional) to return day-of-week number"
^%ZVEMS("ZZ","DATE",34)="      Ex: W $$DOW^XLFDT(2901231.111523)     --> Monday"
^%ZVEMS("ZZ","DATE",35)=""
^%ZVEMS("ZZ","DATE",36)=" HDIFF(x1,x2,x3)....$H Differences"
^%ZVEMS("ZZ","DATE",37)="      To calculate the difference between 2 dates in $H format."
^%ZVEMS("ZZ","DATE",38)="      x1 = $H date (in quotes)"
^%ZVEMS("ZZ","DATE",39)="      x2 = $H date, to subtract from the x1 date"
^%ZVEMS("ZZ","DATE",40)="      x3 = see FMDIFF(x1,x2,x3) for alternative values"
^%ZVEMS("ZZ","DATE",41)=""
^%ZVEMS("ZZ","DATE",42)=" FMDIFF(x1,x2,x3)....Fileman Difference"
^%ZVEMS("ZZ","DATE",43)="      To calculate the difference between 2 dates in VA Fileman format."
^%ZVEMS("ZZ","DATE",44)="      x1 = VA Fileman date"
^%ZVEMS("ZZ","DATE",45)="      x2 = VA Fileman date to subtract from x1 date"
^%ZVEMS("ZZ","DATE",46)="      x3 = optional - if null return difference in days"
^%ZVEMS("ZZ","DATE",47)="          if x3=1 return difference in days (x1-x2)"
^%ZVEMS("ZZ","DATE",48)="          if x3=2 return difference in seconds"
^%ZVEMS("ZZ","DATE",49)="          if x3=3 return difference in DD HH:MM:SS format"
^%ZVEMS("ZZ","DATE",50)="      Ex: W $$FMDIFF^XLFDT(2901229,2901231.111523,1)   --> -2"
^%ZVEMS("ZZ","DATE",51)="          The 1st date is 2 days less than the 2nd date"
^%ZVEMS("ZZ","DATE",52)="          W $$FMDIFF^XLFDT(2901231.111523,2901229.173404,2)  --> 150079"
^%ZVEMS("ZZ","DATE",53)="          The 1st date is 150079 seconds greater than the 2nd date"
^%ZVEMS("ZZ","DATE",54)=""
^%ZVEMS("ZZ","DATE",55)=" HADD(x,d,h,m,s)....$H Add"
^%ZVEMS("ZZ","DATE",56)="      To add days,hours,minutes, & seconds to a date in $H format (to x)."
^%ZVEMS("ZZ","DATE",57)="      x = $H date (in quotes)"
^%ZVEMS("ZZ","DATE",58)="      d = days"
^%ZVEMS("ZZ","DATE",59)="      h = hours"
^%ZVEMS("ZZ","DATE",60)="      m = minutes"
^%ZVEMS("ZZ","DATE",61)="      s = seconds"
^%ZVEMS("ZZ","DATE",62)="      Ex: W $$HADD^XLFDT(""54786,3600"",2,2,20,15)  --> 54788,12015"
^%ZVEMS("ZZ","DATE",63)=""
^%ZVEMS("ZZ","DATE",64)=" FMADD(x,d,h,m,s)...Fileman Add"
^%ZVEMS("ZZ","DATE",65)="      Add days,hours,minutes, & seconds to a date in VA Fileman format (to x)."
^%ZVEMS("ZZ","DATE",66)="      x = VA Fileman date"
^%ZVEMS("ZZ","DATE",67)="      d,h,m,s same as HADD above"
^%ZVEMS("ZZ","DATE",68)="      Ex: W $$FMADD^XLFDT(2901231.01,2,2,20,15)  --> 2910102.032015"
^%ZVEMS("ZZ","DATE",69)=""
^%ZVEMS("ZZ","DATE",70)=" NOW()...Current date/time in Fileman format"
^%ZVEMS("ZZ","DATE",71)="      Ex: W $$NOW^XLFDT  --> 2921009.08425"
^%ZVEMS("ZZ","DATE",72)=""
^%ZVEMS("ZZ","DATE",73)=" DT()....Current date in Fileman format"
^%ZVEMS("ZZ","DATE",74)="      Ex: W $$DT^XLFDT  --> 2921009"
^%ZVEMS("ZZ","DDIOL",1)=" D D I O L     Writer"
^%ZVEMS("ZZ","DDIOL",2)=""
^%ZVEMS("ZZ","DDIOL",3)="    Programmers will have to remove embedded WRITE statements from data"
^%ZVEMS("ZZ","DDIOL",4)="    dictionaries as alternate user interfaces are developed for FM. Direct"
^%ZVEMS("ZZ","DDIOL",5)="    writes might cause the text to display improperly in the new interface."
^%ZVEMS("ZZ","DDIOL",6)=""
^%ZVEMS("ZZ","DDIOL",7)=" 1. ENTRY POINT: EN^DDIOL"
^%ZVEMS("ZZ","DDIOL",8)="    This is designed to replace WRITE statements in data dictionaries, such"
^%ZVEMS("ZZ","DDIOL",9)="    as executable help. Each string literal passed is written on a new line."
^%ZVEMS("ZZ","DDIOL",10)="    Strings passed should not be longer than 70 characters."
^%ZVEMS("ZZ","DDIOL",11)="    "
^%ZVEMS("ZZ","DDIOL",12)=" FORMATS:  a. DO EN^DDIOL(Value)"
^%ZVEMS("ZZ","DDIOL",13)="           b. DO EN^DDIOL(.Array)"
^%ZVEMS("ZZ","DDIOL",14)="           c. DO EN^DDIOL("""",""^Global Name"")"
^%ZVEMS("ZZ","DDIOL",15)=""
^%ZVEMS("ZZ","DDIOL",16)="     Value = Any MUMPS expression passed by value, such as a string literal"
^%ZVEMS("ZZ","DDIOL",17)="             or a variable."
^%ZVEMS("ZZ","DDIOL",18)="     Array = The name of a local array passed by reference."
^%ZVEMS("ZZ","DDIOL",19)="                A(1) = String 1"
^%ZVEMS("ZZ","DDIOL",20)="                A(2) = String 2"
^%ZVEMS("ZZ","DDIOL",21)="     Global Name = Name of a global containing string literals."
^%ZVEMS("ZZ","DDIOL",22)="                @GlobalName@(1,0) = String 1"
^%ZVEMS("ZZ","DDIOL",23)="                @GlobalName@(2,0) = String 2"
^%ZVEMS("ZZ","DDS",1)=" D D S     ScreenMan"
^%ZVEMS("ZZ","DDS",2)=""
^%ZVEMS("ZZ","DDS",3)=" 1. ENTRY POINT: ^DDS"
^%ZVEMS("ZZ","DDS",4)=""
^%ZVEMS("ZZ","DDS",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DDS",6)="    DDSFILE.....File number or global root."
^%ZVEMS("ZZ","DDS",7)="    DA..........Internal entry number."
^%ZVEMS("ZZ","DDS",8)="    DR..........Name of form enclosed in brackets (FORM file)."
^%ZVEMS("ZZ","DDS",9)=""
^%ZVEMS("ZZ","DDS",10)="    Editing a subfile directly. Kill DDSFILE(1) when complete."
^%ZVEMS("ZZ","DDS",11)="    DDSFILE(1).....Subfile number or global root."
^%ZVEMS("ZZ","DDS",12)="    DA(1)...DA(n)..The DA array. DA is subrecord number and DA(n) is record"
^%ZVEMS("ZZ","DDS",13)="    number at top level."
^%ZVEMS("ZZ","DDS",14)=""
^%ZVEMS("ZZ","DDS",15)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DDS",16)="    DTOUT..........User timed out."
^%ZVEMS("ZZ","DDS",17)=""
^%ZVEMS("ZZ","DDS",18)=" 4. EXAMPLE"
^%ZVEMS("ZZ","DDS",19)="    S DDSFILE=16500,DA=15,DR=""[EE FORM1]"" D ^DDS"
^%ZVEMS("ZZ","DIAC",1)=" D I A C     File Access Determination"
^%ZVEMS("ZZ","DIAC",2)=""
^%ZVEMS("ZZ","DIAC",3)=" 1. ENTRY POINT: ^DIAC"
^%ZVEMS("ZZ","DIAC",4)=""
^%ZVEMS("ZZ","DIAC",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIAC",6)="    DIFILE.....File number."
^%ZVEMS("ZZ","DIAC",7)="    DIAC.......""RD""    Verify Read access"
^%ZVEMS("ZZ","DIAC",8)="               ""WR""    Verify Write access"
^%ZVEMS("ZZ","DIAC",9)="               ""AUDIT"" Verify Audit access"
^%ZVEMS("ZZ","DIAC",10)="               ""DD""    Verify Data Dictionary access"
^%ZVEMS("ZZ","DIAC",11)="               ""DEL""   Verify Delete access"
^%ZVEMS("ZZ","DIAC",12)="               ""LAYGO"" Verify LAYGO access"
^%ZVEMS("ZZ","DIAC",13)=""
^%ZVEMS("ZZ","DIAC",14)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIAC",15)="    DIAC.....Either 1 (has access) or 0 (doesn't have access)."
^%ZVEMS("ZZ","DIAC",16)="    %........Same as DIAC."
^%ZVEMS("ZZ","DIAXU",1)=" D I A X U     Extract Data"
^%ZVEMS("ZZ","DIAXU",2)=""
^%ZVEMS("ZZ","DIAXU",3)=" 1. ENTRY POINT: EN^DIAXU"
^%ZVEMS("ZZ","DIAXU",4)="    Extracts data specified in template for a single entry, and moves"
^%ZVEMS("ZZ","DIAXU",5)="    that data to a destination file. Source entry may be deleted."
^%ZVEMS("ZZ","DIAXU",6)=""
^%ZVEMS("ZZ","DIAXU",7)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIAXU",8)="    DIAXF......Global root or number of file containing source entry."
^%ZVEMS("ZZ","DIAXU",9)="    DIAXT......Extract template (in brackets)  in source file that"
^%ZVEMS("ZZ","DIAXU",10)="               contains specifications of data to be extracted."
^%ZVEMS("ZZ","DIAXU",11)="    DIAXFE.....Internal entry number of source entry."
^%ZVEMS("ZZ","DIAXU",12)="    DIAXDEL....Optional. If defined, tells pgm to delete source entry."
^%ZVEMS("ZZ","DIAXU",13)=""
^%ZVEMS("ZZ","DIAXU",14)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIAXU",15)="    DIAXDA......Internal entry number of entry created in destination file."
^%ZVEMS("ZZ","DIAXU",16)="    DIAXNTC.....Internal entry number of validated extract template."
^%ZVEMS("ZZ","DIAXU",17)=""
^%ZVEMS("ZZ","DIAXU",18)="    DIAXFE killed upon exit. DIAXF,DIAXT,DIAXDEL not killed."
^%ZVEMS("ZZ","DIAXU",19)=""
^%ZVEMS("ZZ","DIAXU",20)="    DIAXNTC is flag used to determine if extract template has been validated."
^%ZVEMS("ZZ","DIAXU",21)="    Validation is necessary to ensure mapping information is valid. If this"
^%ZVEMS("ZZ","DIAXU",22)="    entry point is used within a FOR loop to move several entries, kill this"
^%ZVEMS("ZZ","DIAXU",23)="    variable outside the loop since re-validation occurs for each call within"
^%ZVEMS("ZZ","DIAXU",24)="    the loop."
^%ZVEMS("ZZ","DIAXU",25)=""
^%ZVEMS("ZZ","DIAXU",26)="    If an error occurred during extract process, the following array is"
^%ZVEMS("ZZ","DIAXU",27)="    returned instead:"
^%ZVEMS("ZZ","DIAXU",28)="    ^TMP(""DIERR"",$J,n,""TEXT"",0) = ^^m^m"
^%ZVEMS("ZZ","DIAXU",29)="    ^TMP(""DIERR"",$J,n,""TEXT"",1:m,0) = error msg"
^%ZVEMS("ZZ","DIAXU",30)="         n = error sequence number. DIERR can be used as a terminating"
^%ZVEMS("ZZ","DIAXU",31)="             value when looping through this array."
^%ZVEMS("ZZ","DIAXU",32)="         m = Total number of nodes of msg text for error n."
^%ZVEMS("ZZ","DIAXU",33)=""
^%ZVEMS("ZZ","DIAXU",34)="    DIAXDA is not defined. All input variables are left defined."
^%ZVEMS("ZZ","DIB",1)=" D I B     User Controlled Editing"
^%ZVEMS("ZZ","DIB",2)=""
^%ZVEMS("ZZ","DIB",3)=" 1. ENTRY POINT: EN^DIB"
^%ZVEMS("ZZ","DIB",4)=""
^%ZVEMS("ZZ","DIB",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIB",6)="    DIE..........File number or global root."
^%ZVEMS("ZZ","DIB",7)="    DIE(""NO^"")...""OUTOK""         Prevents jumping. Allows exiting."
^%ZVEMS("ZZ","DIB",8)="                 ""BACK""          Allows jumping back. No exiting."
^%ZVEMS("ZZ","DIB",9)="                 ""BACKOUTOK""     Allows jumping back. Allows exiting."
^%ZVEMS("ZZ","DIB",10)="                 ""Other value""   Prevents all jumping. No exiting."
^%ZVEMS("ZZ","DIB",11)="    DIDEL........Override Delete Access (Set DIDEL=File number)."
^%ZVEMS("ZZ","DIC",1)=" D I C     Look-up/Add New Entries"
^%ZVEMS("ZZ","DIC",2)=""
^%ZVEMS("ZZ","DIC",3)=" 1. ENTRY POINT: ^DIC"
^%ZVEMS("ZZ","DIC",4)=""
^%ZVEMS("ZZ","DIC",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIC",6)="    DIC.....File number or global root (""^GLOBAL("" or ""^GLOBAL(X,Y,"")."
^%ZVEMS("ZZ","DIC",7)="    DIC(0)....A  Ask entry"
^%ZVEMS("ZZ","DIC",8)="              C  Cross reference suppression is turned off"
^%ZVEMS("ZZ","DIC",9)="              E  Echo back information"
^%ZVEMS("ZZ","DIC",10)="              F  Forget look-up value"
^%ZVEMS("ZZ","DIC",11)="              I  Ignore special look-up program"
^%ZVEMS("ZZ","DIC",12)="              L  LAYGO allowed"
^%ZVEMS("ZZ","DIC",13)="              M  Multiple-index look-up allowed"
^%ZVEMS("ZZ","DIC",14)="              N  Internal Number look-up allowed"
^%ZVEMS("ZZ","DIC",15)="              O  Only find one entry if it matches exactly"
^%ZVEMS("ZZ","DIC",16)="              Q  Question erroneous input"
^%ZVEMS("ZZ","DIC",17)="              S  Suppress display of .01"
^%ZVEMS("ZZ","DIC",18)="              X  EXact match required"
^%ZVEMS("ZZ","DIC",19)="              Z  Zero node returned in Y(0) and external form in Y(0,0)"
^%ZVEMS("ZZ","DIC",20)="    X........If DIC(0) doesn't contain A, set X=Value you want to look up."
^%ZVEMS("ZZ","DIC",21)="    DIC(""A"")...Prompt."
^%ZVEMS("ZZ","DIC",22)="    DIC(""B"")...Default answer."
^%ZVEMS("ZZ","DIC",23)="    DIC(""S"")...Screen. When screen is executed Y=Internal number, and naked."
^%ZVEMS("ZZ","DIC",24)="                indicator is at zero node."
^%ZVEMS("ZZ","DIC",25)="    DIC(""W"")...Command string executed when DIC displays each of the entries"
^%ZVEMS("ZZ","DIC",26)="                that match user's input. Y and naked ref is same as DIC(""S"")."
^%ZVEMS("ZZ","DIC",27)="                Overrides identifiers. DIC(""W"")="""" will suppress identifiers."
^%ZVEMS("ZZ","DIC",28)="    DIC(""DR"")..Fields that will be asked if LAYGO and you add new entry."
^%ZVEMS("ZZ","DIC",29)="    DIC(""P"")...Needed to successfully add FIRST subentry to a multiple field."
^%ZVEMS("ZZ","DIC",30)="                Set it to 2nd piece of zero node of multiple field's"
^%ZVEMS("ZZ","DIC",31)="                definition in ^DD. Ex: S DIC(""P"")=$P(^DD(2,9,0),""^"",2)"
^%ZVEMS("ZZ","DIC",32)="    DTIME......Number of seconds for time-out."
^%ZVEMS("ZZ","DIC",33)="    DLAYGO.....If set equal to file number, user may add a new entry."
^%ZVEMS("ZZ","DIC",34)="    DINUM......Identifies subscript at which data is to be stored."
^%ZVEMS("ZZ","DIC",35)=""
^%ZVEMS("ZZ","DIC",36)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIC",37)="    Y........Y=-1   Look-up unsuccessful."
^%ZVEMS("ZZ","DIC",38)="             Y=N^S  N is the internal number, S is the .01 field."
^%ZVEMS("ZZ","DIC",39)="             Y=N^S^1  1 indicates entry has just been added."
^%ZVEMS("ZZ","DIC",40)="    Y(0).....Set to zero node if DIC(0) contains Z."
^%ZVEMS("ZZ","DIC",41)="    Y(0,0)...External form of .01 field if DIC(0) contains Z."
^%ZVEMS("ZZ","DIC",42)="    X........If DIC(0) contains A, X will store users look-up value."
^%ZVEMS("ZZ","DIC",43)="    DTOUT....Time-out occurred."
^%ZVEMS("ZZ","DIC",44)="    DUOUT....User entered ""^""."
^%ZVEMS("ZZ","DIC",45)=""
^%ZVEMS("ZZ","DIC",46)="    Sample code where file ^DIZ(16 has multiple field 9 at node 4."
^%ZVEMS("ZZ","DIC",47)="    S DIC=""^DIZ(16,"",DIC(0)=""QEAL"" D ^DIC ;Get entry"
^%ZVEMS("ZZ","DIC",48)="    S DA(1)=+Y,DIC=DIC_DA(1)_"",4,"" ;Root of subfile"
^%ZVEMS("ZZ","DIC",49)="    S DIC(0)=""QEAL"",DIC(""P"")=$P(^DD(16,9,0),""^"",2)"
^%ZVEMS("ZZ","DIC",50)="    D ^DIC ;Get subentry"
^%ZVEMS("ZZ","DIC",51)="    S DIE=DIC KILL DIC S DA=+Y,DR=""1;2"" D ^DIE ;Edit multiples directly"
^%ZVEMS("ZZ","DIC",52)=""
^%ZVEMS("ZZ","DIC",53)=" 1. ENTRY POINT: IX^DIC"
^%ZVEMS("ZZ","DIC",54)=""
^%ZVEMS("ZZ","DIC",55)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIC",56)="    DIC......Global root"
^%ZVEMS("ZZ","DIC",57)="    DIC(0)...Same as ^DIC"
^%ZVEMS("ZZ","DIC",58)="    D........The cross reference in which to start looking. If DIC(0) contains"
^%ZVEMS("ZZ","DIC",59)="             M, then DIC will continue with further cross references. If it"
^%ZVEMS("ZZ","DIC",60)="             does not, then the look-up is only on the single cross reference."
^%ZVEMS("ZZ","DIC",61)="    X........If DIC(0) does not contain an A, then X must equal look-up value."
^%ZVEMS("ZZ","DIC",62)=""
^%ZVEMS("ZZ","DIC",63)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIC",64)="    Y........Y=-1   Look-up unsuccessful."
^%ZVEMS("ZZ","DIC",65)="             Y=N^S  N is the internal number, S is the .01 field."
^%ZVEMS("ZZ","DIC",66)="             Y=N^S^1  1 indicates entry has just been added."
^%ZVEMS("ZZ","DIC",67)="    Y(0).....Set to zero node if DIC(0) contains Z."
^%ZVEMS("ZZ","DIC",68)="    Y(0,0)...External form of .01 field if DIC(0) contains Z."
^%ZVEMS("ZZ","DIC",69)="    X........If DIC(0) contains A, X will store users look-up value."
^%ZVEMS("ZZ","DIC",70)="    DTOUT....Time-out occurred."
^%ZVEMS("ZZ","DIC",71)="    DUOUT....User entered ""^""."
^%ZVEMS("ZZ","DIC",72)=""
^%ZVEMS("ZZ","DIC",73)=" 1. ENTRY POINT: MIX^DIC1"
^%ZVEMS("ZZ","DIC",74)=""
^%ZVEMS("ZZ","DIC",75)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIC",76)="    Same as IX^DIC except variable D can contain a list of xrefs"
^%ZVEMS("ZZ","DIC",77)="    separated by up-arrow. If DIC(0) does not contain M, only the"
^%ZVEMS("ZZ","DIC",78)="    first xref in D will be used for the look-up."
^%ZVEMS("ZZ","DIC",79)=""
^%ZVEMS("ZZ","DIC",80)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIC",81)="    Same as IX^DIC."
^%ZVEMS("ZZ","DIC1",1)=" D I C 1     Custom Look-up & File Information Setup"
^%ZVEMS("ZZ","DIC1",2)=""
^%ZVEMS("ZZ","DIC1",3)=" 1. ENTRY POINT: DO^DIC1"
^%ZVEMS("ZZ","DIC1",4)="    If $D(DO), DO^DIC1 will QUIT. If DIC(""W"") is defined it won't be changed."
^%ZVEMS("ZZ","DIC1",5)=""
^%ZVEMS("ZZ","DIC1",6)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIC1",7)="    DIC......Global root"
^%ZVEMS("ZZ","DIC1",8)="    DIC(0)...Same as ^DIC"
^%ZVEMS("ZZ","DIC1",9)=""
^%ZVEMS("ZZ","DIC1",10)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIC1",11)="    DO.......File name^file number and specifiers. This is the file"
^%ZVEMS("ZZ","DIC1",12)="             descriptor node. (Use letter O, not zero.)"
^%ZVEMS("ZZ","DIC1",13)="    DO(2)....File number and specifiers. This is the 2nd piece of DO."
^%ZVEMS("ZZ","DIC1",14)="             +DO(2) will always equal the file number."
^%ZVEMS("ZZ","DIC1",15)="    DIC(""W"")..Contains write logic for identifiers. ^DD(+DO(2),0,""ID"",value)"
^%ZVEMS("ZZ","DIC1",16)="              Specifier I, must be in DO(2) for Fileman to look at ID nodes."
^%ZVEMS("ZZ","DIC1",17)="    DO(""SCR"")..Contains IF statement that screens out entries. Screen is"
^%ZVEMS("ZZ","DIC1",18)="              applied to inquiries and printouts as well as look-ups."
^%ZVEMS("ZZ","DIC1",19)=""
^%ZVEMS("ZZ","DIC1",20)=" 1. ENTRY POINT: MIX^DIC1"
^%ZVEMS("ZZ","DIC1",21)="    ^DIC does look-up starting with B cross ref. You can make it do a"
^%ZVEMS("ZZ","DIC1",22)="    look-up on a specific set of cross references by calling DIC1 at MIX."
^%ZVEMS("ZZ","DIC1",23)=""
^%ZVEMS("ZZ","DIC1",24)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIC1",25)="    DIC......Global root"
^%ZVEMS("ZZ","DIC1",26)="    DIC(0)...Same as ^DIC. If it doesn't contain M, only first cross ref"
^%ZVEMS("ZZ","DIC1",27)="             in D will be used for look-up."
^%ZVEMS("ZZ","DIC1",28)="    D........The list of cross references, separated by up-arrow."
^%ZVEMS("ZZ","DIC1",29)="    X........If DIC(0) doesn't contain A, variable X must be equal to the"
^%ZVEMS("ZZ","DIC1",30)="             value you want to look-up."
^%ZVEMS("ZZ","DIC1",31)=""
^%ZVEMS("ZZ","DIC1",32)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIC1",33)="    Y........Y=-1   Look-up unsuccessful."
^%ZVEMS("ZZ","DIC1",34)="             Y=N^S  N is the internal number, S is the .01 field."
^%ZVEMS("ZZ","DIC1",35)="             Y=N^S^1  1 indicates entry has just been added."
^%ZVEMS("ZZ","DIC1",36)="    Y(0).....Set to zero node if DIC(0) contains Z."
^%ZVEMS("ZZ","DIC1",37)="    Y(0,0)...External form of .01 field if DIC(0) contains Z."
^%ZVEMS("ZZ","DIC1",38)="    DTOUT....Time-out occurred."
^%ZVEMS("ZZ","DIC1",39)="    DUOUT....User entered ""^""."
^%ZVEMS("ZZ","DICD",1)=" D I C D     Wait Messages"
^%ZVEMS("ZZ","DICD",2)=""
^%ZVEMS("ZZ","DICD",3)=" 1. ENTRY POINT: WAIT^DICD"
^%ZVEMS("ZZ","DICD",4)="    Generates wait messages."
^%ZVEMS("ZZ","DICN",1)=" D I C N     Adding New Entries. YES/NO Prompts."
^%ZVEMS("ZZ","DICN",2)=""
^%ZVEMS("ZZ","DICN",3)=" 1. ENTRY POINT: FILE^DICN"
^%ZVEMS("ZZ","DICN",4)="    You must Kill DD. If DO does not contain the characteristics of the file"
^%ZVEMS("ZZ","DICN",5)="    you are adding to, then DO should be killed."
^%ZVEMS("ZZ","DICN",6)=""
^%ZVEMS("ZZ","DICN",7)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DICN",8)="    DIC......Global root"
^%ZVEMS("ZZ","DICN",9)="    DIC(0)...Same as ^DIC"
^%ZVEMS("ZZ","DICN",10)="    X........The value of the .01 field. Programmer must insure value has"
^%ZVEMS("ZZ","DICN",11)="             already met input transform criteria."
^%ZVEMS("ZZ","DICN",12)="    DINUM....Optional. Identifies subscript where data is to be stored."
^%ZVEMS("ZZ","DICN",13)="    DIC(""DR"")..Optional. Used to input other data elements when entry is made."
^%ZVEMS("ZZ","DICN",14)=""
^%ZVEMS("ZZ","DICN",15)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DICN",16)="    Y........Y=-1   Look-up unsuccessful. No new entry."
^%ZVEMS("ZZ","DICN",17)="             Y=N^S^1  1 indicates entry has just been added."
^%ZVEMS("ZZ","DICN",18)="    Y(0).....Set to zero node if DIC(0) contains Z."
^%ZVEMS("ZZ","DICN",19)="    Y(0,0)...External form of .01 field if DIC(0) contains Z."
^%ZVEMS("ZZ","DICN",20)="    DTOUT....Time-out occurred."
^%ZVEMS("ZZ","DICN",21)="    DUOUT....User entered ""^""."
^%ZVEMS("ZZ","DICN",22)=""
^%ZVEMS("ZZ","DICN",23)=" 1. ENTRY POINT: YN^DICN"
^%ZVEMS("ZZ","DICN",24)="    Process a YES/NO response."
^%ZVEMS("ZZ","DICN",25)=""
^%ZVEMS("ZZ","DICN",26)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DICN",27)="    %........Default response. 0=No default"
^%ZVEMS("ZZ","DICN",28)="                               1=YES"
^%ZVEMS("ZZ","DICN",29)="                               2=NO"
^%ZVEMS("ZZ","DICN",30)=""
^%ZVEMS("ZZ","DICN",31)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DICN",32)="     %.......-1   User entered ^"
^%ZVEMS("ZZ","DICN",33)="              0   User entered ?"
^%ZVEMS("ZZ","DICN",34)="              1   User entered YES"
^%ZVEMS("ZZ","DICN",35)="              2   User entered NO"
^%ZVEMS("ZZ","DICN",36)="     %Y.......Actual text that the user entered."
^%ZVEMS("ZZ","DICQ",1)=" D I C Q     Entry Display for Loop-ups"
^%ZVEMS("ZZ","DICQ",2)=""
^%ZVEMS("ZZ","DICQ",3)=" 1. ENTRY POINT: DQ^DICQ"
^%ZVEMS("ZZ","DICQ",4)="    Use this subroutine to process a question mark response directly."
^%ZVEMS("ZZ","DICQ",5)=""
^%ZVEMS("ZZ","DICQ",6)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DICQ",7)="    DIC........Global root"
^%ZVEMS("ZZ","DICQ",8)="    DIC(0).....Same as ^DIC"
^%ZVEMS("ZZ","DICQ",9)="    DIC(""S"")...Optional. Same as ^DIC"
^%ZVEMS("ZZ","DICQ",10)="    D..........Set to ""B""."
^%ZVEMS("ZZ","DICQ",11)="    DZ.........Set to ""??"" to prevent ""DO YOU WANT TO SEE ALL nn ENTRIES?"""
^%ZVEMS("ZZ","DICQ",12)="               prompt."
^%ZVEMS("ZZ","DICRW",1)=" D I C R W     Required Variables"
^%ZVEMS("ZZ","DICRW",2)=""
^%ZVEMS("ZZ","DICRW",3)=" 1. ENTRY POINT: DT^DICRW"
^%ZVEMS("ZZ","DICRW",4)=""
^%ZVEMS("ZZ","DICRW",5)=" 2. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DICRW",6)="    DUZ......Set to zero if not already defined."
^%ZVEMS("ZZ","DICRW",7)="    DUZ(0)...Set to null if not already defined. If DUZ(0)=@ enables"
^%ZVEMS("ZZ","DICRW",8)="             terminal break if operating system supports it."
^%ZVEMS("ZZ","DICRW",9)="    IO(0)....Set to $I if IO(0) is not defined. Therefore this program should"
^%ZVEMS("ZZ","DICRW",10)="             not be used if user is on a device different from the home"
^%ZVEMS("ZZ","DICRW",11)="             terminal and IO(0) is undefined."
^%ZVEMS("ZZ","DICRW",12)="    DT.......Set to the current date."
^%ZVEMS("ZZ","DICRW",13)="    U........Up-arrow (^)."
^%ZVEMS("ZZ","DID",1)=" D I D     Data Dictionary Listing"
^%ZVEMS("ZZ","DID",2)=""
^%ZVEMS("ZZ","DID",3)=" 1. ENTRY POINT: EN^DID"
^%ZVEMS("ZZ","DID",4)=""
^%ZVEMS("ZZ","DID",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DID",6)="    DIC........Data dictionary number"
^%ZVEMS("ZZ","DID",7)="    DIFORMAT...Equal to desired data dictionary format:"
^%ZVEMS("ZZ","DID",8)="               STANDARD, BRIEF, MODIFIED STANDARD, TEMPLATES ONLY"
^%ZVEMS("ZZ","DID",9)="               GLOBAL MAP, CONDENSED"
^%ZVEMS("ZZ","DIE",1)=" D I E     Edit Data"
^%ZVEMS("ZZ","DIE",2)=""
^%ZVEMS("ZZ","DIE",3)=" 1. ENTRY POINT: ^DIE"
^%ZVEMS("ZZ","DIE",4)=""
^%ZVEMS("ZZ","DIE",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIE",6)="    DIE........Global root or file number."
^%ZVEMS("ZZ","DIE",7)="    DA.........Internal entry number."
^%ZVEMS("ZZ","DIE",8)="    DR.........Fields to be edited. Examples:"
^%ZVEMS("ZZ","DIE",9)="          S DR=""27""  Field number."
^%ZVEMS("ZZ","DIE",10)="          S DR=""27//TODAY""  Offer default prompt. Value on file overrides"
^%ZVEMS("ZZ","DIE",11)="                            default."
^%ZVEMS("ZZ","DIE",12)="          S DR=""27///TODAY""  ""Stuffs"" a value. Value is in external form"
^%ZVEMS("ZZ","DIE",13)="                             and passes thru input transform."
^%ZVEMS("ZZ","DIE",14)="          S DR=""27///^S X=VAR""  ""Stuffs"" a value stored in a variable."
^%ZVEMS("ZZ","DIE",15)="          S DR=""27////2570120""  ""Stuffs"" a value. Value is in internal"
^%ZVEMS("ZZ","DIE",16)="                             form, and doesn't pass thru input transform."
^%ZVEMS("ZZ","DIE",17)="                             Can't be used for .01 field."
^%ZVEMS("ZZ","DIE",18)="          S DR=""27:60""  A range of field numbers."
^%ZVEMS("ZZ","DIE",19)="          A place holder like @1."
^%ZVEMS("ZZ","DIE",20)="          A line of M code."
^%ZVEMS("ZZ","DIE",21)="          A sequence of any of the above types separated by "";""."
^%ZVEMS("ZZ","DIE",22)="          An input template enclosed in brackets."
^%ZVEMS("ZZ","DIE",23)="    DIE(""NO^"")...""OUTOK""         No jump. Exit ok."
^%ZVEMS("ZZ","DIE",24)="                 ""BACK""          Jump back ok. No exit."
^%ZVEMS("ZZ","DIE",25)="                 ""BACKOUTOK""     Jump back ok. Exit ok."
^%ZVEMS("ZZ","DIE",26)="                 ""Other value""   No jump. No exit."
^%ZVEMS("ZZ","DIE",27)="    DIDEL........Override Delete Access (Set DIDEL=File number)."
^%ZVEMS("ZZ","DIE",28)=""
^%ZVEMS("ZZ","DIE",29)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIE",30)="    DTOUT........Time out"
^%ZVEMS("ZZ","DIE",31)=""
^%ZVEMS("ZZ","DIE",32)="  LOCKING: So 2 users can't edit entry at same time."
^%ZVEMS("ZZ","DIE",33)="      S DIE=""^FILE(,"",DA=777,DR=""[EDIT]"""
^%ZVEMS("ZZ","DIE",34)="      L ^FILE(777):0 I $T D ^DIE L  Q"
^%ZVEMS("ZZ","DIE",35)="      W !?5,""Another user is editing this entry."" Q"
^%ZVEMS("ZZ","DIE",36)=""
^%ZVEMS("ZZ","DIE",37)="  SPECIFIERS: When responding to EDIT WHICH FIELD prompt:"
^%ZVEMS("ZZ","DIE",38)="      T.........Use Title instead of Label."
^%ZVEMS("ZZ","DIE",39)="      ""xxx"".....Use literal as prompt."
^%ZVEMS("ZZ","DIE",40)="      DUP.......Duplicate response to this field from entry to entry."
^%ZVEMS("ZZ","DIE",41)="      REQ.......Require an answer."
^%ZVEMS("ZZ","DIE",42)="      3T........Title."
^%ZVEMS("ZZ","DIE",43)="      3xxx......Use literal as prompt. No quotes."
^%ZVEMS("ZZ","DIE",44)="      3d........Duplicate response. Lowercase D."
^%ZVEMS("ZZ","DIE",45)="      3R........Require an answer."
^%ZVEMS("ZZ","DIE",46)="      Use ""~"" to combine specifiers. Ex: 3R~T"
^%ZVEMS("ZZ","DIE",47)=""
^%ZVEMS("ZZ","DIE",48)="  BRANCHING: Insert executable M statement in the DR string. If the code"
^%ZVEMS("ZZ","DIE",49)="             sets Y, DIE will jump to that field (field must be in DR string)."
^%ZVEMS("ZZ","DIE",50)="             Y may be set to place holder, e.g. @1. If Y is set to 0 or """","
^%ZVEMS("ZZ","DIE",51)="             DIE will exit. If Y is killed or never set, no branching will"
^%ZVEMS("ZZ","DIE",52)="             occur. Y can be calculated using X which equals internal value"
^%ZVEMS("ZZ","DIE",53)="             of field previously asked for."
^%ZVEMS("ZZ","DIE",54)="             Ex: S DR=""4;I X=""""YES"""" S Y=10;.01;10;15"""
^%ZVEMS("ZZ","DIE",55)=""
^%ZVEMS("ZZ","DIE",56)="  SPECIFIC FIELDS IN MULTIPLES:"
^%ZVEMS("ZZ","DIE",57)="        Multiple field 15, subfields .01 and 7:"
^%ZVEMS("ZZ","DIE",58)="        S DR="".01;15;6"""
^%ZVEMS("ZZ","DIE",59)="        S DR(2,16001.02)="".01;7"""
^%ZVEMS("ZZ","DIE",60)=""
^%ZVEMS("ZZ","DIE",61)="  CONTINUED DR STRING: If more than 245 characters."
^%ZVEMS("ZZ","DIE",62)="        S DR(2,16001.02,1)"
^%ZVEMS("ZZ","DIE",63)="        S DR(2,16001.02,2)"
^%ZVEMS("ZZ","DIE",64)=""
^%ZVEMS("ZZ","DIE",65)="  UP-ARROW EXIT: If user up-arrowed out of ^DIE variable Y will be defined."
^%ZVEMS("ZZ","DIE",66)=""
^%ZVEMS("ZZ","DIE",67)="  EDITING SUBFILE DIRECTLY: Data in subfile 16000.02 is stored on node"
^%ZVEMS("ZZ","DIE",68)="        20 and you want to edit number 777, subentry 1:"
^%ZVEMS("ZZ","DIE",69)="        S DIE=""^FILE(777,20,"""
^%ZVEMS("ZZ","DIE",70)="        S DA(1)=777"
^%ZVEMS("ZZ","DIE",71)="        S DA=1"
^%ZVEMS("ZZ","DIE",72)="        S DR="".01;7"""
^%ZVEMS("ZZ","DIE",73)="        D ^DIE"
^%ZVEMS("ZZ","DIE",74)="        Subfile zero node must be defined."
^%ZVEMS("ZZ","DIE",75)=""
^%ZVEMS("ZZ","DIE",76)="  SCREENING VARIABLE POINTER: Set DIC(""V""). Refer to the VA Fileman"
^%ZVEMS("ZZ","DIE",77)="                              Programmer's Manual."
^%ZVEMS("ZZ","DIE",78)=""
^%ZVEMS("ZZ","DIEZ",1)=" D I E Z     Input Template Compilation"
^%ZVEMS("ZZ","DIEZ",2)=""
^%ZVEMS("ZZ","DIEZ",3)=" 1. ENTRY POINT: ^DIEZ"
^%ZVEMS("ZZ","DIEZ",4)=""
^%ZVEMS("ZZ","DIEZ",5)=" 1. ENTRY POINT: EN^DIEZ"
^%ZVEMS("ZZ","DIEZ",6)="    Recompile an input template without user intervention."
^%ZVEMS("ZZ","DIEZ",7)=""
^%ZVEMS("ZZ","DIEZ",8)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIEZ",9)="    X.......Routine name."
^%ZVEMS("ZZ","DIEZ",10)="    Y.......The internal entry number of template."
^%ZVEMS("ZZ","DIEZ",11)="    DMAX....Maximum size of compiled routines."
^%ZVEMS("ZZ","DIFG",1)=" D I F G     Filegrams"
^%ZVEMS("ZZ","DIFG",2)=""
^%ZVEMS("ZZ","DIFG",3)="  Refer to the VA Fileman Programmer's Manual."
^%ZVEMS("ZZ","DIK",1)=" D I K     Entry Deletion and File Reindexing"
^%ZVEMS("ZZ","DIK",2)=""
^%ZVEMS("ZZ","DIK",3)=" 1. ENTRY POINT: ^DIK"
^%ZVEMS("ZZ","DIK",4)="    Delete an entry. Doesn't update pointers to deleted entries."
^%ZVEMS("ZZ","DIK",5)="    It does execute all cross references and triggers."
^%ZVEMS("ZZ","DIK",6)=""
^%ZVEMS("ZZ","DIK",7)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIK",8)="    DIK......Global root."
^%ZVEMS("ZZ","DIK",9)="    DA.......Entry number you wish to delete."
^%ZVEMS("ZZ","DIK",10)="    DA(1)....Needed when deleting at a lower level."
^%ZVEMS("ZZ","DIK",11)=""
^%ZVEMS("ZZ","DIK",12)="    Examples:  S DIK=""^EMP("",DA=7 D ^DIK"
^%ZVEMS("ZZ","DIK",13)="               S DA(1)=1,DA=2,DIK=""^EMP(""_DA(1)_"",""""SX"""","" D ^DIK"
^%ZVEMS("ZZ","DIK",14)="               S DIK=""^EMP("" F DA=2,9,11 D ^DIK"
^%ZVEMS("ZZ","DIK",15)=""
^%ZVEMS("ZZ","DIK",16)=" 1. ENTRY POINT: ENALL^DIK"
^%ZVEMS("ZZ","DIK",17)="    Reindexes all entries in a file or subfile."
^%ZVEMS("ZZ","DIK",18)="    Executes only the SET logic."
^%ZVEMS("ZZ","DIK",19)=""
^%ZVEMS("ZZ","DIK",20)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIK",21)="    DIK......Global root."
^%ZVEMS("ZZ","DIK",22)="    DIK(1)...Field number or Field number and specific cross reference"
^%ZVEMS("ZZ","DIK",23)="             separated by up-arrow."
^%ZVEMS("ZZ","DIK",24)="             S DIK(1)=.01   -or-   S DIK(1)="".01^B^C"""
^%ZVEMS("ZZ","DIK",25)="    DA(1)....Needed when reindexing at a lower level."
^%ZVEMS("ZZ","DIK",26)=""
^%ZVEMS("ZZ","DIK",27)=" 1. ENTRY POINT: EN^DIK"
^%ZVEMS("ZZ","DIK",28)="    Reindexes a single field in a file or subfile, for one entry."
^%ZVEMS("ZZ","DIK",29)="    Executes KILL and SET logic."
^%ZVEMS("ZZ","DIK",30)="    Needs DIK,DA,DA(1),DIK(1)."
^%ZVEMS("ZZ","DIK",31)=""
^%ZVEMS("ZZ","DIK",32)=" 1. ENTRY POINT: EN1^DIK"
^%ZVEMS("ZZ","DIK",33)="    Reindexes a single field in a file or subfile, for one entry."
^%ZVEMS("ZZ","DIK",34)="    Executes only the SET logic."
^%ZVEMS("ZZ","DIK",35)="    Needs DIK,DA,DA(1),DIK(1)."
^%ZVEMS("ZZ","DIK",36)=""
^%ZVEMS("ZZ","DIK",37)=" 1. ENTRY POINT: IXALL^DIK"
^%ZVEMS("ZZ","DIK",38)="    Reindexes all cross references for all entries."
^%ZVEMS("ZZ","DIK",39)="    Executes only the SET logic."
^%ZVEMS("ZZ","DIK",40)="    Needs DIK."
^%ZVEMS("ZZ","DIK",41)=""
^%ZVEMS("ZZ","DIK",42)=" 1. ENTRY POINT: IX^DIK"
^%ZVEMS("ZZ","DIK",43)="    Reindexes all cross references for only one entry."
^%ZVEMS("ZZ","DIK",44)="    Executes KILL and SET logic."
^%ZVEMS("ZZ","DIK",45)="    Needs DIK,DA,DA(1)."
^%ZVEMS("ZZ","DIK",46)=""
^%ZVEMS("ZZ","DIK",47)=" 1. ENTRY POINT: IX1^DIK"
^%ZVEMS("ZZ","DIK",48)="    Reindexes all cross references for only one entry."
^%ZVEMS("ZZ","DIK",49)="    Executes only the SET logic."
^%ZVEMS("ZZ","DIK",50)="    Needs DIK,DA,DA(1)."
^%ZVEMS("ZZ","DIKZ",1)=" D I K Z     Cross Reference Compilation"
^%ZVEMS("ZZ","DIKZ",2)=""
^%ZVEMS("ZZ","DIKZ",3)=" 1. ENTRY POINT: ^DIKZ"
^%ZVEMS("ZZ","DIKZ",4)="    Compiled routines are then used when any calls to ^DIK are made."
^%ZVEMS("ZZ","DIKZ",5)=""
^%ZVEMS("ZZ","DIKZ",6)=" 1. ENTRY POINT: EN^DIKZ"
^%ZVEMS("ZZ","DIKZ",7)="    Recompile a file's cross references without user intervention."
^%ZVEMS("ZZ","DIKZ",8)=""
^%ZVEMS("ZZ","DIKZ",9)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIKZ",10)="    X.......Routine name."
^%ZVEMS("ZZ","DIKZ",11)="    Y.......The file number."
^%ZVEMS("ZZ","DIKZ",12)="    DMAX....Maximum size of compiled routines."
^%ZVEMS("ZZ","DIM",1)=" D I M     M Code Validation."
^%ZVEMS("ZZ","DIM",2)=""
^%ZVEMS("ZZ","DIM",3)=" 1. ENTRY POINT: ^DIM"
^%ZVEMS("ZZ","DIM",4)=""
^%ZVEMS("ZZ","DIM",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIM",6)="    X......Code to be evaluated."
^%ZVEMS("ZZ","DIM",7)=""
^%ZVEMS("ZZ","DIM",8)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIM",9)="    X......If $D(X) is zero the line of code was invalid."
^%ZVEMS("ZZ","DIO2",1)=" D I O 2     Internal to External Date"
^%ZVEMS("ZZ","DIO2",2)=""
^%ZVEMS("ZZ","DIO2",3)=" 1. ENTRY POINT: DT^DIO2"
^%ZVEMS("ZZ","DIO2",4)="    Takes an internal date and writes out its external form."
^%ZVEMS("ZZ","DIO2",5)=""
^%ZVEMS("ZZ","DIO2",6)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIO2",7)="    Y......Internal date."
^%ZVEMS("ZZ","DIP",1)=" D I P     Print Data"
^%ZVEMS("ZZ","DIP",2)=""
^%ZVEMS("ZZ","DIP",3)=" 1. ENTRY POINT: EN1^DIP"
^%ZVEMS("ZZ","DIP",4)="    Kills all input variables before it quits."
^%ZVEMS("ZZ","DIP",5)=""
^%ZVEMS("ZZ","DIP",6)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIP",7)="    L........Set to zero or a string whose numeric evaluation is zero."
^%ZVEMS("ZZ","DIP",8)="    DIC......The global root or file number."
^%ZVEMS("ZZ","DIP",9)="    FLDS.....Fields to be printed, separated by commas."
^%ZVEMS("ZZ","DIP",10)="             FLDS="".01,.03,1;C20"""
^%ZVEMS("ZZ","DIP",11)="             FLDS=""[DEMO]"""
^%ZVEMS("ZZ","DIP",12)="    FLDS(1)..If there are more fields than can fit in string FLDS."
^%ZVEMS("ZZ","DIP",13)="    BY.......Sort fields separated by commas. If BY is undefined, user is"
^%ZVEMS("ZZ","DIP",14)="             prompted for sort conditions."
^%ZVEMS("ZZ","DIP",15)="             BY="".01;C1,.02"""
^%ZVEMS("ZZ","DIP",16)="             BY=""DIAGNOSIS,@"" @ will ask user for that SORT BY response."
^%ZVEMS("ZZ","DIP",17)="             BY=""[DEMOSORT]"""
^%ZVEMS("ZZ","DIP",18)="             If BY includes more than one field, the same comma-piece"
^%ZVEMS("ZZ","DIP",19)="             will identify the field in the FR and TO variables."
^%ZVEMS("ZZ","DIP",20)="    FR.......The START WITH: values of the SORT BY fields. If FR is"
^%ZVEMS("ZZ","DIP",21)="             undefined, user will be asked START WITH: questions."
^%ZVEMS("ZZ","DIP",22)="             Each comma-piece can be:"
^%ZVEMS("ZZ","DIP",23)="             The START WITH value."
^%ZVEMS("ZZ","DIP",24)="             Null. Sort will start from beginning of file."
^%ZVEMS("ZZ","DIP",25)="             ?. Causes START WITH: prompt."
^%ZVEMS("ZZ","DIP",26)="             @. Sort will begin with null values (entries that have no data)."
^%ZVEMS("ZZ","DIP",27)="    TO.......The GO TO: values. Its characteristics are same as FR."
^%ZVEMS("ZZ","DIP",28)="    DHD......The header desired for the output. Can be:"
^%ZVEMS("ZZ","DIP",29)="             @ if no header is desired."
^%ZVEMS("ZZ","DIP",30)="             @@ if no header and no formfeed is desired."
^%ZVEMS("ZZ","DIP",31)="             A literal."
^%ZVEMS("ZZ","DIP",32)="             A line of M code which must begin with a write statement."
^%ZVEMS("ZZ","DIP",33)="             Ex. DHD=""W ?0 D ^ZZHDR"""
^%ZVEMS("ZZ","DIP",34)="             A print template enclosed in brackets."
^%ZVEMS("ZZ","DIP",35)="             Two print templates separated by a minus sign. The first will"
^%ZVEMS("ZZ","DIP",36)="             be the header and the second the trailer. (""[DEMO]-[DEMO1]"")"
^%ZVEMS("ZZ","DIP",37)="   DIASKHD...If set to null user will be prompted to enter a header."
^%ZVEMS("ZZ","DIP",38)="   PG........Starting page number."
^%ZVEMS("ZZ","DIP",39)="   DHIT......M code which will be executed for every entry after all the"
^%ZVEMS("ZZ","DIP",40)="             fields specified in FLDS have been printed."
^%ZVEMS("ZZ","DIP",41)="   DIOEND....M code executed after printout has finished."
^%ZVEMS("ZZ","DIP",42)="   DIOBEG....M code executed before printout starts."
^%ZVEMS("ZZ","DIP",43)="   DCOPIES...If %ZIS chooses an SDP. Gives multiple copies."
^%ZVEMS("ZZ","DIP",44)="   IOP.......Set equal to a device name to preanswer the DEVICE prompt."
^%ZVEMS("ZZ","DIP",45)="             Set IOP=""Q;MY PRINTER"" to establish queueing."
^%ZVEMS("ZZ","DIP",46)="   DQTIME....If output is queued, this contains time to print (T@1500)."
^%ZVEMS("ZZ","DIP",47)="   DIS(0)....Screen out certain entries. Contains an IF statement. If TRUE"
^%ZVEMS("ZZ","DIP",48)="             the entry will print. D0 will equal internal entry number."
^%ZVEMS("ZZ","DIP",49)="   DIS(n)....You can set other elements of the DIS array. If many elements,"
^%ZVEMS("ZZ","DIP",50)="             DIS(0) must be true and any one of the other elements must be"
^%ZVEMS("ZZ","DIP",51)="             true for the entry to print."
^%ZVEMS("ZZ","DIPT",1)=" D I P T    Print and Sort Template Display"
^%ZVEMS("ZZ","DIPT",2)=""
^%ZVEMS("ZZ","DIPT",3)=" 1. ENTRY POINT: ^DIPT"
^%ZVEMS("ZZ","DIPT",4)=""
^%ZVEMS("ZZ","DIPT",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIPT",6)="    D0.....Internal number of PRINT TEMPLATE file."
^%ZVEMS("ZZ","DIPT",7)=""
^%ZVEMS("ZZ","DIPT",8)=" 1. ENTRY POINT: DIBT^DIPT"
^%ZVEMS("ZZ","DIPT",9)=""
^%ZVEMS("ZZ","DIPT",10)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIPT",11)="    D0.....Internal number of SORT TEMPLATE file."
^%ZVEMS("ZZ","DIPZ",1)=" D I P Z     Print Template Compilation"
^%ZVEMS("ZZ","DIPZ",2)=""
^%ZVEMS("ZZ","DIPZ",3)=" 1. ENTRY POINT: ^DIPZ"
^%ZVEMS("ZZ","DIPZ",4)="    A DIPZ-compiled routine may be called by any program that passes to"
^%ZVEMS("ZZ","DIPZ",5)="    it DT,DUZ,IOSL,U, and D0 (entry number). Variable DXS must be killed"
^%ZVEMS("ZZ","DIPZ",6)="    before and after the call."
^%ZVEMS("ZZ","DIPZ",7)=""
^%ZVEMS("ZZ","DIPZ",8)=" 1. ENTRY POINT: EN^DIPZ"
^%ZVEMS("ZZ","DIPZ",9)="    Recompile an input template without user intervention."
^%ZVEMS("ZZ","DIPZ",10)=""
^%ZVEMS("ZZ","DIPZ",11)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIPZ",12)="    X.......Routine name."
^%ZVEMS("ZZ","DIPZ",13)="    Y.......The internal entry number of template."
^%ZVEMS("ZZ","DIPZ",14)="    DMAX....Maximum size of compiled routines."
^%ZVEMS("ZZ","DIQ",1)=" D I Q     Data Display, Date Conversion"
^%ZVEMS("ZZ","DIQ",2)=""
^%ZVEMS("ZZ","DIQ",3)=" 1. ENTRY POINT: EN^DIQ"
^%ZVEMS("ZZ","DIQ",4)=""
^%ZVEMS("ZZ","DIQ",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIQ",6)="    DIC......The global root or file number."
^%ZVEMS("ZZ","DIQ",7)="    DA.......Internal entry number of file entry to be printed."
^%ZVEMS("ZZ","DIQ",8)="    DR.......Literal name of subscript or subscripts to be displayed."
^%ZVEMS("ZZ","DIQ",9)="             Use "":"" for a range. All data fields within and decendent"
^%ZVEMS("ZZ","DIQ",10)="             from the subscript(s) will be displayed. If DR is not defined,"
^%ZVEMS("ZZ","DIQ",11)="             all fields are displayed."
^%ZVEMS("ZZ","DIQ",12)="     DIQ(0)..C=display computed flds, A=display audit records"
^%ZVEMS("ZZ","DIQ",13)=""
^%ZVEMS("ZZ","DIQ",14)=" 1. ENTRY POINT: Y^DIQ"
^%ZVEMS("ZZ","DIQ",15)="    Converts a data element from its internal form to its external form."
^%ZVEMS("ZZ","DIQ",16)="    When call is made, naked reference must be at ^DD(File#,Fld#,0)."
^%ZVEMS("ZZ","DIQ",17)=""
^%ZVEMS("ZZ","DIQ",18)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIQ",19)="    Y.......Internal form of value being converted."
^%ZVEMS("ZZ","DIQ",20)="    C........2nd Piece of ^DD zero node. Following sets C and naked ref:"
^%ZVEMS("ZZ","DIQ",21)="             S C=$P(^DD(file#,fld#,0),U,2) D Y^DIQ"
^%ZVEMS("ZZ","DIQ",22)=""
^%ZVEMS("ZZ","DIQ",23)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIQ",24)="    Y........External form of value."
^%ZVEMS("ZZ","DIQ",25)=""
^%ZVEMS("ZZ","DIQ",26)=" 1. ENTRY POINT: D^DIQ"
^%ZVEMS("ZZ","DIQ",27)="    Converts internal date to external form. Same as DD^%DT."
^%ZVEMS("ZZ","DIQ",28)=""
^%ZVEMS("ZZ","DIQ",29)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIQ",30)="    Y.......Internal date."
^%ZVEMS("ZZ","DIQ",31)=""
^%ZVEMS("ZZ","DIQ",32)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIQ",33)="    Y.......External form of date/time."
^%ZVEMS("ZZ","DIQ",34)=""
^%ZVEMS("ZZ","DIQ",35)=" 1. ENTRY POINT: DT^DIQ"
^%ZVEMS("ZZ","DIQ",36)="    Converts date in Y exactly like D^DIQ. It also writes the date after"
^%ZVEMS("ZZ","DIQ",37)="    it's been converted. Input and output variables same as D^DIQ."
^%ZVEMS("ZZ","DIQ1",1)=" D I Q 1     Data Retrieval"
^%ZVEMS("ZZ","DIQ1",2)=""
^%ZVEMS("ZZ","DIQ1",3)=" 1. ENTRY POINT: EN^DIQ1"
^%ZVEMS("ZZ","DIQ1",4)="    KILL ^UTILITY(""DIQ1"",$J) before and after this call."
^%ZVEMS("ZZ","DIQ1",5)=""
^%ZVEMS("ZZ","DIQ1",6)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIQ1",7)="    DIC.....Global root or file number."
^%ZVEMS("ZZ","DIQ1",8)="    DR......Field numbers separated by semicolons. Use "":"" for range."
^%ZVEMS("ZZ","DIQ1",9)="            S DR="".01;1;10-15"""
^%ZVEMS("ZZ","DIQ1",10)="    DA......Internal number of entry."
^%ZVEMS("ZZ","DIQ1",11)="    DIQ.....Local array name where field values will be placed. If undefined"
^%ZVEMS("ZZ","DIQ1",12)="            values will be put in ^UTILITY(""DIQ1"",$J,. Array name should"
^%ZVEMS("ZZ","DIQ1",13)="            not begin with DI."
^%ZVEMS("ZZ","DIQ1",14)="    DIQ(0)..Optional. I=Internal value,E=External value,N=Don't return null."
^%ZVEMS("ZZ","DIQ1",15)=""
^%ZVEMS("ZZ","DIQ1",16)="    RETRIEVING FROM A SUBFILE"
^%ZVEMS("ZZ","DIQ1",17)="    DR(Subfile number) = List of fields in subfile."
^%ZVEMS("ZZ","DIQ1",18)="    DA(Subfile number) = Entry in subfile."
^%ZVEMS("ZZ","DIQ1",19)="    S DIC=16000,DR="".01;2"",DA=77,DR(16000.02)="".01;1"",DA(16000.02)=1 D EN^DIQ1"
^%ZVEMS("ZZ","DIQ1",20)=""
^%ZVEMS("ZZ","DIQ1",21)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIQ1",22)="    DIQ AND DIQ(0) UNDEFINED"
^%ZVEMS("ZZ","DIQ1",23)="       ^UTILITY(""DIQ1"",$J,file#,DA,fld#)=external value"
^%ZVEMS("ZZ","DIQ1",24)="    DIQ(0) DEFINED, DIQ UNDEFINED"
^%ZVEMS("ZZ","DIQ1",25)="       ^UTILITY(""DIQ1"",$J,file#,DA,fld#,""E"")=external value"
^%ZVEMS("ZZ","DIQ1",26)="       ^UTILITY(""DIQ1"",$J,file#,DA,fld#,""I"")=internal value"
^%ZVEMS("ZZ","DIQ1",27)="    DIQ DEFINED"
^%ZVEMS("ZZ","DIQ1",28)="       Output is similar but stored in specified local array."
^%ZVEMS("ZZ","DIQ1",29)="    WORD PROCESSING FIELD"
^%ZVEMS("ZZ","DIQ1",30)="       DIQ not defined - ^UTILITY(""DIQ1"",$J,file#,DA,fld#,1)"
^%ZVEMS("ZZ","DIQ1",31)="                         ^UTILITY(""DIQ1"",$J,file#,DA,fld#,2)"
^%ZVEMS("ZZ","DIQ1",32)="       DIQ defined  - Similar but stored in local array."
^%ZVEMS("ZZ","DIR",1)=" D I R     Reader"
^%ZVEMS("ZZ","DIR",2)=""
^%ZVEMS("ZZ","DIR",3)="  Refer to the VA Fileman Programmer's Manual."
^%ZVEMS("ZZ","DIS",1)=" D I S     Search File Entries"
^%ZVEMS("ZZ","DIS",2)=""
^%ZVEMS("ZZ","DIS",3)=" 1. ENTRY POINT: EN^DIS"
^%ZVEMS("ZZ","DIS",4)="    Calls the Search File Entries option of VA Fileman. Needs DT and DUZ."
^%ZVEMS("ZZ","DIS",5)=""
^%ZVEMS("ZZ","DIS",6)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIS",7)="    DIC.....Global root or file number."
^%ZVEMS("ZZ","DIU2",1)=" D I U 2     Data Dictionary Deletion"
^%ZVEMS("ZZ","DIU2",2)=""
^%ZVEMS("ZZ","DIU2",3)=" 1. ENTRY POINT: EN^DIU2"
^%ZVEMS("ZZ","DIU2",4)=""
^%ZVEMS("ZZ","DIU2",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIU2",6)="     DIU.....File number or global root. This must be a subfile number when"
^%ZVEMS("ZZ","DIU2",7)="             deleting a subfile's data dictionary."
^%ZVEMS("ZZ","DIU2",8)="     DIU(0)..D=Delete data as well as data dictionary"
^%ZVEMS("ZZ","DIU2",9)="             E=Echo back info during deletion"
^%ZVEMS("ZZ","DIU2",10)="             S=Subfile data dictionary is to be deleted"
^%ZVEMS("ZZ","DIU2",11)="             T=Templates are to be deleted"
^%ZVEMS("ZZ","DIU2",12)=""
^%ZVEMS("ZZ","DIU2",13)="     Example: S DIU=""^DIZ(16000.1,"",DIU(0)="""" D EN^DIU2"
^%ZVEMS("ZZ","DIU2",14)="              This will delete data dictionary. Data and templates remain."
^%ZVEMS("ZZ","DIU2",15)="              When deleting the dictionary for a subfile you must include"
^%ZVEMS("ZZ","DIU2",16)="              the S in DIU(0)."
^%ZVEMS("ZZ","DIU2",17)=""
^%ZVEMS("ZZ","DIU2",18)="     NOTE: If your file is in ^DIC(file#, the data will ALWAYS be deleted."
^%ZVEMS("ZZ","DIWE",1)=" D I W E     Edit Word Processing Text"
^%ZVEMS("ZZ","DIWE",2)=""
^%ZVEMS("ZZ","DIWE",3)=" 1. ENTRY POINT: ^DIWE"
^%ZVEMS("ZZ","DIWE",4)=""
^%ZVEMS("ZZ","DIWE",5)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIWE",6)="    DIC.....Global root."
^%ZVEMS("ZZ","DIWE",7)="    DWLW....Optional. Maximum number of characters stored on a word"
^%ZVEMS("ZZ","DIWE",8)="            processing node."
^%ZVEMS("ZZ","DIWE",9)="    DWPK....Optional."
^%ZVEMS("ZZ","DIWE",10)="            1 = If user enters lines shorter than DWLW, they will not"
^%ZVEMS("ZZ","DIWE",11)="                be joined. If lines are longer than DWLW, they will"
^%ZVEMS("ZZ","DIWE",12)="                be broken at word boundaries."
^%ZVEMS("ZZ","DIWE",13)="            2 = Lines shorter will be joined til they get to DWLW."
^%ZVEMS("ZZ","DIWE",14)="                If lines are longer they will broken at word boundaries."
^%ZVEMS("ZZ","DIWF",1)=" D I W F     Form Document Print"
^%ZVEMS("ZZ","DIWF",2)=""
^%ZVEMS("ZZ","DIWF",3)=" DIWF uses contents of a word processing field as a target document into which"
^%ZVEMS("ZZ","DIWF",4)=" data can be inserted at print time. The data may come from another file or be"
^%ZVEMS("ZZ","DIWF",5)=" provided by the user interactively when the document is printed. The word"
^%ZVEMS("ZZ","DIWF",6)=" processing text uses windows into which data from the target file gets"
^%ZVEMS("ZZ","DIWF",7)=" inserted by DIWF. Any nonmultiple field label or computed expression can be"
^%ZVEMS("ZZ","DIWF",8)=" used within a ""|"" window. If the expression can't be evaluated or the field"
^%ZVEMS("ZZ","DIWF",9)=" doesn't exist, and the output is being sent to a different terminal than"
^%ZVEMS("ZZ","DIWF",10)=" the one used to call up the output, then the user will be asked to type in"
^%ZVEMS("ZZ","DIWF",11)=" a value for the window, for each data entry printed."
^%ZVEMS("ZZ","DIWF",12)=""
^%ZVEMS("ZZ","DIWF",13)=" 1. ENTRY POINT: ^DIWF"
^%ZVEMS("ZZ","DIWF",14)="    Invoking DIWF at the top results in an interactive dialogue:"
^%ZVEMS("ZZ","DIWF",15)="         Select Document File: FORM LETTER"
^%ZVEMS("ZZ","DIWF",16)="         Select DOCUMENT: APPOINTMENT REMINDER"
^%ZVEMS("ZZ","DIWF",17)="         Print from what FILE: EMPLOYEE"
^%ZVEMS("ZZ","DIWF",18)="         WANT EACH ENTRY ON A SEPARATE PAGE? YES//"
^%ZVEMS("ZZ","DIWF",19)="         SORT BY: NAME// FOLLOWUP DATE=MAY 1, 1986"
^%ZVEMS("ZZ","DIWF",20)="         DEVICE:"
^%ZVEMS("ZZ","DIWF",21)="    In this example, the word processing text found in the APPOINTMENT"
^%ZVEMS("ZZ","DIWF",22)="    REMINDER entry of the FORM LETTER file is used to print a sheet of output"
^%ZVEMS("ZZ","DIWF",23)="    for each entry in the EMPLOYEE file whose FOLLOWUP DATE equals May 1,1986."
^%ZVEMS("ZZ","DIWF",24)=""
^%ZVEMS("ZZ","DIWF",25)="    If the document file contains a pointer field pointing to file #1, and if"
^%ZVEMS("ZZ","DIWF",26)="    the document entry selected has a value for that pointer, then the file"
^%ZVEMS("ZZ","DIWF",27)="    pointed to will be used to print from and the user will not be asked"
^%ZVEMS("ZZ","DIWF",28)="    ""Print from what FILE:""."
^%ZVEMS("ZZ","DIWF",29)="    NOTE: Read access is checked for both files selected."
^%ZVEMS("ZZ","DIWF",30)=""
^%ZVEMS("ZZ","DIWF",31)=" 1. ENTRY POINT: EN1^DIWF"
^%ZVEMS("ZZ","DIWF",32)="    This entry point is used when calling program knows which file contains"
^%ZVEMS("ZZ","DIWF",33)="    the desired word processing text to be used as a target document."
^%ZVEMS("ZZ","DIWF",34)=""
^%ZVEMS("ZZ","DIWF",35)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIWF",36)="    DIC......Global root or file number."
^%ZVEMS("ZZ","DIWF",37)=""
^%ZVEMS("ZZ","DIWF",38)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIWF",39)="    Y........-1 only if the DIC file doesn't contain a word processing field."
^%ZVEMS("ZZ","DIWF",40)=""
^%ZVEMS("ZZ","DIWF",41)=" 1. ENTRY POINT: EN2^DIWF"
^%ZVEMS("ZZ","DIWF",42)="    This entry point is used when calling program knows both the document file"
^%ZVEMS("ZZ","DIWF",43)="    and the entry within that file which contains the desired word processing"
^%ZVEMS("ZZ","DIWF",44)="    text to be used as a target document."
^%ZVEMS("ZZ","DIWF",45)=""
^%ZVEMS("ZZ","DIWF",46)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIWF",47)="    DIWF......Global root at which text is stored. Thus, if APPOINTMENT"
^%ZVEMS("ZZ","DIWF",48)="    REMINDER is the third document in the FORM LETTER file (^DIZ(16001,) and"
^%ZVEMS("ZZ","DIWF",49)="    the word processing field is stored in subscript 1, you can:"
^%ZVEMS("ZZ","DIWF",50)="         SET DIWF=""^DIZ(16001,3,1,"""
^%ZVEMS("ZZ","DIWF",51)="    DIWF(1)...If calling program wants to specifiy which file should be used"
^%ZVEMS("ZZ","DIWF",52)="    as a source for generating output, the number of the file should be in"
^%ZVEMS("ZZ","DIWF",53)="    DIWF(1). Otherwise, the user will be asked the ""Print from what FILE:"""
^%ZVEMS("ZZ","DIWF",54)="    question."
^%ZVEMS("ZZ","DIWF",55)=""
^%ZVEMS("ZZ","DIWF",56)="    After this point, EN1^DIP is invoked. The calling program can set the"
^%ZVEMS("ZZ","DIWF",57)="    usual BY, FR, and TO variables if it wants to control the SORT sequence."
^%ZVEMS("ZZ","DIWF",58)=""
^%ZVEMS("ZZ","DIWF",59)=" 3. OUTPUT VARIABLES"
^%ZVEMS("ZZ","DIWF",60)="    Y........Will be -1 if:"
^%ZVEMS("ZZ","DIWF",61)="                There is no data beneath the root passed in DIWF."
^%ZVEMS("ZZ","DIWF",62)="                The file passed in DIWF(1) could not be found."
^%ZVEMS("ZZ","DIWP",1)=" D I W P     Word Processing"
^%ZVEMS("ZZ","DIWP",2)=""
^%ZVEMS("ZZ","DIWP",3)=" 1. ENTRY POINT: ^DIWP"
^%ZVEMS("ZZ","DIWP",4)="    Before calling DIWP, kill global ^UTILITY($J,""W""). Then DIWP is invoked"
^%ZVEMS("ZZ","DIWP",5)="    for each text line."
^%ZVEMS("ZZ","DIWP",6)=""
^%ZVEMS("ZZ","DIWP",7)=" 2. INPUT VARIABLES"
^%ZVEMS("ZZ","DIWP",8)="    X.......The string of text to be added as input to the formatter. X may"
^%ZVEMS("ZZ","DIWP",9)="            contain |-windows. The expressions within the windows will be"
^%ZVEMS("ZZ","DIWP",10)="            processed as long as they DO NOT refer to database field names."
^%ZVEMS("ZZ","DIWP",11)="            Thus, |TODAY| will cause today's date to be inserted into the"
^%ZVEMS("ZZ","DIWP",12)="            formatted text."
^%ZVEMS("ZZ","DIWP",13)="    DIWL....Left margin."
^%ZVEMS("ZZ","DIWP",14)="    DIWR....Right margin"
^%ZVEMS("ZZ","DIWP",15)="    DIWF....A string of format control parameters:"
^%ZVEMS("ZZ","DIWP",16)="            W = The formatted text will be written out to the current device,"
^%ZVEMS("ZZ","DIWP",17)="                and will not be stored in ^UTILITY($J,""W"")."
^%ZVEMS("ZZ","DIWP",18)="            B = Followed by integer, n. The text will stop printing n lines"
^%ZVEMS("ZZ","DIWP",19)="                from the bottom of the page."
^%ZVEMS("ZZ","DIWP",20)="            C = Followed by integer, n. Column width. Overrides DIWR."
^%ZVEMS("ZZ","DIWP",21)="            D = Double spaced."
^%ZVEMS("ZZ","DIWP",22)="            I = Followed by integer, n. Indent n col from left margin (DIWL)."
^%ZVEMS("ZZ","DIWP",23)="            N = No-wrap. If DIWF contains N, DIWR will be ignored."
^%ZVEMS("ZZ","DIWP",24)="            R = Right justified."
^%ZVEMS("ZZ","DIWW",1)=" D I W W     Output Last Line of Text"
^%ZVEMS("ZZ","DIWW",2)=""
^%ZVEMS("ZZ","DIWW",3)=" 1. ENTRY POINT: ^DIWW"
^%ZVEMS("ZZ","DIWW",4)="    DIWW must be invoked after the last X string is input to DIWP. It allows"
^%ZVEMS("ZZ","DIWW",5)="    the final line of formatted text to be output."
^%ZVEMS("ZZ","INTRO",1)=" I N T R O D U C T I O N"
^%ZVEMS("ZZ","INTRO",2)=""
^%ZVEMS("ZZ","INTRO",3)=" I am making the VICTORY PROGRAMMER ENVIRONMENT (VPE) software package"
^%ZVEMS("ZZ","INTRO",4)=" available to M (Mumps) users under the following conditions:"
^%ZVEMS("ZZ","INTRO",5)=" o  VPE may be distributed freely without charge."
^%ZVEMS("ZZ","INTRO",6)=" o  VPE may not be sold, licensed, or a fee charged for its use."
^%ZVEMS("ZZ","INTRO",7)=" o  Any other use, distribution, or representation of VPE is expressly"
^%ZVEMS("ZZ","INTRO",8)="    forbidden without the written consent of David J. Bolduc."
^%ZVEMS("ZZ","INTRO",9)=" DAVID J. BOLDUC"
^%ZVEMS("ZZ","INTRO",10)=""
^%ZVEMS("ZZ","INTRO",11)=" Welcome to the VPE VShell. This M Shell is designed for people who work in"
^%ZVEMS("ZZ","INTRO",12)=" programmer mode. It will provide an environment that is safer than normal"
^%ZVEMS("ZZ","INTRO",13)=" programmer mode, and will help you organize your work and reduce the"
^%ZVEMS("ZZ","INTRO",14)=" keystrokes required to accomplish your tasks."
^%ZVEMS("ZZ","INTRO",15)=""
^%ZVEMS("ZZ","INTRO",16)=" You enter the VShell with the command 'X ^%ZVEMS'. You exit by entering any"
^%ZVEMS("ZZ","INTRO",17)=" of the following: '^,H,h,HALT,halt'."
^%ZVEMS("ZZ","INTRO",18)=""
^%ZVEMS("ZZ","INTRO",19)=" To allow you to distinguish between the VShell and normal programmer mode,"
^%ZVEMS("ZZ","INTRO",20)=" the "">"" prompt is replaced with "">>""."
^%ZVEMS("ZZ","INTRO",21)=" >X ^%ZVEMS"
^%ZVEMS("ZZ","INTRO",22)=" >>"
^%ZVEMS("ZZ","INTRO",23)=""
^%ZVEMS("ZZ","INTRO",24)=" When you first enter the VShell you'll be asked for an ID number. This number"
^%ZVEMS("ZZ","INTRO",25)=" will be your permanent identification number. Any QWIK commands you develop"
^%ZVEMS("ZZ","INTRO",26)=" will be stored using this number. If you enter the VShell with an incorrect"
^%ZVEMS("ZZ","INTRO",27)=" ID number, you will not have access to your QWIKs."
^%ZVEMS("ZZ","INTRO",28)=""
^%ZVEMS("ZZ","INTRO",29)=" If you enter the VShell from a UCI that contains the VA KERNEL routine ^XUP,"
^%ZVEMS("ZZ","INTRO",30)=" your ID will be saved with your DUZ and you won't have to enter it again."
^%ZVEMS("ZZ","INTRO",31)=" If you enter from a UCI that doesn't contain ^XUP, your ID won't be stored"
^%ZVEMS("ZZ","INTRO",32)=" and you will need to enter it each time."
^%ZVEMS("ZZ","INTRO",33)=""
^%ZVEMS("ZZ","INTRO",34)=" ** THINGS TO GET USED TO **"
^%ZVEMS("ZZ","INTRO",35)=""
^%ZVEMS("ZZ","INTRO",36)=" Different M systems handle the user partition differently. Some systems note"
^%ZVEMS("ZZ","INTRO",37)=" the routine that is in the partition, execute your code, and then restore the"
^%ZVEMS("ZZ","INTRO",38)=" routine to your partition. Because of this, you cannot ZLoad a routine and"
^%ZVEMS("ZZ","INTRO",39)=" call your editor on one line, and then ZSave it on another line. It may no"
^%ZVEMS("ZZ","INTRO",40)=" longer be in the partition. When doing things of this nature, all steps must"
^%ZVEMS("ZZ","INTRO",41)=" be placed on ONE line of code."
^%ZVEMS("ZZ","INTRO",42)=""
^%ZVEMS("ZZ","INTRO",43)=" Ex: ZL ROUTINE X ^% ZS   <-- All steps on one line of code."
^%ZVEMS("ZZ","INTRO",44)=""
^%ZVEMS("ZZ","INTRO",45)=" You can have similar problems if you try to enter lines of code at the '>>'"
^%ZVEMS("ZZ","INTRO",46)=" prompt to make a new routine. A System QWIK called RTN is provided for"
^%ZVEMS("ZZ","INTRO",47)=" starting a new routine. See SYSTEM QWIK help text."
^%ZVEMS("ZZ","INTRO",48)=""
^%ZVEMS("ZZ","INTRO",49)=" Any questions you may have concerning VPE may be directed to:"
^%ZVEMS("ZZ","INTRO",50)="       BOLDUC,DAVID@FORUM.VA.GOV"
^%ZVEMS("ZZ","KERN",1)=" V A   K E R N E L"
^%ZVEMS("ZZ","KERN",2)=""
^%ZVEMS("ZZ","KERN",3)=" The following information applies to those users who wish to run the VSHELL"
^%ZVEMS("ZZ","KERN",4)=" as a VA KERNEL menu option."
^%ZVEMS("ZZ","KERN",5)=""
^%ZVEMS("ZZ","KERN",6)=" You create the VSHELL option as an Action type: X ^%ZVEMS. The name of the"
^%ZVEMS("ZZ","KERN",7)=" option MUST include the word 'VSHELL'. This is important. If the name doesn't"
^%ZVEMS("ZZ","KERN",8)=" include 'VSHELL' it will not run. The purpose for this naming convention is"
^%ZVEMS("ZZ","KERN",9)=" to enable the VSHELL to know when it's being called as a VA KERNEL menu"
^%ZVEMS("ZZ","KERN",10)=" option."
^%ZVEMS("ZZ","KERN",11)=""
^%ZVEMS("ZZ","KERN",12)=" The VSHELL sets a flag when it starts running. This flag prevents you from"
^%ZVEMS("ZZ","KERN",13)=" starting a 2nd VSHELL. If you try to run the VSHELL menu option and get a"
^%ZVEMS("ZZ","KERN",14)=" message saying ""The VSHELL is already running"", and you are not running"
^%ZVEMS("ZZ","KERN",15)=" the VSHELL already, it's because this flag has not been cleared. You can"
^%ZVEMS("ZZ","KERN",16)=" clear the flag 2 ways."
^%ZVEMS("ZZ","KERN",17)="     1. Log off the system and log back on with a new $J."
^%ZVEMS("ZZ","KERN",18)="     2. Enter Programmer Mode, kill XQY0, start the VSHELL and then HALT."
^%ZVEMS("ZZ","KERN",19)="        This will delete the VSHELL's scratch global, clearing the flag. You"
^%ZVEMS("ZZ","KERN",20)="        can now DO ^ZU to reenter the VA KERNEL menu system and run the VSHELL"
^%ZVEMS("ZZ","KERN",21)="        option."
^%ZVEMS("ZZ","KERN",22)=""
^%ZVEMS("ZZ","KERN",23)=" If you enter the VSHELL from a VA KERNEL menu option, switch UCIs, and then"
^%ZVEMS("ZZ","KERN",24)=" try to HALT, you will receive a message telling you to move back to the UCI"
^%ZVEMS("ZZ","KERN",25)=" you first came in from, and then you can HALT."
^%ZVEMS("ZZ","KERN",26)=""
^%ZVEMS("ZZ","KERN",27)=" NOTE: If you run a VA KERNEL menu option using ^XUP while in the VSHELL, you"
^%ZVEMS("ZZ","KERN",28)=" may be halted from the system upon return. This is NOT caused by the VSHELL,"
^%ZVEMS("ZZ","KERN",29)=" but is a factor of the VA KERNEL software."
^%ZVEMS("ZZ","KEYS",1)=" K E Y B O A R D"
^%ZVEMS("ZZ","KEYS",2)=""
^%ZVEMS("ZZ","KEYS",3)=" There are certain Key combinations used throughout the VShell. To enter them"
^%ZVEMS("ZZ","KEYS",4)=" correctly, hit the first key, release it, then hit the second key."
^%ZVEMS("ZZ","KEYS",5)=" Example: <ESC>H. Hit the <ESC> key and release it. Then hit the H key."
^%ZVEMS("ZZ","KEYS",6)=""
^%ZVEMS("ZZ","KEYS",7)=" <ESC><ESC>  This combination normally allows you to Quit back to the "">>"""
^%ZVEMS("ZZ","KEYS",8)="             prompt."
^%ZVEMS("ZZ","KEYS",9)=" <ESC>H      This will bring up any Help text."
^%ZVEMS("ZZ","KEYS",10)=" <ESC>Q      When you've selected a command from the Command Line History,"
^%ZVEMS("ZZ","KEYS",11)="             you may hit <ESC>Q if you wish to convert the command to a User"
^%ZVEMS("ZZ","KEYS",12)="             QWIK."
^%ZVEMS("ZZ","KEYS",13)=" <ESC>U      When you're editing a QWIK and are at the CODE: prompt, you can"
^%ZVEMS("ZZ","KEYS",14)="             hit <ESC>U to UNsave code that was SAved in either the VPE"
^%ZVEMS("ZZ","KEYS",15)="             routine or global editors."
^%ZVEMS("ZZ","KEYS",16)=""
^%ZVEMS("ZZ","KEYS",17)=" Certain keys act differently depending on where you are in the VShell."
^%ZVEMS("ZZ","KEYS",18)=""
^%ZVEMS("ZZ","KEYS",19)=" -->  A R R O W   K E Y S"
^%ZVEMS("ZZ","KEYS",20)=""
^%ZVEMS("ZZ","KEYS",21)=" Module:  VShell    VGL                     VRR                VEDD"
^%ZVEMS("ZZ","KEYS",22)=" Prompt:  >>       Session 1...Global ^    Select ROUTINE:    Select FILE:"
^%ZVEMS("ZZ","KEYS",23)=" When you are at the above prompts, if you haven't typed any characters:"
^%ZVEMS("ZZ","KEYS",24)="    Left Arrow...Display last 20 commands of Command Line History (CLH)"
^%ZVEMS("ZZ","KEYS",25)="    Up Arrow.....Move up 1 command in the CLH"
^%ZVEMS("ZZ","KEYS",26)="    Down Arrow...Move down 1 command in the CLH"
^%ZVEMS("ZZ","KEYS",27)=" If you have typed any characters, the arrow keys are used to position the"
^%ZVEMS("ZZ","KEYS",28)=" cursor for editing."
^%ZVEMS("ZZ","KEYS",29)=""
^%ZVEMS("ZZ","KEYS",30)=" When moving up and down the CLH, if the cursor is not moved from its position"
^%ZVEMS("ZZ","KEYS",31)=" at the end of the command line, Up & Down Arrow will move you to the next"
^%ZVEMS("ZZ","KEYS",32)=" command. If the cursor is moved and is no longer at the end of the command"
^%ZVEMS("ZZ","KEYS",33)=" line, Up & Down Arrow will move you up and down the lines of the command"
^%ZVEMS("ZZ","KEYS",34)=" itself, if the command has more than one line. Once you've moved the cursor,"
^%ZVEMS("ZZ","KEYS",35)=" if you want the next command in CLH, you reposition the cursor to the end of"
^%ZVEMS("ZZ","KEYS",36)=" the command line (Use <F1><AR> key combination)."
^%ZVEMS("ZZ","KEYS",37)=""
^%ZVEMS("ZZ","KEYS",38)=" -->  F   K E Y S"
^%ZVEMS("ZZ","KEYS",39)=""
^%ZVEMS("ZZ","KEYS",40)=" When you are at the VShell prompt "">>"", and you have not typed any characters:"
^%ZVEMS("ZZ","KEYS",41)="   <F1>1  List User QWIK Commands with Description"
^%ZVEMS("ZZ","KEYS",42)="   <F1>2  List User QWIK Commands with Code"
^%ZVEMS("ZZ","KEYS",43)="   <F1>3  List System QWIK Commands with Description"
^%ZVEMS("ZZ","KEYS",44)="   <F1>4  List System QWIK Commands with Code"
^%ZVEMS("ZZ","KEYS",45)=""
^%ZVEMS("ZZ","KEYS",46)=" When you are using the CLH editor:"
^%ZVEMS("ZZ","KEYS",47)="   <F1><AL>  Moves cursor to beginning of line"
^%ZVEMS("ZZ","KEYS",48)="   <F1><AR>  Moves cursor to end of line"
^%ZVEMS("ZZ","KEYS",49)="   <F2><AL>  Moves cursor left 15 characters"
^%ZVEMS("ZZ","KEYS",50)="   <F2><AR>  Moves cursor right 15 characters"
^%ZVEMS("ZZ","KEYS",51)=""
^%ZVEMS("ZZ","KEYS",52)=" NOTE: On VT-100 keyboards substitute the PF1,PF2 keys."
^%ZVEMS("ZZ","KEYS",53)=""
^%ZVEMS("ZZ","KEYS",54)=" -->  T A B   K E Y"
^%ZVEMS("ZZ","KEYS",55)=""
^%ZVEMS("ZZ","KEYS",56)=" When you are at the VShell prompt "">>"", and you have not typed any characters:"
^%ZVEMS("ZZ","KEYS",57)="   <TAB>  Allows you to enter/edit User QWIKs"
^%ZVEMS("ZZ","KEYS",58)=""
^%ZVEMS("ZZ","KEYS",59)=" When using the CLH editor:"
^%ZVEMS("ZZ","KEYS",60)="   <TAB>  Can be used to exit"
^%ZVEMS("ZZ","LIBRARY",137)=" INTRODUCTION"
^%ZVEMS("ZZ","LIBRARY",138)=" ------------"
^%ZVEMS("ZZ","LIBRARY",139)=""
^%ZVEMS("ZZ","LIBRARY",140)=" VPE's Library & Versioning modules work in concert with the routine"
^%ZVEMS("ZZ","LIBRARY",141)=" editor (..E). They are activated with the ..LBRY System QWIK as follows:"
^%ZVEMS("ZZ","LIBRARY",142)=""
^%ZVEMS("ZZ","LIBRARY",143)="     ..LBRY        Displays the Library/Versioning menu."
^%ZVEMS("ZZ","LIBRARY",144)="     ..LBRY ON     Activates both modules."
^%ZVEMS("ZZ","LIBRARY",145)="     ..LBRY OFF    Inactivates both modules."
^%ZVEMS("ZZ","LIBRARY",146)="     ..LBRY ON L   Activates Library only."
^%ZVEMS("ZZ","LIBRARY",147)="     ..LBRY ON V   Activates Versioning only."
^%ZVEMS("ZZ","LIBRARY",148)=""
^%ZVEMS("ZZ","LIBRARY",149)=" This sets the following nodes:"
^%ZVEMS("ZZ","LIBRARY",150)="     ^VEE(19200.11,""A-ACTIVE"") = ""ON/OFF"" (Library)"
^%ZVEMS("ZZ","LIBRARY",151)="     ^VEE(19200.112,""A-ACTIVE"")= ""ON/OFF"" (Version)"
^%ZVEMS("ZZ","LIBRARY",152)=""
^%ZVEMS("ZZ","LIBRARY",153)=" Note: If Library is active and Versioning inactive and you want to"
^%ZVEMS("ZZ","LIBRARY",154)="       reverse this, first do ..LBRY OFF to inactivate Library and then"
^%ZVEMS("ZZ","LIBRARY",155)="       do ..LBRY ON V to activate Versioning."
^%ZVEMS("ZZ","LIBRARY",156)=""
^%ZVEMS("ZZ","LIBRARY",157)=" SETUP"
^%ZVEMS("ZZ","LIBRARY",158)=" -----"
^%ZVEMS("ZZ","LIBRARY",159)=""
^%ZVEMS("ZZ","LIBRARY",160)=" Files used:"
^%ZVEMS("ZZ","LIBRARY",161)=""
^%ZVEMS("ZZ","LIBRARY",162)="      VPE PERSON.......^VEE(19200.111)"
^%ZVEMS("ZZ","LIBRARY",163)="             Name"
^%ZVEMS("ZZ","LIBRARY",164)="             Identifier"
^%ZVEMS("ZZ","LIBRARY",165)="             VPE ID"
^%ZVEMS("ZZ","LIBRARY",166)="             Routine Versioning Prompt"
^%ZVEMS("ZZ","LIBRARY",167)=""
^%ZVEMS("ZZ","LIBRARY",168)="      VPE RTN LBRY..............^VEE(19200.11)"
^%ZVEMS("ZZ","LIBRARY",169)="             Name"
^%ZVEMS("ZZ","LIBRARY",170)="             Identifier"
^%ZVEMS("ZZ","LIBRARY",171)="             Date Signed Out"
^%ZVEMS("ZZ","LIBRARY",172)="             Signed Out By (Pointer to 19200.111)"
^%ZVEMS("ZZ","LIBRARY",173)=""
^%ZVEMS("ZZ","LIBRARY",174)="      VPE RTN VERSIONING...^VEE(19200.112)"
^%ZVEMS("ZZ","LIBRARY",175)="             Routine"
^%ZVEMS("ZZ","LIBRARY",176)="             Version"
^%ZVEMS("ZZ","LIBRARY",177)="             Description"
^%ZVEMS("ZZ","LIBRARY",178)="             Date"
^%ZVEMS("ZZ","LIBRARY",179)="             Text"
^%ZVEMS("ZZ","LIBRARY",180)=""
^%ZVEMS("ZZ","LIBRARY",181)=" Move to your production account and restore file VPE_x.PRD. This will load"
^%ZVEMS("ZZ","LIBRARY",182)=" FM Init routines ^VEEMI*. Next, DO ^VEEMINIT to install the files listed"
^%ZVEMS("ZZ","LIBRARY",183)=" above. Edit file VPE PERSON. This file should contain the names of all"
^%ZVEMS("ZZ","LIBRARY",184)=" your programmers. It IS NOT a pointer to the NEW PERSON file. It also"
^%ZVEMS("ZZ","LIBRARY",185)=" contains each person's VPE ID number, which you can find by looking at"
^%ZVEMS("ZZ","LIBRARY",186)=" variable VEE(""ID"") at the "">>"" prompt when you're logged into the VPE"
^%ZVEMS("ZZ","LIBRARY",187)=" programmer shell. For this to work correctly, these files should be"
^%ZVEMS("ZZ","LIBRARY",188)=" translated so they are available in multiple UCI's."
^%ZVEMS("ZZ","LIBRARY",189)=""
^%ZVEMS("ZZ","LIBRARY",190)=" R O U T I N E   L I B R A R Y"
^%ZVEMS("ZZ","LIBRARY",191)=" -----------------------------"
^%ZVEMS("ZZ","LIBRARY",192)=""
^%ZVEMS("ZZ","LIBRARY",193)=" The Library's purpose is to help prevent routines from being accidentily"
^%ZVEMS("ZZ","LIBRARY",194)=" overwritten when there are multiple programmers working on the same routines."
^%ZVEMS("ZZ","LIBRARY",195)=""
^%ZVEMS("ZZ","LIBRARY",196)=" The premise is that programmers can 'sign out' routines they will be working"
^%ZVEMS("ZZ","LIBRARY",197)=" on. If another programmer attempts to edit a signed out routine using VPE's"
^%ZVEMS("ZZ","LIBRARY",198)=" routine editor, a message is displayed warning that the routine has been "
^%ZVEMS("ZZ","LIBRARY",199)=" signed out. The programmer should then check with the person who signed out"
^%ZVEMS("ZZ","LIBRARY",200)=" the routine, before continuing."
^%ZVEMS("ZZ","LIBRARY",201)=""
^%ZVEMS("ZZ","LIBRARY",202)=" This IS NOT a database that tracks revisions to routines. It is a database"
^%ZVEMS("ZZ","LIBRARY",203)=" of the names of all routines currently signed out. Once the routines are"
^%ZVEMS("ZZ","LIBRARY",204)=" signed back in, they are dropped from the database."
^%ZVEMS("ZZ","LIBRARY",205)=""
^%ZVEMS("ZZ","LIBRARY",206)=" System QWIC ..LBRY is the main menu for signing routines in & out of the"
^%ZVEMS("ZZ","LIBRARY",207)=" Library. The VPE routine editor (..E) also interacts with the Library."
^%ZVEMS("ZZ","LIBRARY",208)=""
^%ZVEMS("ZZ","LIBRARY",209)=" Routine Editor (..E):"
^%ZVEMS("ZZ","LIBRARY",210)=""
^%ZVEMS("ZZ","LIBRARY",211)="    a. When you enter the editor, you will receive a warning message IF"
^%ZVEMS("ZZ","LIBRARY",212)="       the routine you are editing has been signed out by someone else."
^%ZVEMS("ZZ","LIBRARY",213)="       The same will happen if you BRANCH to another routine."
^%ZVEMS("ZZ","LIBRARY",214)=""
^%ZVEMS("ZZ","LIBRARY",215)="    b. When you leave the editor, IF the routine you were editing hasn't"
^%ZVEMS("ZZ","LIBRARY",216)="       been signed out and you hit SAVE to save any changes, you will be"
^%ZVEMS("ZZ","LIBRARY",217)="       asked if you want to sign out the routine."
^%ZVEMS("ZZ","LIBRARY",218)=""
^%ZVEMS("ZZ","LIBRARY",219)=" NOTE: The menu option ""Sign In Routines"" uses VPE's 'Selector' software."
^%ZVEMS("ZZ","LIBRARY",220)=" You select the routines you want to sign in, by positioning the cursor"
^%ZVEMS("ZZ","LIBRARY",221)=" and hitting <SPACE BAR>. ""=>"" Will appear next to selected items. Hit"
^%ZVEMS("ZZ","LIBRARY",222)=" <SPACE BAR> again to de-select an item."
^%ZVEMS("ZZ","LIBRARY",223)=""
^%ZVEMS("ZZ","LIBRARY",224)=" R O U T I N E   V E R S I O N I N G"
^%ZVEMS("ZZ","LIBRARY",225)=" -----------------------------------"
^%ZVEMS("ZZ","LIBRARY",226)=""
^%ZVEMS("ZZ","LIBRARY",227)=" As a routine is edited and the changes saved, the versioning module stores"
^%ZVEMS("ZZ","LIBRARY",228)=" the routine's code, by version number. A programmer can, at any time,"
^%ZVEMS("ZZ","LIBRARY",229)=" restore any version of the routine, making it the active version."
^%ZVEMS("ZZ","LIBRARY",230)=""
^%ZVEMS("ZZ","LIBRARY",231)=" System QWIK ..LBRY is the main menu for viewing and restoring different"
^%ZVEMS("ZZ","LIBRARY",232)=" versions of a routine. The VPE routine editor (..E) contains the prompts"
^%ZVEMS("ZZ","LIBRARY",233)=" that allow a programmer to create the different versions."
^%ZVEMS("ZZ","LIBRARY",234)=""
^%ZVEMS("ZZ","LIBRARY",235)=" Routine Editor (..E):"
^%ZVEMS("ZZ","LIBRARY",236)=""
^%ZVEMS("ZZ","LIBRARY",237)="    a. When you leave the editor, if you choose SAVE to save any changes,"
^%ZVEMS("ZZ","LIBRARY",238)="       you will be asked if you want to store a version of the routine."
^%ZVEMS("ZZ","LIBRARY",239)="       You may create a new version or update an existing version."
^%ZVEMS("ZZ","LIBRARY",240)=""
^%ZVEMS("ZZ","LIBRARY",241)="    b. Filling in the DESCRIPTION field will aid you in selecting the"
^%ZVEMS("ZZ","LIBRARY",242)="       correct routine to restore."
^%ZVEMS("ZZ","MATH",1)=" MATH FUNCTIONS - XLFMTH"
^%ZVEMS("ZZ","MATH",2)=""
^%ZVEMS("ZZ","MATH",3)=" ABS(%X).......Absolute Value"
^%ZVEMS("ZZ","MATH",4)="      Returns absolute value of the number in %X."
^%ZVEMS("ZZ","MATH",5)=""
^%ZVEMS("ZZ","MATH",6)=" MIN(%1,%2)....Minimum"
^%ZVEMS("ZZ","MATH",7)="      Returns minimum value between numbers in %1 and %2."
^%ZVEMS("ZZ","MATH",8)=""
^%ZVEMS("ZZ","MATH",9)=" MAX(%1,%2)....Maximum"
^%ZVEMS("ZZ","MATH",10)="      Returns maximum value between numbers in %1 and %2."
^%ZVEMS("ZZ","MATH",11)=""
^%ZVEMS("ZZ","MATH",12)=" LN(%X)........Natural Log"
^%ZVEMS("ZZ","MATH",13)="      Returns natural log of %X (log base e)."
^%ZVEMS("ZZ","MATH",14)="      Ex: W $$LN^XLFMTH(4.627426)  --> 1.532"
^%ZVEMS("ZZ","MATH",15)=""
^%ZVEMS("ZZ","MATH",16)=" EXP(%X).......Exponents"
^%ZVEMS("ZZ","MATH",17)="      Return e to the %X power."
^%ZVEMS("ZZ","MATH",18)="      Ex: W $$EXP^XLFMTH(1.532)  --> 4.627426"
^%ZVEMS("ZZ","MATH",19)=""
^%ZVEMS("ZZ","MATH",20)=" PWR(%X,%Y)....Power"
^%ZVEMS("ZZ","MATH",21)="      Raise %X to the %Y power."
^%ZVEMS("ZZ","MATH",22)="      Ex: W $$PWR^XLFMTH(3,2)   --> 9"
^%ZVEMS("ZZ","MATH",23)=""
^%ZVEMS("ZZ","MATH",24)=" LOG(%X).......Log"
^%ZVEMS("ZZ","MATH",25)="      Calculate logarithm (log base 10)."
^%ZVEMS("ZZ","MATH",26)="      Ex: W $$LOG^XLFMTH(3.1415  --> .497137"
^%ZVEMS("ZZ","MATH",27)=""
^%ZVEMS("ZZ","MATH",28)=" TAN(%X).......Tangent"
^%ZVEMS("ZZ","MATH",29)="      Calculate tangent of %X (tan X = sin X / cos X) in radians."
^%ZVEMS("ZZ","MATH",30)="      Ex: W $$TAN^XLFMTH(.7853982)  --> 1.000"
^%ZVEMS("ZZ","MATH",31)=""
^%ZVEMS("ZZ","MATH",32)=" SIN(%X).......Sine"
^%ZVEMS("ZZ","MATH",33)="      Calculate sine of %X in radians."
^%ZVEMS("ZZ","MATH",34)="      Ex: W $$SIN^XLFMTH(.7853982)  --> .707107"
^%ZVEMS("ZZ","MATH",35)=""
^%ZVEMS("ZZ","MATH",36)=" COS(%X).......Cosine"
^%ZVEMS("ZZ","MATH",37)="      Calculate cosine of %X in radians."
^%ZVEMS("ZZ","MATH",38)="      Ex: W $$COS^XLFMTH(.7853982)  --> .707096"
^%ZVEMS("ZZ","MATH",39)=""
^%ZVEMS("ZZ","MATH",40)=" DTR(%X)......Degrees to Radians"
^%ZVEMS("ZZ","MATH",41)="      Convert numbers of degrees to number of radians."
^%ZVEMS("ZZ","MATH",42)="      Ex: W $$DTR^XLFMTH(45)  --> .7853982"
^%ZVEMS("ZZ","MATH",43)=""
^%ZVEMS("ZZ","MATH",44)=" RTD(%X)......Radians to Degrees"
^%ZVEMS("ZZ","MATH",45)="      Convert number of radians to number of degrees."
^%ZVEMS("ZZ","MATH",46)=""
^%ZVEMS("ZZ","MATH",47)=" PI().........PI=3.1415927"
^%ZVEMS("ZZ","MATH",48)="      Returns Pi."
^%ZVEMS("ZZ","MATH",49)=""
^%ZVEMS("ZZ","MATH",50)=" E()..........e=2.718283"
^%ZVEMS("ZZ","MATH",51)="      Returns e."
^%ZVEMS("ZZ","MATH",52)=""
^%ZVEMS("ZZ","MATH",53)=" SQRT(%X).....Square Root"
^%ZVEMS("ZZ","MATH",54)="      Returns square root of %X."
^%ZVEMS("ZZ","MATH",55)="      Ex: W $$SQRT^XLFMTH(144)  --> 12"
^%ZVEMS("ZZ","MATH",56)=""
^%ZVEMS("ZZ","MATH",57)=" SD...........Standard Deviation"
^%ZVEMS("ZZ","MATH",58)="      Only available as a call: D SD^XTFN with input variables of"
^%ZVEMS("ZZ","MATH",59)="      SX=sum, SSX=sum of squares, and N=count. Standard deviation"
^%ZVEMS("ZZ","MATH",60)="      is returned in SD."
^%ZVEMS("ZZ","MEAS",1)=" MEASUREMENT FUNCTIONS - XLFMSMT"
^%ZVEMS("ZZ","MEAS",2)=""
^%ZVEMS("ZZ","MEAS",3)=" WEIGHT(val,from,to).......Weight Measurement"
^%ZVEMS("ZZ","MEAS",4)="      Converts metric to U.S. and visa versa."
^%ZVEMS("ZZ","MEAS",5)=""
^%ZVEMS("ZZ","MEAS",6)="       val = must contain a positive numeric value"
^%ZVEMS("ZZ","MEAS",7)="      from = units of measure of val"
^%ZVEMS("ZZ","MEAS",8)="        to = units of measure to convert val to"
^%ZVEMS("ZZ","MEAS",9)=""
^%ZVEMS("ZZ","MEAS",10)="      Ex: W $$WEIGHT(12,""LB"",""G"")  --> 5448 G"
^%ZVEMS("ZZ","MEAS",11)=""
^%ZVEMS("ZZ","MEAS",12)="    Valid units:"
^%ZVEMS("ZZ","MEAS",13)="       t = metric tons          tn = tons"
^%ZVEMS("ZZ","MEAS",14)="      kg = kilograms            lb = pounds"
^%ZVEMS("ZZ","MEAS",15)="       g = grams                oz = ounces"
^%ZVEMS("ZZ","MEAS",16)="      mg = milligrams           gr = grain"
^%ZVEMS("ZZ","MEAS",17)=""
^%ZVEMS("ZZ","MEAS",18)=" LENGTH(val,from,to).......Length Measurement"
^%ZVEMS("ZZ","MEAS",19)=""
^%ZVEMS("ZZ","MEAS",20)="      Ex: W $$LENGTH(12,""IN"",""CM"")  --> 30.480 CM"
^%ZVEMS("ZZ","MEAS",21)=""
^%ZVEMS("ZZ","MEAS",22)="    Valid units:"
^%ZVEMS("ZZ","MEAS",23)="       km = kilometers          mi = miles"
^%ZVEMS("ZZ","MEAS",24)="        m = meters              yd = yards"
^%ZVEMS("ZZ","MEAS",25)="       cm = centimeters         ft = feet"
^%ZVEMS("ZZ","MEAS",26)="       mm = millmeters          in = inches"
^%ZVEMS("ZZ","MEAS",27)=""
^%ZVEMS("ZZ","MEAS",28)=" VOLUME(val,from,to).......Weight Measurement"
^%ZVEMS("ZZ","MEAS",29)=""
^%ZVEMS("ZZ","MEAS",30)="      Ex: W $$VOLUME(12,""CF"",""ML"")  --> 339800.832 ML"
^%ZVEMS("ZZ","MEAS",31)=""
^%ZVEMS("ZZ","MEAS",32)="    Valid units:"
^%ZVEMS("ZZ","MEAS",33)="       kl = kiloliter           cf = cubic feet"
^%ZVEMS("ZZ","MEAS",34)="       hl = hectoliter          ci = cubic inch"
^%ZVEMS("ZZ","MEAS",35)="      dal = dekaliter          gal = gallon"
^%ZVEMS("ZZ","MEAS",36)="        l = liters              qt = quart"
^%ZVEMS("ZZ","MEAS",37)="       dl = deciliter           pt = pint"
^%ZVEMS("ZZ","MEAS",38)="       cl = centiliter           c = cup"
^%ZVEMS("ZZ","MEAS",39)="       ml = milliliter          oz = ounze"
^%ZVEMS("ZZ","MEAS",40)=""
^%ZVEMS("ZZ","MEAS",41)=" BSA(ht,wt).......Body Surface Area Measurement"
^%ZVEMS("ZZ","MEAS",42)=""
^%ZVEMS("ZZ","MEAS",43)="       ht = height in centimeters"
^%ZVEMS("ZZ","MEAS",44)="       wt = weight in kilograms"
^%ZVEMS("ZZ","MEAS",45)=""
^%ZVEMS("ZZ","MEAS",46)="      Ex: W $$BSA^XLFMSMT(175,86)  --> 1.63"
^%ZVEMS("ZZ","MEAS",47)="      Ex: W $$BSA($$LENGTH^XLFMSMT(69,""IN"",""CM""),$$WEIGHT^XLFMSMT(180,""LB"",..."
^%ZVEMS("ZZ","MEAS",48)="          ""KG""))  --> 1.57"
^%ZVEMS("ZZ","MEAS",49)=""
^%ZVEMS("ZZ","MEAS",50)=" TEMP(val,from,to).......Temperature Measurement"
^%ZVEMS("ZZ","MEAS",51)=""
^%ZVEMS("ZZ","MEAS",52)="      Ex: W $$TEMP^XLFMSMT(72,""F"",""C"")  --> 22.222 C"
^%ZVEMS("ZZ","MEAS",53)=""
^%ZVEMS("ZZ","MEAS",54)="    Valid units:"
^%ZVEMS("ZZ","MEAS",55)="       f = Fahrenheit           c = Celsius"
^%ZVEMS("ZZ","MISC",1)=" M I S C E L L A N E O U S"
^%ZVEMS("ZZ","MISC",2)=""
^%ZVEMS("ZZ","MISC",3)=" S H E L L   P A R A M E T E R S"
^%ZVEMS("ZZ","MISC",4)=""
^%ZVEMS("ZZ","MISC",5)=" There are a few VShell parameters which you can adjust to meet your needs by"
^%ZVEMS("ZZ","MISC",6)=" running the PARAM System QWIK. Type ..PARAM at the '>>' prompt. The following"
^%ZVEMS("ZZ","MISC",7)=" parameters can be set:"
^%ZVEMS("ZZ","MISC",8)=""
^%ZVEMS("ZZ","MISC",9)="   Global Kill: NO/YES"
^%ZVEMS("ZZ","MISC",10)="                If you enter code at the '>>' prompt that is killing a"
^%ZVEMS("ZZ","MISC",11)="                global, you will be warned and asked if you want the code"
^%ZVEMS("ZZ","MISC",12)="                executed. The default answer to that question is setable here."
^%ZVEMS("ZZ","MISC",13)=""
^%ZVEMS("ZZ","MISC",14)="   Prompt: ACTIVE/INACTIVE"
^%ZVEMS("ZZ","MISC",15)="                If Prompt is set to INACTIVE, the VShell's prompt will be"
^%ZVEMS("ZZ","MISC",16)="                '>>'. If Prompt is ACTIVE, the VShell's prompt will include"
^%ZVEMS("ZZ","MISC",17)="                UCI and Volume Set. Example: VAH,ROU>>"
^%ZVEMS("ZZ","MISC",18)=""
^%ZVEMS("ZZ","MISC",19)="   Time-out: SECONDS"
^%ZVEMS("ZZ","MISC",20)="                You can set the length of time before the VShell times out"
^%ZVEMS("ZZ","MISC",21)="                from inactivity. Enter the time out length in seconds."
^%ZVEMS("ZZ","MISC",22)=""
^%ZVEMS("ZZ","MISC",23)="   SAVE Routine: ROUTINE NAME"
^%ZVEMS("ZZ","MISC",24)="                The routine entered here will be the default routine when"
^%ZVEMS("ZZ","MISC",25)="                you run System QWIK ..QSAVE, to save your User QWIKs."
^%ZVEMS("ZZ","MISC",26)="                ..QSAVE is also used to restore your previously saved QWIKs."
^%ZVEMS("ZZ","MISC",27)="                NOTE: It is your responsibility to insure that the routine"
^%ZVEMS("ZZ","MISC",28)="                entered here doesn't already exist. If it does, it will"
^%ZVEMS("ZZ","MISC",29)="                be overwritten."
^%ZVEMS("ZZ","MISC",30)=""
^%ZVEMS("ZZ","MISC",31)="   <DEL> different from <BS>"
^%ZVEMS("ZZ","MISC",32)="                  When set to DIFF, the <BS> key (8) deletes the character"
^%ZVEMS("ZZ","MISC",33)="                  to the left of the cursor, and the <DEL> key (127)"
^%ZVEMS("ZZ","MISC",34)="                  deletes the character under the cursor. When set to SAME,"
^%ZVEMS("ZZ","MISC",35)="                  both the <BS> and <DEL> keys delete the character to the"
^%ZVEMS("ZZ","MISC",36)="                  left of the cursor. You can do ..KEY to see what your <BS>"
^%ZVEMS("ZZ","MISC",37)="                  key is sending. If it's sending 127, the same as your <DEL>"
^%ZVEMS("ZZ","MISC",38)="                  key and you want these keys to delete the character to the"
^%ZVEMS("ZZ","MISC",39)="                  left of the cursor, set this parameter to SAME."
^%ZVEMS("ZZ","MISC",40)=""
^%ZVEMS("ZZ","MISC",41)=" V S H E L L   T I M E   O U T"
^%ZVEMS("ZZ","MISC",42)=""
^%ZVEMS("ZZ","MISC",43)=" If no activity occurs at the '>>' prompt, the VShell will time out. It will"
^%ZVEMS("ZZ","MISC",44)=" then look to see if you have a User QWIK named TO, and execute it. You can"
^%ZVEMS("ZZ","MISC",45)=" set TO to run any M code you'd like. Setting TO=""HALT"" will cause the VShell"
^%ZVEMS("ZZ","MISC",46)=" to quit."
^%ZVEMS("ZZ","MISC",47)=""
^%ZVEMS("ZZ","MISC",48)=" The VShell comes with its own screensaver which you can use by setting"
^%ZVEMS("ZZ","MISC",49)=" TO=""DO ^%ZVEMSTO"". This screensaver will disable Control-C. Hitting any key"
^%ZVEMS("ZZ","MISC",50)=" will return you back to your normal screen."
^%ZVEMS("ZZ","MISC",51)=""
^%ZVEMS("ZZ","MISC",52)=" To disable Control-Y in VAX DSM, set TO=""DO VMS^%ZVEMSTO"". Then set up the"
^%ZVEMS("ZZ","MISC",53)=" following file called TIMEOUT.COM, in your Log-In Directory:"
^%ZVEMS("ZZ","MISC",54)=""
^%ZVEMS("ZZ","MISC",55)="     $ SET NOCONTROL=(T,Y)"
^%ZVEMS("ZZ","MISC",56)="     $ DEFINE/USER SYS$INPUT SYS$COMMAND"
^%ZVEMS("ZZ","MISC",57)="     $ DSM/UCI=VAH/VOL=ROU/ENV=MMPSMGR VMS1^%ZVEMSTO"
^%ZVEMS("ZZ","MISC",58)=""
^%ZVEMS("ZZ","MISC",59)=" NOTE: In the last line, replace MMPSMGR with your own Mumps Manager account."
^%ZVEMS("ZZ","MISC",60)=""
^%ZVEMS("ZZ","MISC",61)=" The VSHELL also includes a screen blanker. Set TO=""BLANK^%ZVEMSTO"". If you're"
^%ZVEMS("ZZ","MISC",62)=" on a VAX, change TIMEOUT.COM to call BLANK^%ZVEMSTO instead of VM1^%ZVEMSTO."
^%ZVEMS("ZZ","NOTES",1)=" ----->   V P E   P A R A M E T E R   P A S S I N G"
^%ZVEMS("ZZ","NOTES",2)=""
^%ZVEMS("ZZ","NOTES",3)=" NOTE: When entering fields, if the field is a multiple you MUST use the"
^%ZVEMS("ZZ","NOTES",4)=" field's name, not it's number. When entering file or field names, if the"
^%ZVEMS("ZZ","NOTES",5)=" name contains a space you MUST enclose the name in quotes."
^%ZVEMS("ZZ","NOTES",6)=""
^%ZVEMS("ZZ","NOTES",7)=" 1) VEDD  PARAM^%ZVEMD(File Name/Num,Menu Option Mnemonic,Field Names/Nums)"
^%ZVEMS("ZZ","NOTES",8)="          Ind Fld Sum............DO PARAM^%ZVEMD(""USER"",""I"","".01;2"")"
^%ZVEMS("ZZ","NOTES",9)="          Fld Global Location....DO PARAM^%ZVEMD(""USER"",""G"",30)"
^%ZVEMS("ZZ","NOTES",10)="          ..VEDD USER I .01;2"
^%ZVEMS("ZZ","NOTES",11)="          ..VEDD ""NEW PERSON"" G 30"
^%ZVEMS("ZZ","NOTES",12)=""
^%ZVEMS("ZZ","NOTES",13)=" 2) VGL   PARAM^%ZVEMG(^Global -or- File Name)"
^%ZVEMS("ZZ","NOTES",14)="          DO PARAM^%ZVEMG(""^VA(200"")      ..VGL ^VA(200"
^%ZVEMS("ZZ","NOTES",15)="          DO PARAM^%ZVEMG(""NEW PERSON"")   ..VGL ""NEW PERSON"""
^%ZVEMS("ZZ","NOTES",16)=""
^%ZVEMS("ZZ","NOTES",17)=" 3) VRR   PARAM^%ZVEMR(Routine Name)"
^%ZVEMS("ZZ","NOTES",18)="          DO PARAM^%ZVEMR(""ZVEMD"")        ..VRR ZVEMD"
^%ZVEMS("ZZ","NOTES",19)=""
^%ZVEMS("ZZ","NOTES",20)=" ----->   V P E   P R O G R A M M E R   C A L L S"
^%ZVEMS("ZZ","NOTES",21)=""
^%ZVEMS("ZZ","NOTES",22)=" 1) SINGLE CHARACTER READ"
^%ZVEMS("ZZ","NOTES",23)="    S X=$$READ^%ZVEMKRN   X=String, VEE(""K"")=Key, VEE array left defined"
^%ZVEMS("ZZ","NOTES",24)=""
^%ZVEMS("ZZ","NOTES",25)=" 2) STRING EDITOR"
^%ZVEMS("ZZ","NOTES",26)="    S CD=String D SCREEN^%ZVEMKEA(""PROMPT:"",2,75)"
^%ZVEMS("ZZ","NOTES",27)="    CD=Edited String, VEESHC=<RET>, VEE array left defined"
^%ZVEMS("ZZ","NOTES",28)=""
^%ZVEMS("ZZ","NOTES",29)=" 3) CHOICE SELECTION"
^%ZVEMS("ZZ","NOTES",30)="    W !?2,""Proceed with deletion?"" S X=$$CHOICE^%ZVEMKC(""YES^NO"",1,10,21)"
^%ZVEMS("ZZ","NOTES",31)="    1=Option to be highlighted 10,21=$X,$Y (use when placing prompts)"
^%ZVEMS("ZZ","NOTES",32)="    For MSM, RM0 is in effect, after calling CHOICE."
^%ZVEMS("ZZ","NOTES",33)="    Returns number of CHOICE selected, or 0. VEE array left defined."
^%ZVEMS("ZZ","NOTES",34)=""
^%ZVEMS("ZZ","NOTES",35)=" 4) MENU"
^%ZVEMS("ZZ","NOTES",36)="    Copy ^ZVEMSH,^ZVEMSHY. Change any calls to the new rtns."
^%ZVEMS("ZZ","NOTES",37)="    Edit subroutine INIT^ROUTINE:"
^%ZVEMS("ZZ","NOTES",38)="          COLUMNS=""6^7""   ;Number of options in each column"
^%ZVEMS("ZZ","NOTES",39)="          WIDTH=31        ;Width of reverse video"
^%ZVEMS("ZZ","NOTES",40)="          HD=Heading      ;Heading for new menu"
^%ZVEMS("ZZ","NOTES",41)="    Insert "";;***"" in MENU lines and adj COLUMNS to reduce number of menu"
^%ZVEMS("ZZ","NOTES",42)="    options. Can be more than 2 columns. Edit TOPICS^ROUTINE for subheadings."
^%ZVEMS("ZZ","NOTES",43)="          Ex: TOPICS+1 - ;;;E D I T;;;3;4"
^%ZVEMS("ZZ","NOTES",44)=""
^%ZVEMS("ZZ","NOTES",45)=" 5) GENERIC SELECTOR"
^%ZVEMS("ZZ","NOTES",46)="    Put items in an array."
^%ZVEMS("ZZ","NOTES",47)="    Call SELECTOR, passing 3 parameters:"
^%ZVEMS("ZZ","NOTES",48)="          Parameter 1: Array root"
^%ZVEMS("ZZ","NOTES",49)="          Parameter 2: 1=All choices in the display will be numbered"
^%ZVEMS("ZZ","NOTES",50)="          Parameter 3: 1=NEW allowed. This adds menu option N=New to bottom"
^%ZVEMS("ZZ","NOTES",51)="                       of the screen. ^TMP(""VPE"",""SELECT"",$J,""NEW"")="""" will"
^%ZVEMS("ZZ","NOTES",52)="                       be returned if user hits N. This allows user to"
^%ZVEMS("ZZ","NOTES",53)="                       indicate that they want to add a new entry."
^%ZVEMS("ZZ","NOTES",54)=""
^%ZVEMS("ZZ","NOTES",55)="    SELECTOR will return items selected in ^TMP(""VPE"",""SELECT"",$J)"
^%ZVEMS("ZZ","NOTES",56)=""
^%ZVEMS("ZZ","NOTES",57)="    Example: Build array of names:"
^%ZVEMS("ZZ","NOTES",58)="               ^TMP(""TEST"",$J,1)=""Bolduc,David J."""
^%ZVEMS("ZZ","NOTES",59)="               ^TMP(""TEST"",$J,2)=""Duck,Donald"""
^%ZVEMS("ZZ","NOTES",60)="               ^TMP(""TEST"",$J,3)=""Mouse,Mickey"""
^%ZVEMS("ZZ","NOTES",61)="             Call SELECTOR:"
^%ZVEMS("ZZ","NOTES",62)="               D SELECT^%ZVEMKT(""^TMP(""""TEST"""",""_$J_"")"",1)"
^%ZVEMS("ZZ","NOTES",63)="             SELECTOR returns items selected:"
^%ZVEMS("ZZ","NOTES",64)="               ^TMP(""VPE"",""SELECT"",$J,1)=""Bolduc,David J."""
^%ZVEMS("ZZ","NOTES",65)=""
^%ZVEMS("ZZ","NOTES",66)="    You can control what SELECTOR returns in ^TMP(""VPE"",""SELECT"",$J)."
^%ZVEMS("ZZ","NOTES",67)="    When array is built, concantenate what you want returned, to the front"
^%ZVEMS("ZZ","NOTES",68)="    of the array node using $C(9) as a delimiter. A common returned value"
^%ZVEMS("ZZ","NOTES",69)="    is the item's Internal Entry Number. The SELECTOR will only display"
^%ZVEMS("ZZ","NOTES",70)="    the characters to the right of the $C(9)."
^%ZVEMS("ZZ","NOTES",71)=""
^%ZVEMS("ZZ","NOTES",72)="    The default heading is ""Select: ITEMS"". You can replace the word ITEMS"
^%ZVEMS("ZZ","NOTES",73)="    with a word of your choice by setting a ""HD"" node in your array."
^%ZVEMS("ZZ","NOTES",74)=""
^%ZVEMS("ZZ","NOTES",75)="    Example:"
^%ZVEMS("ZZ","NOTES",76)="               ^TMP(""TEST"",$J,""HD"")=""PARTICIPANT"""
^%ZVEMS("ZZ","NOTES",77)="               ^TMP(""TEST"",$J,1)=""234""_$C(9)_""Bolduc,David J."""
^%ZVEMS("ZZ","NOTES",78)="               ^TMP(""TEST"",$J,2)=""45""_$C(9)_""Duck,Donald"""
^%ZVEMS("ZZ","NOTES",79)="               ^TMP(""TEST"",$J,3)=""14""_$C(9)_""Mouse,Mickey"""
^%ZVEMS("ZZ","NOTES",80)="    If Bolduc were selected, SELECTOR would return:"
^%ZVEMS("ZZ","NOTES",81)="               ^TMP(""VPE"",""SELECT"",$J,1)=""234$C(9)Bolduc,David J."""
^%ZVEMS("ZZ","NOTES",82)=""
^%ZVEMS("ZZ","NOTES",83)=" 6) FILEMAN FIELD SELECTOR"
^%ZVEMS("ZZ","NOTES",84)="    D SELECT^%ZVEMKTF(FileNumber,LEVEL)"
^%ZVEMS("ZZ","NOTES",85)="    LEVEL: ""TOP""=Top level flds only  ""ALL""=Include multiple flds"
^%ZVEMS("ZZ","NOTES",86)="    Example: D SELECT^%ZVEMKTF(200,""TOP"")"
^%ZVEMS("ZZ","NOTES",87)="             Allows you to select from all top level fields"
^%ZVEMS("ZZ","NOTES",88)="             of the NEW PERSON file."
^%ZVEMS("ZZ","NOTES",89)="    Returns array: ^TMP(""VPE"",""FIELDS"",$J,FILE#,FIELD#)"
^%ZVEMS("ZZ","PARAM",1)=" P A R A M E T E R   P A S S I N G"
^%ZVEMS("ZZ","PARAM",2)=""
^%ZVEMS("ZZ","PARAM",3)=" User QWIKs can be made more powerful and flexible by using parameter passing."
^%ZVEMS("ZZ","PARAM",4)=" You pass parameters to your QWIKs by typing one dot and your QWIK name, and"
^%ZVEMS("ZZ","PARAM",5)=" then from 1 to 9 parameters, each separated by a space. If the parameter"
^%ZVEMS("ZZ","PARAM",6)=" itself contains a space, it must be enclosed in quotes. The VShell will look"
^%ZVEMS("ZZ","PARAM",7)=" for any parameters and assign them to variables %1 thru %9. Your QWIK would"
^%ZVEMS("ZZ","PARAM",8)=" use these variables."
^%ZVEMS("ZZ","PARAM",9)=""
^%ZVEMS("ZZ","PARAM",10)=" As an example of how to use parameter passing, lets look at System QWIK ZP."
^%ZVEMS("ZZ","PARAM",11)=" You use ZP to ZPRINT a routine. You would enter '..ZP ROUTINE'. You can see"
^%ZVEMS("ZZ","PARAM",12)=" that ROUTINE is the parameter and the VShell will assign this to %1."
^%ZVEMS("ZZ","PARAM",13)=""
^%ZVEMS("ZZ","PARAM",14)=" Here is ZP's code:  Q:%1']""""  ZL @%1 ZP"
^%ZVEMS("ZZ","PARAM",15)=""
^%ZVEMS("ZZ","PARAM",16)=" First, this QWIK will QUIT if no routine name has been passed. Next it will"
^%ZVEMS("ZZ","PARAM",17)=" ZLOAD the routine into your partition and then ZPRINT it. Note that you don't"
^%ZVEMS("ZZ","PARAM",18)=" have to check to see if %1 is defined. %1-%9 are always defined either to a"
^%ZVEMS("ZZ","PARAM",19)=" parameter or to null."
^%ZVEMS("ZZ","PARAM",20)=""
^%ZVEMS("ZZ","PARAM",21)=" If you hit '..2' at the >> prompt, to view the System QWIKs in box 2, you"
^%ZVEMS("ZZ","PARAM",22)=" will see:  ZP   ZPrint a Routine"
^%ZVEMS("ZZ","PARAM",23)="                 -> %1=Routine Name"
^%ZVEMS("ZZ","PARAM",24)=" The '%1=Routine Name' is what you would enter at the 'Edit PARAM NOTES:'"
^%ZVEMS("ZZ","PARAM",25)=" prompt when you Enter/Edit a QWIK. Then when you view your QWIKs, these notes"
^%ZVEMS("ZZ","PARAM",26)=" are displayed as a reminder that you need to pass a parameter when calling"
^%ZVEMS("ZZ","PARAM",27)=" this QWIK."
^%ZVEMS("ZZ","PGM",1)=" P R O G R A M M E R   T O O L S"
^%ZVEMS("ZZ","PGM",2)=""
^%ZVEMS("ZZ","PGM",3)=" The VShell includes a number of programmer tools that range from a single"
^%ZVEMS("ZZ","PGM",4)=" routine to very sophisticated packages. They all have one thing in common:"
^%ZVEMS("ZZ","PGM",5)=" They're useful. These tools are System QWIKs and are located in Box 3. Type"
^%ZVEMS("ZZ","PGM",6)=" '..3' to see them. To use them, type two dots and the name."
^%ZVEMS("ZZ","PGM",7)=""
^%ZVEMS("ZZ","PGM",8)=" E       A routine editor that uses the VRR module."
^%ZVEMS("ZZ","PGM",9)=" ASCII   Displays the ASCII character set."
^%ZVEMS("ZZ","PGM",10)=" CAL     Six month calendar display."
^%ZVEMS("ZZ","PGM",11)=" KEY     Display escape sequence for any key struck."
^%ZVEMS("ZZ","PGM",12)=" VEDD    VElectronic Data Dictionary - An easy to use utility for viewing the"
^%ZVEMS("ZZ","PGM",13)="         structure of Fileman files."
^%ZVEMS("ZZ","PGM",14)=" VGL     VGlobal Lister/Editor - A tool to examine and edit globals."
^%ZVEMS("ZZ","PGM",15)=" VRR     VRoutine Reader - Used to read routines. Allows branching to up"
^%ZVEMS("ZZ","PGM",16)="         to 4 routines so you can follow any branching logic contained in the"
^%ZVEMS("ZZ","PGM",17)="         code."
^%ZVEMS("ZZ","PROT",1)=" P R O T E C T I O N"
^%ZVEMS("ZZ","PROT",2)=""
^%ZVEMS("ZZ","PROT",3)=" When you enter code at the "">>"" prompt, it is first checked for any global"
^%ZVEMS("ZZ","PROT",4)=" kills. If your code is killing a global, you will receive a warning message"
^%ZVEMS("ZZ","PROT",5)=" which will ask if you really want the code executed. This allows you to"
^%ZVEMS("ZZ","PROT",6)=" review your code and abort the execution if you note any errors."
^%ZVEMS("ZZ","PROT",7)=""
^%ZVEMS("ZZ","PROT",8)=" Your line of code is divided into ""pieces"" based on spaces. If any piece"
^%ZVEMS("ZZ","PROT",9)=" contains an ""^"" and the previous piece contains a ""K"", you will receive the"
^%ZVEMS("ZZ","PROT",10)=" warning. Some code may fit this pattern and trigger a warning even tho no"
^%ZVEMS("ZZ","PROT",11)=" kill is being executed. Example:  LOCK ^XXX(1,2) "
^%ZVEMS("ZZ","PROT",12)=""
^%ZVEMS("ZZ","PROT",13)=" NOTE: This protection is also available when using the VPE routine and"
^%ZVEMS("ZZ","PROT",14)="       global editors."
^%ZVEMS("ZZ","QWIK",1)=" Q W I K   C O M M A N D S"
^%ZVEMS("ZZ","QWIK",2)=""
^%ZVEMS("ZZ","QWIK",3)=" The VShell allows the use of QWIK commands to greatly reduce the number"
^%ZVEMS("ZZ","QWIK",4)=" of keystrokes required to accomplish your tasks. QWIK commands are words"
^%ZVEMS("ZZ","QWIK",5)=" from 1 to 8 characters long, that, when invoked, will execute one line of"
^%ZVEMS("ZZ","QWIK",6)=" Mumps code. There are two types of QWIK commands: System QWIKs & User QWIKs."
^%ZVEMS("ZZ","QWIK",7)=" System QWIKs come with the VShell and can not be altered. User QWIKs are"
^%ZVEMS("ZZ","QWIK",8)=" created by you."
^%ZVEMS("ZZ","QWIK",9)=""
^%ZVEMS("ZZ","QWIK",10)=" To run a QWIK command, you type one dot and the command for a User QWIK, and"
^%ZVEMS("ZZ","QWIK",11)=" two dots and the command for a System QWIK. If you created a User QWIK called"
^%ZVEMS("ZZ","QWIK",12)=" 'E' to invoke your routine editor, you would type '.E' to run the QWIK. To"
^%ZVEMS("ZZ","QWIK",13)=" run System QWIK VGL, the VGlobal Lister, you would type '..VGL', with two"
^%ZVEMS("ZZ","QWIK",14)=" dots, since it's a System QWIK."
^%ZVEMS("ZZ","QWIK",15)=""
^%ZVEMS("ZZ","QWIK",16)=" The question you may have is ""When should I create a User QWIK?"". I can only"
^%ZVEMS("ZZ","QWIK",17)=" tell you when I create a QWIK - If I type something over 3 times, I make a"
^%ZVEMS("ZZ","QWIK",18)=" User QWIK to do it. For example, I have my own routine that I use to monitor"
^%ZVEMS("ZZ","QWIK",19)=" the error log throughout the day. The routine is ^AAH2EVAX. So, I can type"
^%ZVEMS("ZZ","QWIK",20)=" D ^AAH2EVAX all day long or make a User QWIK called 'ER' and type '.ER'. The"
^%ZVEMS("ZZ","QWIK",21)=" QWIK command 'ER' requires only 1/3 of the keystrokes."
^%ZVEMS("ZZ","QWIK",22)=""
^%ZVEMS("ZZ","QWIK",23)=" Making a User QWIK command is very easy and you will learn more about that"
^%ZVEMS("ZZ","QWIK",24)=" in the 'User QWIKS' help text."
^%ZVEMS("ZZ","QWIK",25)=""
^%ZVEMS("ZZ","QWIK",26)=" You can use the F1 key to view all QWIK commands that are available to"
^%ZVEMS("ZZ","QWIK",27)=" you:"
^%ZVEMS("ZZ","QWIK",28)="       <F1>1...List User QWIKs and descriptions"
^%ZVEMS("ZZ","QWIK",29)="       <F1>2...List User QWIKs and their code"
^%ZVEMS("ZZ","QWIK",30)="       <F1>3...List System QWIKs and descriptions"
^%ZVEMS("ZZ","QWIK",31)="       <F1>4...List System QWIKs and their code"
^%ZVEMS("ZZ","QWIK",32)=""
^%ZVEMS("ZZ","QWIK",33)=" NOTE: On a VT-100 keyboard substitute the PF1 key."
^%ZVEMS("ZZ","QWIK",34)=""
^%ZVEMS("ZZ","QWIK",35)=" Typing . or .. will bulk display User or System QWIKs. Typing . or .. and"
^%ZVEMS("ZZ","QWIK",36)=" the first few characters will list QWIKs starting with those characters"
^%ZVEMS("ZZ","QWIK",37)=" and allow a selection."
^%ZVEMS("ZZ","STRING",1)=" STRING FUNCTIONS - XLFSTR"
^%ZVEMS("ZZ","STRING",2)=""
^%ZVEMS("ZZ","STRING",3)=" UP(x)......Uppercase"
^%ZVEMS("ZZ","STRING",4)="      Convert string in x to all uppercase letters"
^%ZVEMS("ZZ","STRING",5)="      Ex: W $$UP^XLFSTR(""freedom"")    --> ""FREEDOM"""
^%ZVEMS("ZZ","STRING",6)=""
^%ZVEMS("ZZ","STRING",7)=" LOW(x).....Lowercase"
^%ZVEMS("ZZ","STRING",8)="      Comvert string in x to all lowercase letters"
^%ZVEMS("ZZ","STRING",9)="      Ex: W $$LOW^XLFSTR(""JUSTICE"")   --> ""justice"""
^%ZVEMS("ZZ","STRING",10)=""
^%ZVEMS("ZZ","STRING",11)=" STRIP(x,y).....Strip a string"
^%ZVEMS("ZZ","STRING",12)="      Strip all instances of character y in string x"
^%ZVEMS("ZZ","STRING",13)="      Ex: W $$STRIP^XLFSTR(""hello"",""e"")   --> ""hllo"""
^%ZVEMS("ZZ","STRING",14)=""
^%ZVEMS("ZZ","STRING",15)=" REPEAT(x,y)....Repeat a string"
^%ZVEMS("ZZ","STRING",16)="      Repeat the value of x for y number of times"
^%ZVEMS("ZZ","STRING",17)="      Ex: W $$REPEAT^XLFSTR(""-"",10)   --> ""----------"""
^%ZVEMS("ZZ","STRING",18)=""
^%ZVEMS("ZZ","STRING",19)=" INVERT(x)....Invert a string"
^%ZVEMS("ZZ","STRING",20)="      Invert the order of characters in string x"
^%ZVEMS("ZZ","STRING",21)="      Ex: W $$INVERT^XLFSTR(""ABC"")   --> ""CBA"""
^%ZVEMS("ZZ","STRING",22)=""
^%ZVEMS("ZZ","STRING",23)=" REPLACE(in,.spec)....Replace strings"
^%ZVEMS("ZZ","STRING",24)="      Replace specified strings"
^%ZVEMS("ZZ","STRING",25)="      in  input string"
^%ZVEMS("ZZ","STRING",26)="      spec  an array passed by reference"
^%ZVEMS("ZZ","STRING",27)="      Ex: SET spec(""aa"")=""a"",spec(""pqr"")=""alabama"""
^%ZVEMS("ZZ","STRING",28)="          $$REPLACE^XLFSTR(""aaaaaaapqraaaaaaa"",.spec)   --> ""aaaaalabamaaaaa"""
^%ZVEMS("ZZ","STRING",29)="          SET spec(""F"")=""File"",spec(""M"")=""Man"""
^%ZVEMS("ZZ","STRING",30)="          $$REPLACE^XLFSTR(""FM"",.spec)  --> ""FileMan"""
^%ZVEMS("ZZ","STRING",31)=""
^%ZVEMS("ZZ","STRING",32)=" RJ(s,i,p)...Right Justify"
^%ZVEMS("ZZ","STRING",33)=" LJ(s,i,p)...Left Justify"
^%ZVEMS("ZZ","STRING",34)=" CJ(s,i,p)...Center Justify"
^%ZVEMS("ZZ","STRING",35)="      Right,left,center Justify a character string"
^%ZVEMS("ZZ","STRING",36)="      s = character string"
^%ZVEMS("ZZ","STRING",37)="      i = field size"
^%ZVEMS("ZZ","STRING",38)="      p = pad character(optional)"
^%ZVEMS("ZZ","STRING",39)="      Ex: W ""["",$$RJ^XLFSTR(""SAM"",10),""]""  --> [        SAM]"
^%ZVEMS("ZZ","STRING",40)="          W ""["",$$RJ^XLFSTR(""SAM"",10,""-""),""]""  --> [--------SAM]"
^%ZVEMS("ZZ","STRING",41)="          W ""["",$$LJ^XLFSTR(""DON"",10),""]""  --> [DON        ]"
^%ZVEMS("ZZ","STRING",42)="          W ""["",$$CJ^XLFSTR(""SUE"",10),""]""  --> [    SUE    ]"
^%ZVEMS("ZZ","SYSTEM",1)=" S Y S T E M   Q W I K S"
^%ZVEMS("ZZ","SYSTEM",2)=""
^%ZVEMS("ZZ","SYSTEM",3)=" System QWIKs come with the VShell. To invoke a System QWIK, type two dots"
^%ZVEMS("ZZ","SYSTEM",4)=" followed by the name. For example, to run VGL you would type ..VGL."
^%ZVEMS("ZZ","SYSTEM",5)=" The following is a list of the available System QWIKs, grouped by category:"
^%ZVEMS("ZZ","SYSTEM",6)=""
^%ZVEMS("ZZ","SYSTEM",7)=" 1.) QWIK RELATED"
^%ZVEMS("ZZ","SYSTEM",8)=""
^%ZVEMS("ZZ","SYSTEM",9)=" QB     Assign User QWIKs to a Box. See BOXES help text."
^%ZVEMS("ZZ","SYSTEM",10)=" QC     Copy a QWIK."
^%ZVEMS("ZZ","SYSTEM",11)=" QD     Delete a QWIK."
^%ZVEMS("ZZ","SYSTEM",12)=" QE     Add/Edit a QWIK. Same as <TAB>."
^%ZVEMS("ZZ","SYSTEM",13)=" QL1    List User QWIKs/Description - Same as <F1>1."
^%ZVEMS("ZZ","SYSTEM",14)=" QL2    List User QWIKs/Code - Same as <F1>2."
^%ZVEMS("ZZ","SYSTEM",15)=" QL3    List System QWIKs/Description - Same as <F1>3."
^%ZVEMS("ZZ","SYSTEM",16)=" QL4    List System QWIKs/Code - Same as <F1>4."
^%ZVEMS("ZZ","SYSTEM",17)=" QSAVE  Saves your User QWIKs to a routine. Use for back-up or to send your"
^%ZVEMS("ZZ","SYSTEM",18)="        QWIKs to another programmer. This option also restores previously"
^%ZVEMS("ZZ","SYSTEM",19)="        saved QWIKs."
^%ZVEMS("ZZ","SYSTEM",20)=" QV     Create QWIKs that will run on different vendors' Mumps systems. See"
^%ZVEMS("ZZ","SYSTEM",21)="        VENDOR SPECIFIC CONFIGURATIONS help text."
^%ZVEMS("ZZ","SYSTEM",22)=" QVL    List Vendor Specific Code for QWIKs set up with QV."
^%ZVEMS("ZZ","SYSTEM",23)=""
^%ZVEMS("ZZ","SYSTEM",24)=" 2.) SHELL RELATED"
^%ZVEMS("ZZ","SYSTEM",25)=""
^%ZVEMS("ZZ","SYSTEM",26)=" CLH     Resequences your Command Line History. The VShell saves your last 20"
^%ZVEMS("ZZ","SYSTEM",27)="         commands. As new commands are added and old commands dropped, the"
^%ZVEMS("ZZ","SYSTEM",28)="         sequence number of each entry can get large. You may type ..CLH"
^%ZVEMS("ZZ","SYSTEM",29)="         at anytime, to resequence the numbers back to 1-20."
^%ZVEMS("ZZ","SYSTEM",30)=" DTMVT   For DataTree users. If you Control C out of some DataTree utilities,"
^%ZVEMS("ZZ","SYSTEM",31)="         VT100 terminal emulation is no longer in effect and you will see"
^%ZVEMS("ZZ","SYSTEM",32)="         junk on the screen. Use this QWIK to reset your terminal to VT100."
^%ZVEMS("ZZ","SYSTEM",33)=" PARAM   Enter System Parameters. See MISCELLANEOUS help text."
^%ZVEMS("ZZ","SYSTEM",34)=" PUR     The VShell has it's own scratch area: ^%ZVEMS(""%""). PUR will purge"
^%ZVEMS("ZZ","SYSTEM",35)="         older nodes left behind by a previous session."
^%ZVEMS("ZZ","SYSTEM",36)=" PURVGL  Purge VGL's Command Line History."
^%ZVEMS("ZZ","SYSTEM",37)=" PURVRR  Purge VRR's Command Line History."
^%ZVEMS("ZZ","SYSTEM",38)=" PURVEDD Purge VEDD's Command Line History."
^%ZVEMS("ZZ","SYSTEM",39)=" PURVSHL Purge Command Line History for the VShell."
^%ZVEMS("ZZ","SYSTEM",40)=" UL      List VShell Users, including DUZ and ID numbers."
^%ZVEMS("ZZ","SYSTEM",41)=" VER     Displays VShell version number."
^%ZVEMS("ZZ","SYSTEM",42)=""
^%ZVEMS("ZZ","SYSTEM",43)=" 3.) PROGRAMMER TOOLS"
^%ZVEMS("ZZ","SYSTEM",44)=""
^%ZVEMS("ZZ","SYSTEM",45)=" ASCII   ASCII table display."
^%ZVEMS("ZZ","SYSTEM",46)=" CAL     6 month calendar display."
^%ZVEMS("ZZ","SYSTEM",47)=" E       VRoutine Editor."
^%ZVEMS("ZZ","SYSTEM",48)=" KEY     Display escape sequence for any key pressed."
^%ZVEMS("ZZ","SYSTEM",49)=" LBRY    Routine Library. Used with ..E to help prevent routines from being"
^%ZVEMS("ZZ","SYSTEM",50)="         accidentily overwritten when there are multiple programmers working"
^%ZVEMS("ZZ","SYSTEM",51)="         on the same routines."
^%ZVEMS("ZZ","SYSTEM",52)=" NOTES   VPE programmer notes."
^%ZVEMS("ZZ","SYSTEM",53)=" RL      Routine Lister"
^%ZVEMS("ZZ","SYSTEM",54)=" RTN     Start a new M routine. You may enter your lines of"
^%ZVEMS("ZZ","SYSTEM",55)="         code and it will prompt you for a routine name and save it to disk."
^%ZVEMS("ZZ","SYSTEM",56)=" VEDD    VElectronic Data Dictionary."
^%ZVEMS("ZZ","SYSTEM",57)=" VGL     VGlobal Lister."
^%ZVEMS("ZZ","SYSTEM",58)=" VRR     VRoutine Reader."
^%ZVEMS("ZZ","SYSTEM",59)=" ZD      Kill all local variables that start with %1(parameter)."
^%ZVEMS("ZZ","SYSTEM",60)=" ZP      Use to ZPRINT a routine."
^%ZVEMS("ZZ","SYSTEM",61)=" ZR      Use to ZREMOVE from 1 to 9 routines."
^%ZVEMS("ZZ","SYSTEM",62)=" ZW      ZWRITE the symbol table. Writes the variables one page at a time."
^%ZVEMS("ZZ","SYSTEM",63)=""
^%ZVEMS("ZZ","SYSTEM",64)=" 4.) FILEMAN/VA KERNEL RELATED"
^%ZVEMS("ZZ","SYSTEM",65)=""
^%ZVEMS("ZZ","SYSTEM",66)=" FMC     Fileman programmer calls."
^%ZVEMS("ZZ","SYSTEM",67)=" FMTI    Fileman Input Template display."
^%ZVEMS("ZZ","SYSTEM",68)=" FMTP    Fileman Print Template display."
^%ZVEMS("ZZ","SYSTEM",69)=" FMTS    Fileman Sort Template display."
^%ZVEMS("ZZ","SYSTEM",70)=" LF      VA KERNEL Libray Functions."
^%ZVEMS("ZZ","SYSTEM",71)=" XQRT    Help text for VA Kernel menu options."
^%ZVEMS("ZZ","SYSTEM",72)=""
^%ZVEMS("ZZ","SYSTEM",73)=" 5.) VENDOR GENERIC QWIKS"
^%ZVEMS("ZZ","SYSTEM",74)=""
^%ZVEMS("ZZ","SYSTEM",75)="     See VENDOR SPECIFIC CONFIGURATIONS help text."
^%ZVEMS("ZZ","USER",1)=" U S E R   Q W I K S"
^%ZVEMS("ZZ","USER",2)=""
^%ZVEMS("ZZ","USER",3)=" User QWIKs are your ticket to doing your work in half the keystrokes."
^%ZVEMS("ZZ","USER",4)=" Anything you do in programmer's mode can be done with a User QWIK. A User"
^%ZVEMS("ZZ","USER",5)=" QWIK is a word, from 1 to 8 characters long, that will execute a line of"
^%ZVEMS("ZZ","USER",6)=" Mumps code. To invoke a User QWIK, type one dot and the name."
^%ZVEMS("ZZ","USER",7)=""
^%ZVEMS("ZZ","USER",8)=" Let's assume that on your Mumps system you switch UCIs by entering: DO ^%ZUCI."
^%ZVEMS("ZZ","USER",9)=" Let's make a User QWIK command to do the same thing. To Add/Edit a QWIK, hit"
^%ZVEMS("ZZ","USER",10)=" the <TAB> key. You will be prompted for the following:"
^%ZVEMS("ZZ","USER",11)="          Prompt         Your Answer"
^%ZVEMS("ZZ","USER",12)="      --------------  -----------------"
^%ZVEMS("ZZ","USER",13)="      NAME            UCI"
^%ZVEMS("ZZ","USER",14)="      CODE            D ^%ZUCI"
^%ZVEMS("ZZ","USER",15)="      DESCRIPTION     Switch UCIs"
^%ZVEMS("ZZ","USER",16)="      PARAM NOTES"
^%ZVEMS("ZZ","USER",17)="      BOX             1"
^%ZVEMS("ZZ","USER",18)=" We've named the QWIK 'UCI'. The code we want it to execute is: 'DO ^%ZUCI'."
^%ZVEMS("ZZ","USER",19)=" The description is 'Switch UCIs' and we've stored it in Box '1'. For more"
^%ZVEMS("ZZ","USER",20)=" information about PARAM NOTES and BOX, see help text for PARAMETER PASSING"
^%ZVEMS("ZZ","USER",21)=" and BOXES."
^%ZVEMS("ZZ","USER",22)=""
^%ZVEMS("ZZ","USER",23)=" You are now done. Back at the '>>' prompt, you can now type '.UCI' whenever"
^%ZVEMS("ZZ","USER",24)=" you want to switch UCIs. To see your new QWIK, hit <F1>1 or <F1>2 (List"
^%ZVEMS("ZZ","USER",25)=" User QWIKs). Making a QWIK command is just that easy."
^%ZVEMS("ZZ","USER",26)=""
^%ZVEMS("ZZ","USER",27)=" You can type <F1>4 to list System QWIKs and their code. This may give you"
^%ZVEMS("ZZ","USER",28)=" some ideas for making more sophisticated User QWIKs."
^%ZVEMS("ZZ","VEDD1",1)=" A)  E N T R Y   P O I N T S:"
^%ZVEMS("ZZ","VEDD1",2)=""
^%ZVEMS("ZZ","VEDD1",3)="        ^%ZVEMD  - Main entry point."
^%ZVEMS("ZZ","VEDD1",4)="     DIR^%ZVEMD  - Bypasses opening screen."
^%ZVEMS("ZZ","VEDD1",5)=""
^%ZVEMS("ZZ","VEDD1",6)=" B)  M E N U   O P T I O N S:"
^%ZVEMS("ZZ","VEDD1",7)=""
^%ZVEMS("ZZ","VEDD1",8)="     1) Cross References - An '*' in the far left column indicates that if"
^%ZVEMS("ZZ","VEDD1",9)="                           you concantenate the global shown on the Main Menu"
^%ZVEMS("ZZ","VEDD1",10)="                           screen with this XREF, there will be data."
^%ZVEMS("ZZ","VEDD1",11)=""
^%ZVEMS("ZZ","VEDD1",12)="     2) Pointers IN - Lists all files that point to this file."
^%ZVEMS("ZZ","VEDD1",13)=""
^%ZVEMS("ZZ","VEDD1",14)="     3) Pointers OUT - Lists all fields in this file that are pointers and"
^%ZVEMS("ZZ","VEDD1",15)="                       the files they point to. An 'M' in the far left"
^%ZVEMS("ZZ","VEDD1",16)="                       column indicates the pointing field is a multiple."
^%ZVEMS("ZZ","VEDD1",17)="                       Use 'Trace a Field' to determine its path."
^%ZVEMS("ZZ","VEDD1",18)=""
^%ZVEMS("ZZ","VEDD1",19)="     4) Groups - In Filemanager Groups are a shorthand way for a user to"
^%ZVEMS("ZZ","VEDD1",20)="                 call up several fields at once for Print or Entrer/Edit"
^%ZVEMS("ZZ","VEDD1",21)="                 purposes. Also, some programmers use Groups to keep track"
^%ZVEMS("ZZ","VEDD1",22)="                 of locally added/alterred fields. See VA FILEMAN USER'S"
^%ZVEMS("ZZ","VEDD1",23)="                 MANUAL to learn how to use Groups."
^%ZVEMS("ZZ","VEDD1",24)=""
^%ZVEMS("ZZ","VEDD1",25)="     5) Trace a Field - Displays the pathway to fields that are decendent"
^%ZVEMS("ZZ","VEDD1",26)="                        from a multiple."
^%ZVEMS("ZZ","VEDD1",27)="                        Example: When looking at PATIENT file, you type"
^%ZVEMS("ZZ","VEDD1",28)="                        'MOV' at the 'Enter Field Name:' prompt. Trace a"
^%ZVEMS("ZZ","VEDD1",29)="                        Field will display:"
^%ZVEMS("ZZ","VEDD1",30)="                                  401 Admission Date/Time"
^%ZVEMS("ZZ","VEDD1",31)="                                    5 Treating Specialty"
^%ZVEMS("ZZ","VEDD1",32)="                                 1000 Movement Number"
^%ZVEMS("ZZ","VEDD1",33)="                        This is the pathway to the MOVEMENT NUMBER field."
^%ZVEMS("ZZ","VEDD1",34)="                        You can now select 'I' and type in the field"
^%ZVEMS("ZZ","VEDD1",35)="                        number of each field in the path. You will get the"
^%ZVEMS("ZZ","VEDD1",36)="                        Individual Field Listing for the MOVEMENT NUMBER field."
^%ZVEMS("ZZ","VEDD1",37)=""
^%ZVEMS("ZZ","VEDD1",38)="     6) Indiv Fld DD - Lists contents of the Data Dictionary for selected"
^%ZVEMS("ZZ","VEDD1",39)="                       field."
^%ZVEMS("ZZ","VEDD1",40)=""
^%ZVEMS("ZZ","VEDD1",41)="     7) Fld Global Location - List of all fields and their global"
^%ZVEMS("ZZ","VEDD1",42)="                           location (NODE;PIECE). When working with larger"
^%ZVEMS("ZZ","VEDD1",43)="                           files, you may start the list at a particular"
^%ZVEMS("ZZ","VEDD1",44)="                           field or a particular screen. See the HELP that's"
^%ZVEMS("ZZ","VEDD1",45)="                           available in this option."
^%ZVEMS("ZZ","VEDD1",46)=""
^%ZVEMS("ZZ","VEDD1",47)="     8) Templates - Lists Print, Sort, and Input templates. If the listing"
^%ZVEMS("ZZ","VEDD1",48)="                    is too long for any type, you may enter 'S' and skip"
^%ZVEMS("ZZ","VEDD1",49)="                    over to next type."
^%ZVEMS("ZZ","VEDD1",50)=""
^%ZVEMS("ZZ","VEDD1",51)="     9) File Description - Narrative describing the selected file."
^%ZVEMS("ZZ","VEDD1",52)=""
^%ZVEMS("ZZ","VEDD1",53)="     10) File Characteristics  - Displays post-selection actions, special"
^%ZVEMS("ZZ","VEDD1",54)="                             look-up programs, and identifiers. For more"
^%ZVEMS("ZZ","VEDD1",55)="                             information on any of these topics see Chapter 5"
^%ZVEMS("ZZ","VEDD1",56)="                             Section D of the VA Fileman Programmers' manual"
^%ZVEMS("ZZ","VEDD1",57)="                             (Version 18)."
^%ZVEMS("ZZ","VEDD1",58)=""
^%ZVEMS("ZZ","VEDD1",59)="     11) Required Fields  - Lists all fields that are Required."
^%ZVEMS("ZZ","VEDD1",60)=""
^%ZVEMS("ZZ","VEDD1",61)="     12) VGL - Victory Global Lister. To use this option your DUZ(0) must"
^%ZVEMS("ZZ","VEDD1",62)="               must contain '@' or '#'."
^%ZVEMS("ZZ","VEDD1",63)=""
^%ZVEMS("ZZ","VEDD1",64)="     13) Printing-On/Off  - Allows you to send screens to a printer. You"
^%ZVEMS("ZZ","VEDD1",65)="                            will be offered the DEVICE: prompt. Enter printer."
^%ZVEMS("ZZ","VEDD1",66)="                            After <RETURN>, Main Menu will reappear and"
^%ZVEMS("ZZ","VEDD1",67)="                            PRINTING STATUS, in the top half of the screen,"
^%ZVEMS("ZZ","VEDD1",68)="                            will be set to 'ON'. You then select a Main"
^%ZVEMS("ZZ","VEDD1",69)="                            Menu option and output will go to the selected"
^%ZVEMS("ZZ","VEDD1",70)="                            device. When you return to the Main Menu,"
^%ZVEMS("ZZ","VEDD1",71)="                            PRINTING STATUS will be 'OFF'. To print again"
^%ZVEMS("ZZ","VEDD1",72)="                            you must select Printing On/Off option again"
^%ZVEMS("ZZ","VEDD1",73)="                            to reset PRINTING STATUS to 'ON'. If PRINTING"
^%ZVEMS("ZZ","VEDD1",74)="                            STATUS is 'ON' you may turn it off by selecting"
^%ZVEMS("ZZ","VEDD1",75)="                            Printing On/Off option again. To slave"
^%ZVEMS("ZZ","VEDD1",76)="                            print, enter '0;;60' at the DEVICE: prompt."
^%ZVEMS("ZZ","VEDD1",77)=""
^%ZVEMS("ZZ","VEDD1",78)="                            NOTE: Since all screens are designed to be"
^%ZVEMS("ZZ","VEDD1",79)="                            displayed on a CRT, printing to a 10 pitch"
^%ZVEMS("ZZ","VEDD1",80)="                            80 margin printer looks best."
^%ZVEMS("ZZ","VEDD2",81)=" E N T E R                            R  E  S  U  L  T"
^%ZVEMS("ZZ","VEDD2",82)=" ---------    ----------------------------------------------------------------"
^%ZVEMS("ZZ","VEDD2",83)=""
^%ZVEMS("ZZ","VEDD2",84)="    ^         Quit back to Main Menu."
^%ZVEMS("ZZ","VEDD2",85)=""
^%ZVEMS("ZZ","VEDD2",86)="    ^^        Exit VEDD completely."
^%ZVEMS("ZZ","VEDD2",87)=""
^%ZVEMS("ZZ","VEDD2",88)=" <SPACE>      Quit back to Main Menu"
^%ZVEMS("ZZ","VEDD2",89)=""
^%ZVEMS("ZZ","VEDD2",90)=" <ESC>H       Help text for scrolling."
^%ZVEMS("ZZ","VEDD2",91)=""
^%ZVEMS("ZZ","VEDD2",92)="    I         Allows you to select a field and display its data dictionary."
^%ZVEMS("ZZ","VEDD2",93)=""
^%ZVEMS("ZZ","VEDD2",94)="   'n'        Entering a field's Reference number from the REF column, is a"
^%ZVEMS("ZZ","VEDD2",95)="              shortcut method for displaying a field's data dictionary."
^%ZVEMS("ZZ","VEDD2",96)=""
^%ZVEMS("ZZ","VEDD2",97)="  <TAB>       As noted above, you enter the REF number to select a field."
^%ZVEMS("ZZ","VEDD2",98)="              You may also select a field by positioning the highlight"
^%ZVEMS("ZZ","VEDD2",99)="              located on the extreme left hand side of the screen, and then"
^%ZVEMS("ZZ","VEDD2",100)="              hitting <TAB>."
^%ZVEMS("ZZ","VEDD2",101)=""
^%ZVEMS("ZZ","VEDD2",102)="    D         Data display. In addition to the data dictionary, you may"
^%ZVEMS("ZZ","VEDD2",103)="              look at the actual data in the file. After selecting a REF"
^%ZVEMS("ZZ","VEDD2",104)="              number or range of numbers, you select the type of display"
^%ZVEMS("ZZ","VEDD2",105)="              you want. You have the following choices:"
^%ZVEMS("ZZ","VEDD2",106)="                         E  = External values"
^%ZVEMS("ZZ","VEDD2",107)="                         I  = Internal values"
^%ZVEMS("ZZ","VEDD2",108)="                         EN = External values, null fields ignored"
^%ZVEMS("ZZ","VEDD2",109)="                         IN = Internal values, null fields ignored"
^%ZVEMS("ZZ","VEDD2",110)="              You will then be asked which entry you want to see. If any"
^%ZVEMS("ZZ","VEDD2",111)="              of the fields you requested are multiples, you will also be"
^%ZVEMS("ZZ","VEDD2",112)="              asked which multiple entry you want to see.  After viewing"
^%ZVEMS("ZZ","VEDD2",113)="              the data, you are returned to the Global Location screen."
^%ZVEMS("ZZ","VEDD2",114)=""
^%ZVEMS("ZZ","VEDD2",115)="    F         Find a field. You will be prompted for a field name. Enter a"
^%ZVEMS("ZZ","VEDD2",116)="              name or part of a name. VEDD will locate the field and position"
^%ZVEMS("ZZ","VEDD2",117)="              it at the top of the display. If no field is found the screen"
^%ZVEMS("ZZ","VEDD2",118)="              will be blank because you are at the end of the file. Use the"
^%ZVEMS("ZZ","VEDD2",119)="              Up-Arrow key to scroll up and again display fields."
^%ZVEMS("ZZ","VEDD2",120)=""
^%ZVEMS("ZZ","VEDD2",121)="    G         Goto a REF number. Select a REF number from the left hand"
^%ZVEMS("ZZ","VEDD2",122)="              column, and that field will be positioned at the top of the"
^%ZVEMS("ZZ","VEDD2",123)="              display. If you select a REF number that has not yet been"
^%ZVEMS("ZZ","VEDD2",124)="              displayed, the last field viewed will be positioned at the top"
^%ZVEMS("ZZ","VEDD2",125)="              of the display. G 1 to return to the beginning display."
^%ZVEMS("ZZ","VEDD2",126)=""
^%ZVEMS("ZZ","VEDD2",127)=" <HOME>       Returns you to beginning dislay. Since your terminal emulation"
^%ZVEMS("ZZ","VEDD2",128)="              software may use the <HOME> key for other purposes, you may"
^%ZVEMS("ZZ","VEDD2",129)="              type the word HOME for the same effect."
^%ZVEMS("ZZ","VEDD2",130)=""
^%ZVEMS("ZZ","VEDD2",131)=" <END>        Returns you to the highest field that's been displayed. You"
^%ZVEMS("ZZ","VEDD2",132)="              may type the word END for the same effect."
^%ZVEMS("ZZ","VEDD2",133)=""
^%ZVEMS("ZZ","VEDD2",134)="    N         Allows you to do a look up by global node. At the 'Select"
^%ZVEMS("ZZ","VEDD2",135)="              NODE:' prompt type '?' to see all nodes, or enter node. If"
^%ZVEMS("ZZ","VEDD2",136)="              that node is a multiple you will be asked for subnode. You"
^%ZVEMS("ZZ","VEDD2",137)="              will then get a list of all fields that are contained by"
^%ZVEMS("ZZ","VEDD2",138)="              that node. You may then do an 'Individual Field Summary' on"
^%ZVEMS("ZZ","VEDD2",139)="              any field listed."
^%ZVEMS("ZZ","VEDD2",140)="              Example: If you wanted to know what fields are contained"
^%ZVEMS("ZZ","VEDD2",141)="                         in ^DPT(34,""DA"",3,""T"",0) you would enter '^DPT' at"
^%ZVEMS("ZZ","VEDD2",142)="                         the 'Select FILE:' prompt, select option 7, enter"
^%ZVEMS("ZZ","VEDD2",143)="                         'N' for node, and then enter the following:"
^%ZVEMS("ZZ","VEDD2",144)="                              Select NODE: 'DA'"
^%ZVEMS("ZZ","VEDD2",145)="                              Select 'DA' SUBNODE: 'T'"
^%ZVEMS("ZZ","VEDD2",146)="                              Select 'T' SUBNODE: '0'"
^%ZVEMS("ZZ","VEDD2",147)="                         VEDD will now display all the fields contained in"
^%ZVEMS("ZZ","VEDD2",148)="                         the selected node and allow you to do an 'Individual"
^%ZVEMS("ZZ","VEDD2",149)="                         Field Summary'."
^%ZVEMS("ZZ","VEDD2",150)=""
^%ZVEMS("ZZ","VEDD2",151)="    P         Allows you to branch off to a pointed-to file. P will prompt"
^%ZVEMS("ZZ","VEDD2",152)="              you for a REF number from the left hand column. If the"
^%ZVEMS("ZZ","VEDD2",153)="              field you select is a pointer field, the display will branch"
^%ZVEMS("ZZ","VEDD2",154)="              to that file. Pointer fields are marked with ""<-Pntr""."
^%ZVEMS("ZZ","VEDD2",155)=""
^%ZVEMS("ZZ","VEDD2",156)="   VGL        Victory Global Lister"
^%ZVEMS("ZZ","VENDOR",1)=" V E N D O R    S P E C I F I C   C O N F I G U R A T I O N S"
^%ZVEMS("ZZ","VENDOR",2)=""
^%ZVEMS("ZZ","VENDOR",3)=" The VShell will allow you to set up an environment that will work the same"
^%ZVEMS("ZZ","VENDOR",4)=" regardless of which Mumps system you are running."
^%ZVEMS("ZZ","VENDOR",5)=""
^%ZVEMS("ZZ","VENDOR",6)=" Using the QV System QWIK, you can make User QWIKs that execute different code"
^%ZVEMS("ZZ","VENDOR",7)=" depending on your Mumps implementation. To illustrate, let's take the QWIK"
^%ZVEMS("ZZ","VENDOR",8)=" called UCI you set up earlier, and make it so this QWIK will work in both"
^%ZVEMS("ZZ","VENDOR",9)=" Micronetics and DataTree Mumps."
^%ZVEMS("ZZ","VENDOR",10)=""
^%ZVEMS("ZZ","VENDOR",11)=" In Micronetics Mumps you switch UCIs with 'DO ^%LOGON'. In DataTree you use"
^%ZVEMS("ZZ","VENDOR",12)=" 'd ^%nspace'. We've already set up a UCI QWIK. Now type '..QV'. You will be"
^%ZVEMS("ZZ","VENDOR",13)=" prompted for a QWIK name. Enter 'UCI'. Next, the VShell will display a list"
^%ZVEMS("ZZ","VENDOR",14)=" of vendors and you will be asked to select one. Then it will ask for the"
^%ZVEMS("ZZ","VENDOR",15)=" vendor specific code you want this QWIK to execute. You first select"
^%ZVEMS("ZZ","VENDOR",16)=" Micronetics and enter 'DO ^%LOGON'. Next, you select DataTree and enter"
^%ZVEMS("ZZ","VENDOR",17)=" 'd ^%nspace'. That's all there is to it."
^%ZVEMS("ZZ","VENDOR",18)=""
^%ZVEMS("ZZ","VENDOR",19)=" When you first enter the VShell, it identifies what Mumps vendor you are"
^%ZVEMS("ZZ","VENDOR",20)=" using. Whenever it executes a User QWIK, it first checks to see if there"
^%ZVEMS("ZZ","VENDOR",21)=" is a vendor specific version. If there is, it executes it. If there isn't,"
^%ZVEMS("ZZ","VENDOR",22)=" it executes the non-vendor specific version."
^%ZVEMS("ZZ","VENDOR",23)=""
^%ZVEMS("ZZ","VENDOR",24)=" There are a number of Vendor Generic System QWIKs located in box 5. These"
^%ZVEMS("ZZ","VENDOR",25)=" QWIKs have been set up using the principles described above. They will work"
^%ZVEMS("ZZ","VENDOR",26)=" the same for DSM, VAX DSM, DataTree, and Micronetics Mumps."
^%ZVEMS("ZZ","VGL1",1)=" V G L . . . . . . . . Victory Global Lister . . . . . . . . . . David Bolduc"
^%ZVEMS("ZZ","VGL1",2)=""
^%ZVEMS("ZZ","VGL1",3)=" NOTE: DUZ(0) must contain either '@' or '#' to run VGL."
^%ZVEMS("ZZ","VGL1",4)=""
^%ZVEMS("ZZ","VGL1",5)=" A)  E N T E R:"
^%ZVEMS("ZZ","VGL1",6)="                A global reference"
^%ZVEMS("ZZ","VGL1",7)="                      -or-"
^%ZVEMS("ZZ","VGL1",8)="          <SPACE>.... to select global using a file name or number"
^%ZVEMS("ZZ","VGL1",9)="          Global*.... to select global from a list"
^%ZVEMS("ZZ","VGL1",10)="               *D.... for a directory list (DSM,DT,MSM)"
^%ZVEMS("ZZ","VGL1",11)="              *%D.... for a library directory list (DSM,DT,MSM)"
^%ZVEMS("ZZ","VGL1",12)=""
^%ZVEMS("ZZ","VGL1",13)="   The global reference may contain variables which must be defined."
^%ZVEMS("ZZ","VGL1",14)="   Ranges can be specified with a "":"" (colon), and multiple arguments"
^%ZVEMS("ZZ","VGL1",15)="   with a "" "" (space). Ending in a closed paren will prevent the display"
^%ZVEMS("ZZ","VGL1",16)="   from going below the last node specified."
^%ZVEMS("ZZ","VGL1",17)=""
^%ZVEMS("ZZ","VGL1",18)="   EXAMPLES:"
^%ZVEMS("ZZ","VGL1",19)=""
^%ZVEMS("ZZ","VGL1",20)="       ^DD .................Will list all of ^DD."
^%ZVEMS("ZZ","VGL1",21)=""
^%ZVEMS("ZZ","VGL1",22)="       ^VA(200 .............Will list all of global ^VA using first level"
^%ZVEMS("ZZ","VGL1",23)="                            subscript 200."
^%ZVEMS("ZZ","VGL1",24)=""
^%ZVEMS("ZZ","VGL1",25)="       ^DPT(DFN ............Will list all of ^DPT using first level subscript"
^%ZVEMS("ZZ","VGL1",26)="                            equal to variable DFN."
^%ZVEMS("ZZ","VGL1",27)=""
^%ZVEMS("ZZ","VGL1",28)="       ^%ZIS* ..............List each ^%ZIS node by the first subscript level,"
^%ZVEMS("ZZ","VGL1",29)="                            and allow user to select one for viewing."
^%ZVEMS("ZZ","VGL1",30)=""
^%ZVEMS("ZZ","VGL1",31)="       ^DIC(4 9.4,1:10,0) ..In ^DIC the first level subscript may be either"
^%ZVEMS("ZZ","VGL1",32)="                            4 or 9.4, the second level subscript must be"
^%ZVEMS("ZZ","VGL1",33)="                            from 1 to 10, and the third level subscript"
^%ZVEMS("ZZ","VGL1",34)="                            must be 0."
^%ZVEMS("ZZ","VGL1",35)=""
^%ZVEMS("ZZ","VGL1",36)="       ^DPT(,,, ............Will display only those nodes of ^DPT whose"
^%ZVEMS("ZZ","VGL1",37)="                            subscript is 4 levels or lower."
^%ZVEMS("ZZ","VGL1",38)=""
^%ZVEMS("ZZ","VGL1",39)="       ^DIZ(,500:) .........In ^DIZ, any first level subscript, and second "
^%ZVEMS("ZZ","VGL1",40)="                            level subscript equal to or greater than 500."
^%ZVEMS("ZZ","VGL1",41)=""
^%ZVEMS("ZZ","VGL1",42)="       <SPACE>"
^%ZVEMS("ZZ","VGL1",43)="       Select FILE: 4 ......Select global for file 4 [INSTITUTION..^DIC(4,]."
^%ZVEMS("ZZ","VGL1",44)=""
^%ZVEMS("ZZ","VGL1",45)="       ^|""MGR"",""ROU""|EDI ...List ^EDI global which resides in MGR."
^%ZVEMS("ZZ","VGL2",1)=" V G L   E N T R Y   P O I N T S"
^%ZVEMS("ZZ","VGL2",2)=""
^%ZVEMS("ZZ","VGL2",3)="     ^%ZVEMG    Normal entry point"
^%ZVEMS("ZZ","VGL2",4)="    R^%ZVEMG    A Fileman subscript has the following pattern:"
^%ZVEMS("ZZ","VGL2",5)="                   Root..Variable..Constant..Variable..Constant..etc"
^%ZVEMS("ZZ","VGL2",6)="                Entry point R^%ZVEMG will display the variable portion of"
^%ZVEMS("ZZ","VGL2",7)="                the subscript in reverse video."
^%ZVEMS("ZZ","VGL2",8)="PARAM(var)^%ZVEMG  Parameter passing."
^%ZVEMS("ZZ","VGL2",9)=""
^%ZVEMS("ZZ","VGL2",10)=" E N T E R                            R  E  S  U  L  T"
^%ZVEMS("ZZ","VGL2",11)=" ---------    ----------------------------------------------------------------"
^%ZVEMS("ZZ","VGL2",12)="   'n'        Enter a REF number from the left hand column and the pieces of"
^%ZVEMS("ZZ","VGL2",13)="              the selected node will be displayed vertically. You can then"
^%ZVEMS("ZZ","VGL2",14)="              select a piece and view the data dictionary for the field"
^%ZVEMS("ZZ","VGL2",15)="              this piece represents."
^%ZVEMS("ZZ","VGL2",16)=""
^%ZVEMS("ZZ","VGL2",17)="              If the node you select is a Xref, the data dictionary for"
^%ZVEMS("ZZ","VGL2",18)="              the field setting the Xref, will be displayed. If the node is"
^%ZVEMS("ZZ","VGL2",19)="              a word processing field, the field will be displayed directly."
^%ZVEMS("ZZ","VGL2",20)="              If the node is a zero node, information on the contents of a"
^%ZVEMS("ZZ","VGL2",21)="              zero node will be displayed."
^%ZVEMS("ZZ","VGL2",22)=""
^%ZVEMS("ZZ","VGL2",23)="   <TAB>      As noted above, you select a node by entering it's REF number."
^%ZVEMS("ZZ","VGL2",24)="              You may also select a node by positioning the highlight located"
^%ZVEMS("ZZ","VGL2",25)="              on the extreme left hand side of the screen, and then hitting"
^%ZVEMS("ZZ","VGL2",26)="              <TAB>."
^%ZVEMS("ZZ","VGL2",27)=""
^%ZVEMS("ZZ","VGL2",28)="    A         This option allows you to start up an alternate session to"
^%ZVEMS("ZZ","VGL2",29)="              view a 2nd global."
^%ZVEMS("ZZ","VGL2",30)=""
^%ZVEMS("ZZ","VGL2",31)="    G         Goto a node number. G 1 will return you to the opening screen."
^%ZVEMS("ZZ","VGL2",32)="              G 1000 (or any high number) will cause the listing to begin with"
^%ZVEMS("ZZ","VGL2",33)="              the highest node that's been displayed."
^%ZVEMS("ZZ","VGL2",34)=""
^%ZVEMS("ZZ","VGL2",35)=" <HOME>,<F4><AL>  Returns you to the opening screen."
^%ZVEMS("ZZ","VGL2",36)=""
^%ZVEMS("ZZ","VGL2",37)=" <END>,<F4><AR>   Causes listing to begin with highest node displayed."
^%ZVEMS("ZZ","VGL2",38)=""
^%ZVEMS("ZZ","VGL2",39)="   S'n'       Skip over subscipt level 'n'."
^%ZVEMS("ZZ","VGL2",40)="              Example:  Assume you started the listing with the NEW PERSON"
^%ZVEMS("ZZ","VGL2",41)="              file ^VA(200, and you were now at ^VA(200,4,""FOF"",3.05,0). If"
^%ZVEMS("ZZ","VGL2",42)="              you wanted to skip to the next user, you would enter S2. This"
^%ZVEMS("ZZ","VGL2",43)="              means subscript level 2 would skip to the next value. This"
^%ZVEMS("ZZ","VGL2",44)="              would result in ^VA(200,5,0) being displayed."
^%ZVEMS("ZZ","VGL2",45)=""
^%ZVEMS("ZZ","VGL2",46)="    C         Enter Mumps code in the form of an IF statement. If True,"
^%ZVEMS("ZZ","VGL2",47)="              the node will be displayed. When you select 'C' you will see"
^%ZVEMS("ZZ","VGL2",48)="              a display of available variables. These variables may be used"
^%ZVEMS("ZZ","VGL2",49)="              in your code."
^%ZVEMS("ZZ","VGL2",50)=""
^%ZVEMS("ZZ","VGL2",51)="              NOTE: To run this option, DUZ(0) must contain '@'."
^%ZVEMS("ZZ","VGL2",52)=""
^%ZVEMS("ZZ","VGL2",53)="              Examples:"
^%ZVEMS("ZZ","VGL2",54)=""
^%ZVEMS("ZZ","VGL2",55)="                   I $P(GLVAL,U,2)=5"
^%ZVEMS("ZZ","VGL2",56)=""
^%ZVEMS("ZZ","VGL2",57)="              This will display only those nodes whose 2nd ""Piece"" equals 5."
^%ZVEMS("ZZ","VGL2",58)=""
^%ZVEMS("ZZ","VGL2",59)="                   I 1 W !?40,""PIECE 5: "",$P(GLVAL,U,5)"
^%ZVEMS("ZZ","VGL2",60)=""
^%ZVEMS("ZZ","VGL2",61)="              This will display ""Piece"" 5 on one line and the entire node on"
^%ZVEMS("ZZ","VGL2",62)="              the next, so you can track the changes in value of ""Piece"" 5."
^%ZVEMS("ZZ","VGL2",63)=""
^%ZVEMS("ZZ","VGL2",64)="              Some code searches may take a long time depending on the size"
^%ZVEMS("ZZ","VGL2",65)="              of the global being viewed. For this reason, I allow you to"
^%ZVEMS("ZZ","VGL2",66)="              abort a search by hitting any key. The display of all nodes"
^%ZVEMS("ZZ","VGL2",67)="              will resume in the normal fashion."
^%ZVEMS("ZZ","VGL2",68)=""
^%ZVEMS("ZZ","VGL2",69)="  VEDD        Allows branching to 'Electronic Data Dictionary' to view a file."
^%ZVEMS("ZZ","VGL2",70)=""
^%ZVEMS("ZZ","VGL2",71)="    ES        Edit a node's subscript. You are not allowed to edit the"
^%ZVEMS("ZZ","VGL2",72)="              subscript of a node that has decendents."
^%ZVEMS("ZZ","VGL2",73)=""
^%ZVEMS("ZZ","VGL2",74)="    EV        Edit a node's value."
^%ZVEMS("ZZ","VGL2",75)=""
^%ZVEMS("ZZ","VGL2",76)="    SA        SAves selected nodes which can then be UNsaved later. This"
^%ZVEMS("ZZ","VGL2",77)="              option is used to move code. In conjunction with my routine"
^%ZVEMS("ZZ","VGL2",78)="              editor, you can move code FROM a global TO a routine, FROM a"
^%ZVEMS("ZZ","VGL2",79)="              routine TO a global, or FROM a global TO another global."
^%ZVEMS("ZZ","VGL2",80)=""
^%ZVEMS("ZZ","VGL2",81)="    UN        UNsave previously SAved code."
^%ZVEMS("ZZ","VRR1",1)=" V R R . . . . . . . . . Routine Reader/Editor . . . . . . . . . David Bolduc"
^%ZVEMS("ZZ","VRR1",2)=""
^%ZVEMS("ZZ","VRR1",3)="  E N T R Y   P O I N T S:"
^%ZVEMS("ZZ","VRR1",4)=""
^%ZVEMS("ZZ","VRR1",5)="        DO ^%ZVEMR ................ Entry point to read a routine."
^%ZVEMS("ZZ","VRR1",6)="        DO PARAM^%ZVEMR(routine) .. To bypass routine selection prompt."
^%ZVEMS("ZZ","VRR1",7)="        X ^%ZVEMS(""E"") ............ VPE routine editor that utilizes"
^%ZVEMS("ZZ","VRR1",8)="                                    the VRR module."
^%ZVEMS("ZZ","VRR1",9)=""
^%ZVEMS("ZZ","VRR1",10)="  N O T E S:"
^%ZVEMS("ZZ","VRR1",11)=""
^%ZVEMS("ZZ","VRR1",12)="         VRR displays the line number for all routine lines not having a"
^%ZVEMS("ZZ","VRR1",13)="         line tag. It also displays total routine lines at the top of"
^%ZVEMS("ZZ","VRR1",14)="         the screen. The 2 vertical bars at the left side of the top and"
^%ZVEMS("ZZ","VRR1",15)="         bottom borders, help delineate line tags. The phrase ""1 of 4"""
^%ZVEMS("ZZ","VRR1",16)="         that appears in the top border, refers to the routine level you"
^%ZVEMS("ZZ","VRR1",17)="         are currently in. As you branch to other routines, the 1 will"
^%ZVEMS("ZZ","VRR1",18)="         increment."
^%ZVEMS("ZZ","VRR1",19)=""
^%ZVEMS("ZZ","VRR1",20)="         VRR has 4 modes: EDIT        Default mode"
^%ZVEMS("ZZ","VRR1",21)="                          INSERT      <RETURN>"
^%ZVEMS("ZZ","VRR1",22)="                          BLOCK       <F3>"
^%ZVEMS("ZZ","VRR1",23)="                          MENU BAR    <TAB>"
^%ZVEMS("ZZ","VRR1",24)=""
^%ZVEMS("ZZ","VRR1",25)="  E D I T   M O D E:"
^%ZVEMS("ZZ","VRR1",26)=""
^%ZVEMS("ZZ","VRR1",27)="  When you first enter the editor you are in EDIT mode. You may position"
^%ZVEMS("ZZ","VRR1",28)="  the cursor anywhere on the screen and enter code. Hitting <BS> will"
^%ZVEMS("ZZ","VRR1",29)="  delete the character to the left of the cursor. Hitting <DEL> will delete"
^%ZVEMS("ZZ","VRR1",30)="  the character under the cursor. When you move the cursor to the left side"
^%ZVEMS("ZZ","VRR1",31)="  of the screen, you are in the line tag area. When you enter or delete code"
^%ZVEMS("ZZ","VRR1",32)="  here, the code will be placed so that the tag is displayed correctly."
^%ZVEMS("ZZ","VRR1",33)=""
^%ZVEMS("ZZ","VRR1",34)="  I N S E R T   M O D E:"
^%ZVEMS("ZZ","VRR1",35)=""
^%ZVEMS("ZZ","VRR1",36)="  In EDIT mode, when you wish to add a new line of code, type <RETURN> to"
^%ZVEMS("ZZ","VRR1",37)="  change to INSERT mode. A blank line will open below the line the cursor"
^%ZVEMS("ZZ","VRR1",38)="  is currently on. You may now add new code. Use <TAB> as a line start"
^%ZVEMS("ZZ","VRR1",39)="  character. Once you hit <TAB> you are returned to EDIT mode. If you hit"
^%ZVEMS("ZZ","VRR1",40)="  <RETURN> without adding any new code, the opened line will be closed."
^%ZVEMS("ZZ","VRR1",41)=""
^%ZVEMS("ZZ","VRR1",42)="  B L O C K   M O D E:"
^%ZVEMS("ZZ","VRR1",43)=""
^%ZVEMS("ZZ","VRR1",44)="  In EDIT mode, type <F3> to change to BLOCK mode. The word BLOCK will"
^%ZVEMS("ZZ","VRR1",45)="  appear at the upper right of the screen. Use the Up/Down Arrow keys to"
^%ZVEMS("ZZ","VRR1",46)="  highlight routine lines. To act on the highlighted lines do:"
^%ZVEMS("ZZ","VRR1",47)="     <ESC>C .....Copy lines to the clipboard"
^%ZVEMS("ZZ","VRR1",48)="     <ESC>X .....Cut lines to the clipboard"
^%ZVEMS("ZZ","VRR1",49)="     <DEL> ......Delete lines"
^%ZVEMS("ZZ","VRR1",50)="     <F3> .......Return to EDIT mode without taking action"
^%ZVEMS("ZZ","VRR1",51)=""
^%ZVEMS("ZZ","VRR1",52)="  While in BLOCK mode, you may position the cursor and then hit:"
^%ZVEMS("ZZ","VRR1",53)="     <F1><AL> ...Highlight all lines from cursor to top of routine"
^%ZVEMS("ZZ","VRR1",54)="     <F1><AR> ...Highlight all lines from cursor to bottom of routine"
^%ZVEMS("ZZ","VRR1",55)=""
^%ZVEMS("ZZ","VRR1",56)="  When you've returned to EDIT mode, position the cursor and hit <ESC>V"
^%ZVEMS("ZZ","VRR1",57)="  to paste saved lines into the current routine. The new lines will be"
^%ZVEMS("ZZ","VRR1",58)="  inserted below the cursor. In MENU BAR mode you can branch to other routines"
^%ZVEMS("ZZ","VRR1",59)="  save code to the clipboard, return to the current routine, and paste the"
^%ZVEMS("ZZ","VRR1",60)="  code in."
^%ZVEMS("ZZ","VRR1",61)=""
^%ZVEMS("ZZ","VRR1",62)="  M E N U   B A R   M O D E:"
^%ZVEMS("ZZ","VRR1",63)=""
^%ZVEMS("ZZ","VRR1",64)="  In EDIT mode, type <TAB> to change to MENU BAR mode. This positions the"
^%ZVEMS("ZZ","VRR1",65)="  cursor at the bottom of the screen and the following menu becomes active:"
^%ZVEMS("ZZ","VRR1",66)=""
^%ZVEMS("ZZ","VRR1",67)="    R         Branch to selected routine."
^%ZVEMS("ZZ","VRR1",68)="              NOTE: You can also branch to a routine while in EDIT mode."
^%ZVEMS("ZZ","VRR1",69)="              To do so, position the cursor over the ""^"" part of any routine"
^%ZVEMS("ZZ","VRR1",70)="              referenced on the screen, and hit <ESC>R."
^%ZVEMS("ZZ","VRR1",71)=""
^%ZVEMS("ZZ","VRR1",72)="    F         Find selected Line Tag. Search begins on next line after cursor."
^%ZVEMS("ZZ","VRR1",73)="              Use <ESC>N in EDIT mode to find next occurance."
^%ZVEMS("ZZ","VRR1",74)=""
^%ZVEMS("ZZ","VRR1",75)="    L         Locate selected string. Search begins on next line after cursor."
^%ZVEMS("ZZ","VRR1",76)="              Use <ESC>N in EDIT mode to find next occurance."
^%ZVEMS("ZZ","VRR1",77)=""
^%ZVEMS("ZZ","VRR1",78)="    G         Move to selected line number in current routine. Also, you may"
^%ZVEMS("ZZ","VRR1",79)="              goto a line by entering 'Line Tag+Offset' (Ex: EN+15)"
^%ZVEMS("ZZ","VRR1",80)=""
^%ZVEMS("ZZ","VRR1",81)="    J         Join 2 lines you select."
^%ZVEMS("ZZ","VRR1",82)=""
^%ZVEMS("ZZ","VRR1",83)="    JC        Join next line to current line."
^%ZVEMS("ZZ","VRR1",84)=""
^%ZVEMS("ZZ","VRR1",85)="    S         Display routine size."
^%ZVEMS("ZZ","VRR1",86)=""
^%ZVEMS("ZZ","VRR1",87)="    LC        Locate and change all occurances of selected string."
^%ZVEMS("ZZ","VRR1",88)=""
^%ZVEMS("ZZ","VRR1",89)="    RS        Search routine(s) for selected string."
^%ZVEMS("ZZ","VRR1",90)=""
^%ZVEMS("ZZ","VRR1",91)="    VEDD      Branch to Electronic Data Dictionary"
^%ZVEMS("ZZ","VRR1",92)=""
^%ZVEMS("ZZ","VRR1",93)="    VGL       Branch to Global Lister"
^%ZVEMS("ZZ","VRR1",94)="              NOTE: You may also branch to a global while in EDIT mode,"
^%ZVEMS("ZZ","VRR1",95)="              by passing the global reference as a parameter. To do so,"
^%ZVEMS("ZZ","VRR1",96)="              find the global reference on the screen, position the curosr"
^%ZVEMS("ZZ","VRR1",97)="              at the start of the name and hit <ESC>G. Then position the"
^%ZVEMS("ZZ","VRR1",98)="              cursor as far to the right as you want to include as your"
^%ZVEMS("ZZ","VRR1",99)="              parameter, and hit <ESC>G again."
^%ZVEMS("ZZ","VRR1",100)=""
^%ZVEMS("ZZ","VRR1",101)="    CALL      Helps you construct certain programmer calls and inserts"
^%ZVEMS("ZZ","VRR1",102)="              them into your code."
^%ZVEMS("ZZ","VRR1",103)=""
^%ZVEMS("ZZ","VRR1",104)="    FMC       View VShell's 'Fileman Calls' database."
^%ZVEMS("ZZ","VRR1",105)=""
^%ZVEMS("ZZ","VRR1",106)="    ASC       View VShell's 'ASCII Table' display."
^%ZVEMS("ZZ","VRR1",107)=""
^%ZVEMS("ZZ","VRR1",108)="    PUR       Purge the Clipboard (^%ZVEMS(""E"",""SAVEVRR""))."
^%ZVEMS("ZZ","VRR2",109)=" NOTES: <AU>=Arrow Up  <AD>=Arrow Down  <AL>=Arrow Left  <AR>=Arrow Right"
^%ZVEMS("ZZ","VRR2",110)=""
^%ZVEMS("ZZ","VRR2",111)=" <AU> ........: Cursor up 1 line        <F1><AU> ..: Cursor to top of page"
^%ZVEMS("ZZ","VRR2",112)=" <AD> ........: Cursor down 1 line      <F1><AD> ..: Cursor to bottom of page"
^%ZVEMS("ZZ","VRR2",113)=" <AL> ........: Cursor left 1 char      <F1><AL> ..: Cursor to start of line"
^%ZVEMS("ZZ","VRR2",114)=" <AR> ........: Cursor right 1 char     <F1><AR> ..: Cursor to end of line"
^%ZVEMS("ZZ","VRR2",115)=" <PGUP> ......: Up 1 page               <F2><AU> ..: Cursor up 5 lines"
^%ZVEMS("ZZ","VRR2",116)=" <PGDN> ......: Down 1 page             <F2><AD> ..: Cursor down 5 lines"
^%ZVEMS("ZZ","VRR2",117)=" <HOME> ......: Top of Rtn              <F2><AL> ..: Cursor left 15 char"
^%ZVEMS("ZZ","VRR2",118)=" <END> .......: Bottom of Rtn           <F2><AR> ..: Cursor right 15 char"
^%ZVEMS("ZZ","VRR2",119)="                                        <F4><AU> ..: Up 1 page"
^%ZVEMS("ZZ","VRR2",120)=" <ESC>G ......: Branch to global        <F4><AD> ..: Down 1 page"
^%ZVEMS("ZZ","VRR2",121)=" <ESC>R ......: Branch to routine       <F4><AL> ..: Top of Rtn"
^%ZVEMS("ZZ","VRR2",122)=" <ESC>H ......: Help - General          <F4><AR> ..: Bottom of Rtn"
^%ZVEMS("ZZ","VRR2",123)=" <ESC>K ......: Help - Keyboard"
^%ZVEMS("ZZ","VRR2",124)=" <ESC>X ......: Cut                     <RETURN> ..: Insert Mode"
^%ZVEMS("ZZ","VRR2",125)=" <ESC>C ......: Copy                    <TAB> .....: Menu Bar Mode"
^%ZVEMS("ZZ","VRR2",126)=" <ESC>V ......: Paste                   <F3> ......: Block Mode"
^%ZVEMS("ZZ","VRR2",127)=" <ESC>N ......: Find next occurance"
^%ZVEMS("ZZ","VRR2",128)=" <ESC>D ......: Delete current line     <F1>L .....: Move down 1 rtn line"
^%ZVEMS("ZZ","VRR2",129)=" <ESC>B ......: Break line              <F1><F1> ..: Left side of line"
^%ZVEMS("ZZ","VRR2",130)=" <ESC><ESC> ..: Quit                    <F2><F2> ..: Right side of line"
^%ZVEMS("ZZ","VRR2",131)=""
^%ZVEMS("ZZ","VRR2",132)=" HINTS FOR REMEMBERING KEY COMBINATIONS:"
^%ZVEMS("ZZ","VRR2",133)=" <F1> and <F2> with the arrow keys, move the cursor WITHIN the current page."
^%ZVEMS("ZZ","VRR2",134)=" <F1> is extreme movements and <F2> is incremental movements. <F4> and the"
^%ZVEMS("ZZ","VRR2",135)=" arrow keys, move the cursor OUTSIDE the current page. <ESC> keys run"
^%ZVEMS("ZZ","VRR2",136)=" actions."
^%ZVEMS("ZZ","WEB",243)=" Insert HTML code onto new lines"
^%ZVEMS("ZZ","WEB",244)=" ---------------------------------------------------------------------------"
^%ZVEMS("ZZ","WEB",245)=" xxx ...... Generic          <xxx></xxx>"
^%ZVEMS("ZZ","WEB",246)=" C ........ Comment          <!-- -->"
^%ZVEMS("ZZ","WEB",247)=" I ........ Image            <IMG SRC=""IMAGES/X.GIF"">"
^%ZVEMS("ZZ","WEB",248)=" L ........ List             <UL><LI>"
^%ZVEMS("ZZ","WEB",249)=" LK ....... Link             <A HREF=""DOC.HTM"">Click Here"
^%ZVEMS("ZZ","WEB",250)=" R ........ Required tags    <HTML><HEADER><TITLE><BODY>"
^%ZVEMS("ZZ","WEB",251)=" T ........ Table            <TABLE><TR><TD>"
^%ZVEMS("ZZ","WEB",252)=""
^%ZVEMS("ZZ","WEB",253)=" Insert HTML code into current line (preceed code with ""."")"
^%ZVEMS("ZZ","WEB",254)=" ---------------------------------------------------------------------------"
^%ZVEMS("ZZ","WEB",255)=" .xxx ..... Generic       <xxx>"
^%ZVEMS("ZZ","WEB",256)=" .AQUA    238E68    .GREEN  00FF00    .PURPLE 871F78    .YELLOW FFFF00"
^%ZVEMS("ZZ","WEB",257)=" .BLACK   000000    .LIME   32CD32    .RED    FF0000"
^%ZVEMS("ZZ","WEB",258)=" .BLUE    0000FF    .MAROON 8E236B    .SILVER 545454"
^%ZVEMS("ZZ","WEB",259)=" .FUCHSIA FF00FF    .NAVY   23238E    .TEAL   00FFFF"
^%ZVEMS("ZZ","WEB",260)=" .GRAY    C0C0C0    .OLIVE  238E23    .WHITE  FFFFFF"
