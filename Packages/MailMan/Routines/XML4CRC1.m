XML4CRC1 ;(WASH ISC)/RFJ-Block Mode Protocol ;04/17/2002  10:57
 ;;8.0;MailMan;;Jun 28, 2002
OPEN D GET,OP
 S:'$D(XMESC) XMESC=$C(126) S:'$D(XMFS) XMFS=255 S:'$D(XM) XM="" S (XMSSQ,XMRSQ)=1 Q
GET S X=XMCHAN,DIC="^DIC(3.4,",DIC(0)="Z" D ^DIC S XMCHAN=+Y
 I '$D(^DIC(3.4,XMCHAN,0)) S ER=1,Y="Invalid channel" Q
G2 S XMPROT=$P(^DIC(3.4,XMCHAN,0),U,1)
 F X=1:1:4 S @($P("XMSEN^XMREC^XMOPEN^XMCLOSE",U,X))=$S($D(^(X)):^(X),1:"Q")
 Q
OP I $D(XMOPEN) X:$L(XMOPEN) XMOPEN
 I '$D(XMQUIET) S X=255 X ^%ZOSF("RM")
 Q
C X ^%ZOSF("EON")
 I $D(XMCLOSE) X:$L(XMCLOSE) XMCLOSE
 Q
SEND ;Sends XMSG, returns ER=0 or 1, and XMLER=number of "soft" errors
 I $L(XMSG)>255 S XMLER=0,ER=1 G SRQ
 I XMSG'?.ANP S X=XMSG,XMSG="" F %=1:1:$L(X) S:$E(X,%)'?1C!($A(X,%)=9) XMSG=XMSG_$E(X,%)
 D SRINIT S X=XMSG,XMLCC=XMLCC+$L(XMSG) D SUM
SL S XMLER=XMLER+1 I (XMLER+1)>XMLMAXER D NEWSTRAT
 I ER W XMLERR,$C(13) G SRQ
 D BUFLUSH W XMSG,$C(13) W XMLINE,U,XMSUM,$C(13) R XMLX:XMLTIME G:XMLX=(XMLINE_U_XMLACK) SRQ
 S XMLY=XMLX=(XMLINE_U_XMLNAK),XMLZ=0 D:'XMLY ENQ G SL:XMLY,SRQ
ENQ ;Assume the ACK/NAK was garbled by noise and try to re-establish contact
 S XMLZ=XMLZ+1 I XMLZ>XMLMAXER S (ER,XMLY)=1 Q
 D BUFLUSH W XMLENQ,$C(13) R XMLX:XMLTIME Q:XMLX=(XMLINE_U_XMLACK)
 I XMLX[XMLACK!(XMLX[XMLNAK),+XMLX=XMLINE!(+XMLX=XMLINE-1) S XMLY=1 Q
 H 1 G ENQ
REC ;Receives XMRG, returns ER=0 or 1, and XMLER=number of "soft" errors
 D SRINIT S:'$D(XMLAN) XMLAN=XMLINE_U_XMLNAK
RL S XMLER=XMLER+1 I (XMLER+1)>XMLMAXER D NEWSTRAT I ER=1 G SRQ
 R XMRG#255:$S($D(XMSTIME):XMSTIME,1:XMLTIME) S XMLCC=$S('$D(XMLCC):$L(XMRG),1:XMLCC+$L(XMRG)),XMLZ=$S('$T:-1,XMRG=XMLENQ:0,XMRG=XMLERR:2,1:1),%=2
 S %=2 D PROG^XML4CRC I $D(XMLIN),XMLIN'<1 G REC^XML4CRC:XMRG["*"
 S ER=XMLZ=2 G:XMLZ>1 SRQ I XMLZ<1 D BUFLUSH W XMLAN,$C(13) G RL
 R XMLY:XMLTIME I +XMLY=XMLINE S X=XMRG D SUM S XMLZ=XMSUM=$P(XMLY,U,2) G RL2
 S XMLZ=0 I +XMLY=(XMLINE-1),XMLINE'=1 D BUFLUSH W +XMLY,U,XMLACK,$C(13) G RL
RL2 D:$D(XMLBMER) KILL^XML4CRC S XMLAN=XMLINE_U_$S(XMLZ:XMLACK,1:XMLNAK) D BUFLUSH W XMLAN,$C(13)
 G SRQ:XMLZ,RL
SRINIT ;Initialize variables for Send/Receive
 I '$D(XMLBTST) S XMLBTST=+$H_","_($P($H,",",2)-.001),XMLCC=0 ;Time stamp when message started
 S XMLINE=$S('$D(XMLINE):1,1:XMLINE+1),XMLACK="ACK",XMLNAK="NAK"
 S XMLENQ=$C(9)_"ENQ"_$C(9),XMLERR=$C(9)_"ERROR"_$C(9)
 S XMLER=-1 ;soft error count
 S XMLMAXER=5 ;maximum allowable soft errors
 S XMLTIME=10 ;length of READ time
 S ER=0 ;non-recoverable error flag
 Q
NEWSTRAT ;Select new strategy, one or both machines may be slow
 I XMLMAXER=5 S ER=1 Q  ;already tried new strategy, give up.
 S XMTLER=$S('$D(XMTLER):XMLER,1:XMTLER+XMLER),XMLER=0 ;add to total
 S XMLMAXER=5 ;reduce allowable soft errors
 S XMLTIME=30 ;increase the READ time
 Q
SRQ ;Exit from Send/Receive
 S XMTLER=$S('$D(XMTLER):XMLER,1:XMTLER+XMLER) ;Total errors
 K XMLACK,XMLNAK,XMLENQ,XMLERR,XMLMAXER,XMLTIME,XMLX,XMLY,XMLZ
 Q
BUFLUSH ;Flush any characters out of the buffer
 Q:'$D(XMBFLUSH)
 X ^%ZOSF("TRMON") S X=$P($H,",",2) F %=1:1 R %:0 Q:'$T  S %=$P($H,",",2) S:%<X %=%+86400 Q:%-X>15
 X ^%ZOSF("TRMOFF") Q
SUM ;Calculate checksum, accounting also for the character's position
 I '$D(XMOS) D LPC^XMLSWP0
 I $D(XMOS(0)) X XMOS(0) Q
 I XMOS["VAX DSM" S XMSUM=$ZC(%LPC,X)+$L(X)*$L(X) Q
 I XMOS["DSM" S XMSUM=$ZC(LPC,X)+$L(X)*$L(X) Q
 I XMOS["M/11"!(XMOS["M/VX") S XMSUM=$ZC(X)+$L(X)*$L(X) Q
 S XMSUM=0 F %=1:1:$L(X) S XMSUM=XMSUM+($A(X,%)*%)
 Q
